%% -*- erlang-indent-level: 4;indent-tabs-mode: nil -*-

{ping, <<"SELECT 'pong' as ping LIMIT 1">>}.

{find_by_username_for_authn,
 <<"SELECT id, authz_id, username, pubkey_version, public_key FROM users WHERE "
   "(username = $1) LIMIT 1">>}.

{find_node_by_orgid_name,
 <<"SELECT id, authz_id, org_id, name, environment, last_updated_by,"
   " created_at, updated_at, serialized_object FROM nodes WHERE (org_id = $1"
   " AND name = $2) LIMIT 1">>}.

{insert_node,
 <<"INSERT INTO nodes (id, authz_id, org_id, name, environment,"
   " last_updated_by, created_at, updated_at, serialized_object ) VALUES"
   " ($1, $2, $3, $4, $5, $6, $7, $8, $9)">>}.

{update_node_by_id,
 <<"UPDATE nodes SET environment= $1, last_updated_by= $2, updated_at= $3, "
   "serialized_object= $4 WHERE id= $5">>}.

{delete_node_by_id, <<"DELETE FROM nodes WHERE id= $1">>}.

{delete_node_by_name, <<"DELETE FROM nodes WHERE id= $1">>}.

{list_nodes_for_org, <<"SELECT name FROM nodes WHERE org_id= $1">>}.
{list_env_nodes_for_org,
 <<"SELECT name FROM nodes WHERE org_id= $1 AND environment = $2">>}.

%% bulk_get_nodes_X queries used for fetching nodes returned from
%% search only returns the gzip JSON data.  If a node has been
%% deleted, you may get back fewer than X nodes and you won't know
%% which ids were not found without parsing and inspecting what did
%% come back.
{bulk_get_nodes_1, <<"SELECT serialized_object FROM nodes WHERE id IN ($1)">>}.
{bulk_get_nodes_2, <<"SELECT serialized_object FROM nodes WHERE id IN ($1,$2)">>}.
{bulk_get_nodes_3, <<"SELECT serialized_object FROM nodes WHERE id IN ($1,$2,$3)">>}.
{bulk_get_nodes_4, <<"SELECT serialized_object FROM nodes WHERE id IN ($1,$2,$3,$4)">>}.
{bulk_get_nodes_5, <<"SELECT serialized_object FROM nodes WHERE id IN ($1,$2,$3,$4,$5)">>}.
