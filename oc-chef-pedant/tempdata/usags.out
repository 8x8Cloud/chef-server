Configuring logging...
Creating platform...
Configured URL: https://api.chef-server.dev
Creating org pedant_testorg_api_723
Validating Org Creation
Run options: include {:focus=>true, :usags=>true}

Randomized with seed 34658

.

Finished in 0.04218 seconds
1 example, 0 failures

Randomized with seed 34658

Starting Pedant Run: 2015-05-15 19:58:27 UTC
 _______  _______  _______  _______  _______  ______   _______
|       ||       ||       ||       ||       ||      | |       |
|   _   ||    _  ||  _____||       ||   _   ||  _    ||    ___|
|  | |  ||   |_| || |_____ |       ||  | |  || | |   ||   |___
|  |_|  ||    ___||_____  ||      _||  |_|  || |_|   ||    ___|
|       ||   |     _____| ||     |_ |       ||       ||   |___
|_______||___|    |_______||_______||_______||______| |_______|

     _______  _______  ______   _______  __    _  _______
    |       ||       ||      | |   _   ||  |  | ||       |
    |    _  ||    ___||  _    ||  |_|  ||   |_| ||_     _|
    |   |_| ||   |___ | | |   ||       ||       |  |   |
    |    ___||    ___|| |_|   ||       ||  _    |  |   |
    |   |    |   |___ |       ||   _   || | |   |  |   |
    |___|    |_______||______| |__| |__||_|  |__|  |___|

                    "Accuracy Over Tact"

                  === Testing Environment ===
                 Config File: /var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb
       HTTP Traffic Log File: /var/log/opscode/oc-chef-pedant/http-traffic.log

Running tests from the following directories:
/host/oc-chef-pedant/spec/api
Run options:
  include {:focus=>true, :usags=>true}
  exclude {:intermittent_failure=>true, :cleanup=>true}

All examples were filtered out; ignoring {:focus=>true, :usags=>true}

Randomized with seed 24150


ACL API
[33m  /users/<name>/_acl endpoint (PENDING: No reason given)[0m
  /ANY/_acl
[32m    can get org acl by default[0m
  /organizations/_acl endpoint
    GET /organizations/_acl
      admin user
[32m        can get object ACL[0m
      default normal user
[32m        returns 403[0m
      default client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      with modified ACLs
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get ACL[0m
        when normal client granted GRANT permission
[32m          can get ACL[0m
    PUT /organizations/_acl
      admin user
[32m        returns 405[0m
    POST /organizations/_acl
      admin user
[32m        returns 405[0m
    DELETE /organizations/_acl
      admin user
[32m        returns 405[0m
  /organizations/_acl/create endpoint
    PUT /organizations/_acl/create
      admin user
[32m        can modify ACL[0m
      default normal user
[32m        returns 403[0m
      default normal client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      malformed requests
        invalid actor
[32m          returns 400[0m
        invalid group
[32m          returns 400[0m
        missing actors
[32m          returns 400[0m
        missing groups
[32m          returns 400[0m
        empty body
[32m          returns 400[0m
      with modified ACLs
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can modify ACL[0m
        when normal client granted GRANT permission
[32m          can modify ACL[0m
    GET /organizations/_acl/create
      admin user
[32m        returns 405[0m
    POST /organizations/_acl/create
      admin user
[32m        returns 405[0m
    DELETE /organizations/_acl/create
      admin user
[32m        returns 405[0m
  /organizations/_acl/read endpoint
    PUT /organizations/_acl/read
      admin user
[32m        can modify ACL[0m
      default normal user
[32m        returns 403[0m
      default normal client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      malformed requests
        invalid actor
[32m          returns 400[0m
        invalid group
[32m          returns 400[0m
        missing actors
[32m          returns 400[0m
        missing groups
[32m          returns 400[0m
        empty body
[32m          returns 400[0m
      with modified ACLs
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can modify ACL[0m
        when normal client granted GRANT permission
[32m          can modify ACL[0m
    GET /organizations/_acl/read
      admin user
[32m        returns 405[0m
    POST /organizations/_acl/read
      admin user
[32m        returns 405[0m
    DELETE /organizations/_acl/read
      admin user
[32m        returns 405[0m
  /organizations/_acl/update endpoint
    PUT /organizations/_acl/update
      admin user
[32m        can modify ACL[0m
      default normal user
[32m        returns 403[0m
      default normal client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      malformed requests
        invalid actor
[32m          returns 400[0m
        invalid group
[32m          returns 400[0m
        missing actors
[32m          returns 400[0m
        missing groups
[32m          returns 400[0m
        empty body
[32m          returns 400[0m
      with modified ACLs
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can modify ACL[0m
        when normal client granted GRANT permission
[32m          can modify ACL[0m
    GET /organizations/_acl/update
      admin user
[32m        returns 405[0m
    POST /organizations/_acl/update
      admin user
[32m        returns 405[0m
    DELETE /organizations/_acl/update
      admin user
[32m        returns 405[0m
  /organizations/_acl/delete endpoint
    PUT /organizations/_acl/delete
      admin user
[32m        can modify ACL[0m
      default normal user
[32m        returns 403[0m
      default normal client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      malformed requests
        invalid actor
[32m          returns 400[0m
        invalid group
[32m          returns 400[0m
        missing actors
[32m          returns 400[0m
        missing groups
[32m          returns 400[0m
        empty body
[32m          returns 400[0m
      with modified ACLs
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can modify ACL[0m
        when normal client granted GRANT permission
[32m          can modify ACL[0m
    GET /organizations/_acl/delete
      admin user
[32m        returns 405[0m
    POST /organizations/_acl/delete
      admin user
[32m        returns 405[0m
    DELETE /organizations/_acl/delete
      admin user
[32m        returns 405[0m
  /organizations/_acl/grant endpoint
    PUT /organizations/_acl/grant
      admin user
[32m        can modify ACL[0m
      default normal user
[32m        returns 403[0m
      default normal client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      malformed requests
        invalid actor
[32m          returns 400[0m
        invalid group
[32m          returns 400[0m
        missing actors
[32m          returns 400[0m
        missing groups
[32m          returns 400[0m
        empty body
[32m          returns 400[0m
      with modified ACLs
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can modify ACL[0m
        when normal client granted GRANT permission
[32m          can modify ACL[0m
    GET /organizations/_acl/grant
      admin user
[32m        returns 405[0m
    POST /organizations/_acl/grant
      admin user
[32m        returns 405[0m
    DELETE /organizations/_acl/grant
      admin user
[32m        returns 405[0m
  /<type>/<name>/_acl endpoint
    for clients type
      GET /clients/<name>/_acl
        admin user
[32m          can get object ACL[0m
        default normal user
[32m          returns 403[0m
        default client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get object ACL[0m
        when normal client granted GRANT permission
[32m          can get object ACL[0m
        OC-1702 - when containing a missing group
[32m          should return the acl[0m
      PUT /clients/<name>/_acl
        admin user
[32m          returns 405[0m
      POST /clients/<name>/_acl
        admin user
[32m          returns 405[0m
      DELETE /clients/<name>/_acl
        admin user
[32m          returns 405[0m
      /clients/<name>/_acl/create endpoint
        GET /clients/<name>/_acl/create
          admin user
[32m            returns 405[0m
        PUT /clients/<name>/_acl/create
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /clients/<name>/_acl/create
          admin user
[32m            returns 405[0m
        DELETE /clients/<name>/_acl/create
          admin user
[32m            returns 405[0m
      /clients/<name>/_acl/read endpoint
        GET /clients/<name>/_acl/read
          admin user
[32m            returns 405[0m
        PUT /clients/<name>/_acl/read
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /clients/<name>/_acl/read
          admin user
[32m            returns 405[0m
        DELETE /clients/<name>/_acl/read
          admin user
[32m            returns 405[0m
      /clients/<name>/_acl/update endpoint
        GET /clients/<name>/_acl/update
          admin user
[32m            returns 405[0m
        PUT /clients/<name>/_acl/update
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /clients/<name>/_acl/update
          admin user
[32m            returns 405[0m
        DELETE /clients/<name>/_acl/update
          admin user
[32m            returns 405[0m
      /clients/<name>/_acl/delete endpoint
        GET /clients/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        PUT /clients/<name>/_acl/delete
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /clients/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        DELETE /clients/<name>/_acl/delete
          admin user
[32m            returns 405[0m
      /clients/<name>/_acl/grant endpoint
        GET /clients/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        PUT /clients/<name>/_acl/grant
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /clients/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        DELETE /clients/<name>/_acl/grant
          admin user
[32m            returns 405[0m
    for groups type
      GET /groups/<name>/_acl
        admin user
[32m          can get object ACL[0m
        default normal user
[32m          returns 403[0m
        default client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get object ACL[0m
        when normal client granted GRANT permission
[32m          can get object ACL[0m
        OC-1702 - when containing a missing group
[32m          should return the acl[0m
      PUT /groups/<name>/_acl
        admin user
[32m          returns 405[0m
      POST /groups/<name>/_acl
        admin user
[32m          returns 405[0m
      DELETE /groups/<name>/_acl
        admin user
[32m          returns 405[0m
      /groups/<name>/_acl/create endpoint
        GET /groups/<name>/_acl/create
          admin user
[32m            returns 405[0m
        PUT /groups/<name>/_acl/create
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /groups/<name>/_acl/create
          admin user
[32m            returns 405[0m
        DELETE /groups/<name>/_acl/create
          admin user
[32m            returns 405[0m
      /groups/<name>/_acl/read endpoint
        GET /groups/<name>/_acl/read
          admin user
[32m            returns 405[0m
        PUT /groups/<name>/_acl/read
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /groups/<name>/_acl/read
          admin user
[32m            returns 405[0m
        DELETE /groups/<name>/_acl/read
          admin user
[32m            returns 405[0m
      /groups/<name>/_acl/update endpoint
        GET /groups/<name>/_acl/update
          admin user
[32m            returns 405[0m
        PUT /groups/<name>/_acl/update
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /groups/<name>/_acl/update
          admin user
[32m            returns 405[0m
        DELETE /groups/<name>/_acl/update
          admin user
[32m            returns 405[0m
      /groups/<name>/_acl/delete endpoint
        GET /groups/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        PUT /groups/<name>/_acl/delete
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /groups/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        DELETE /groups/<name>/_acl/delete
          admin user
[32m            returns 405[0m
      /groups/<name>/_acl/grant endpoint
        GET /groups/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        PUT /groups/<name>/_acl/grant
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /groups/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        DELETE /groups/<name>/_acl/grant
          admin user
[32m            returns 405[0m
    for containers type
      GET /containers/<name>/_acl
        admin user
[32m          can get object ACL[0m
        default normal user
[32m          returns 403[0m
        default client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get object ACL[0m
        when normal client granted GRANT permission
[32m          can get object ACL[0m
        OC-1702 - when containing a missing group
[32m          should return the acl[0m
      PUT /containers/<name>/_acl
        admin user
[32m          returns 405[0m
      POST /containers/<name>/_acl
        admin user
[32m          returns 405[0m
      DELETE /containers/<name>/_acl
        admin user
[32m          returns 405[0m
      /containers/<name>/_acl/create endpoint
        GET /containers/<name>/_acl/create
          admin user
[32m            returns 405[0m
        PUT /containers/<name>/_acl/create
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /containers/<name>/_acl/create
          admin user
[32m            returns 405[0m
        DELETE /containers/<name>/_acl/create
          admin user
[32m            returns 405[0m
      /containers/<name>/_acl/read endpoint
        GET /containers/<name>/_acl/read
          admin user
[32m            returns 405[0m
        PUT /containers/<name>/_acl/read
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /containers/<name>/_acl/read
          admin user
[32m            returns 405[0m
        DELETE /containers/<name>/_acl/read
          admin user
[32m            returns 405[0m
      /containers/<name>/_acl/update endpoint
        GET /containers/<name>/_acl/update
          admin user
[32m            returns 405[0m
        PUT /containers/<name>/_acl/update
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /containers/<name>/_acl/update
          admin user
[32m            returns 405[0m
        DELETE /containers/<name>/_acl/update
          admin user
[32m            returns 405[0m
      /containers/<name>/_acl/delete endpoint
        GET /containers/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        PUT /containers/<name>/_acl/delete
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /containers/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        DELETE /containers/<name>/_acl/delete
          admin user
[32m            returns 405[0m
      /containers/<name>/_acl/grant endpoint
        GET /containers/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        PUT /containers/<name>/_acl/grant
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /containers/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        DELETE /containers/<name>/_acl/grant
          admin user
[32m            returns 405[0m
    for data type
      GET /data/<name>/_acl
        admin user
[32m          can get object ACL[0m
        default normal user
[32m          returns 403[0m
        default client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get object ACL[0m
        when normal client granted GRANT permission
[32m          can get object ACL[0m
        OC-1702 - when containing a missing group
[32m          should return the acl[0m
      PUT /data/<name>/_acl
        admin user
[32m          returns 405[0m
      POST /data/<name>/_acl
        admin user
[32m          returns 405[0m
      DELETE /data/<name>/_acl
        admin user
[32m          returns 405[0m
      /data/<name>/_acl/create endpoint
        GET /data/<name>/_acl/create
          admin user
[32m            returns 405[0m
        PUT /data/<name>/_acl/create
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /data/<name>/_acl/create
          admin user
[32m            returns 405[0m
        DELETE /data/<name>/_acl/create
          admin user
[32m            returns 405[0m
      /data/<name>/_acl/read endpoint
        GET /data/<name>/_acl/read
          admin user
[32m            returns 405[0m
        PUT /data/<name>/_acl/read
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /data/<name>/_acl/read
          admin user
[32m            returns 405[0m
        DELETE /data/<name>/_acl/read
          admin user
[32m            returns 405[0m
      /data/<name>/_acl/update endpoint
        GET /data/<name>/_acl/update
          admin user
[32m            returns 405[0m
        PUT /data/<name>/_acl/update
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /data/<name>/_acl/update
          admin user
[32m            returns 405[0m
        DELETE /data/<name>/_acl/update
          admin user
[32m            returns 405[0m
      /data/<name>/_acl/delete endpoint
        GET /data/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        PUT /data/<name>/_acl/delete
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /data/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        DELETE /data/<name>/_acl/delete
          admin user
[32m            returns 405[0m
      /data/<name>/_acl/grant endpoint
        GET /data/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        PUT /data/<name>/_acl/grant
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /data/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        DELETE /data/<name>/_acl/grant
          admin user
[32m            returns 405[0m
    for nodes type
      GET /nodes/<name>/_acl
        admin user
[32m          can get object ACL[0m
        default normal user
[32m          returns 403[0m
        default client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get object ACL[0m
        when normal client granted GRANT permission
[32m          can get object ACL[0m
        OC-1702 - when containing a missing group
[32m          should return the acl[0m
      PUT /nodes/<name>/_acl
        admin user
[32m          returns 405[0m
      POST /nodes/<name>/_acl
        admin user
[32m          returns 405[0m
      DELETE /nodes/<name>/_acl
        admin user
[32m          returns 405[0m
      /nodes/<name>/_acl/create endpoint
        GET /nodes/<name>/_acl/create
          admin user
[32m            returns 405[0m
        PUT /nodes/<name>/_acl/create
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /nodes/<name>/_acl/create
          admin user
[32m            returns 405[0m
        DELETE /nodes/<name>/_acl/create
          admin user
[32m            returns 405[0m
      /nodes/<name>/_acl/read endpoint
        GET /nodes/<name>/_acl/read
          admin user
[32m            returns 405[0m
        PUT /nodes/<name>/_acl/read
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /nodes/<name>/_acl/read
          admin user
[32m            returns 405[0m
        DELETE /nodes/<name>/_acl/read
          admin user
[32m            returns 405[0m
      /nodes/<name>/_acl/update endpoint
        GET /nodes/<name>/_acl/update
          admin user
[32m            returns 405[0m
        PUT /nodes/<name>/_acl/update
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /nodes/<name>/_acl/update
          admin user
[32m            returns 405[0m
        DELETE /nodes/<name>/_acl/update
          admin user
[32m            returns 405[0m
      /nodes/<name>/_acl/delete endpoint
        GET /nodes/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        PUT /nodes/<name>/_acl/delete
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /nodes/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        DELETE /nodes/<name>/_acl/delete
          admin user
[32m            returns 405[0m
      /nodes/<name>/_acl/grant endpoint
        GET /nodes/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        PUT /nodes/<name>/_acl/grant
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /nodes/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        DELETE /nodes/<name>/_acl/grant
          admin user
[32m            returns 405[0m
    for roles type
      GET /roles/<name>/_acl
        admin user
[32m          can get object ACL[0m
        default normal user
[32m          returns 403[0m
        default client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get object ACL[0m
        when normal client granted GRANT permission
[32m          can get object ACL[0m
        OC-1702 - when containing a missing group
[32m          should return the acl[0m
      PUT /roles/<name>/_acl
        admin user
[32m          returns 405[0m
      POST /roles/<name>/_acl
        admin user
[32m          returns 405[0m
      DELETE /roles/<name>/_acl
        admin user
[32m          returns 405[0m
      /roles/<name>/_acl/create endpoint
        GET /roles/<name>/_acl/create
          admin user
[32m            returns 405[0m
        PUT /roles/<name>/_acl/create
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /roles/<name>/_acl/create
          admin user
[32m            returns 405[0m
        DELETE /roles/<name>/_acl/create
          admin user
[32m            returns 405[0m
      /roles/<name>/_acl/read endpoint
        GET /roles/<name>/_acl/read
          admin user
[32m            returns 405[0m
        PUT /roles/<name>/_acl/read
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /roles/<name>/_acl/read
          admin user
[32m            returns 405[0m
        DELETE /roles/<name>/_acl/read
          admin user
[32m            returns 405[0m
      /roles/<name>/_acl/update endpoint
        GET /roles/<name>/_acl/update
          admin user
[32m            returns 405[0m
        PUT /roles/<name>/_acl/update
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /roles/<name>/_acl/update
          admin user
[32m            returns 405[0m
        DELETE /roles/<name>/_acl/update
          admin user
[32m            returns 405[0m
      /roles/<name>/_acl/delete endpoint
        GET /roles/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        PUT /roles/<name>/_acl/delete
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /roles/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        DELETE /roles/<name>/_acl/delete
          admin user
[32m            returns 405[0m
      /roles/<name>/_acl/grant endpoint
        GET /roles/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        PUT /roles/<name>/_acl/grant
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /roles/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        DELETE /roles/<name>/_acl/grant
          admin user
[32m            returns 405[0m
    for environments type
      GET /environments/<name>/_acl
        admin user
[32m          can get object ACL[0m
        default normal user
[32m          returns 403[0m
        default client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get object ACL[0m
        when normal client granted GRANT permission
[32m          can get object ACL[0m
        OC-1702 - when containing a missing group
[32m          should return the acl[0m
      PUT /environments/<name>/_acl
        admin user
[32m          returns 405[0m
      POST /environments/<name>/_acl
        admin user
[32m          returns 405[0m
      DELETE /environments/<name>/_acl
        admin user
[32m          returns 405[0m
      /environments/<name>/_acl/create endpoint
        GET /environments/<name>/_acl/create
          admin user
[32m            returns 405[0m
        PUT /environments/<name>/_acl/create
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /environments/<name>/_acl/create
          admin user
[32m            returns 405[0m
        DELETE /environments/<name>/_acl/create
          admin user
[32m            returns 405[0m
      /environments/<name>/_acl/read endpoint
        GET /environments/<name>/_acl/read
          admin user
[32m            returns 405[0m
        PUT /environments/<name>/_acl/read
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /environments/<name>/_acl/read
          admin user
[32m            returns 405[0m
        DELETE /environments/<name>/_acl/read
          admin user
[32m            returns 405[0m
      /environments/<name>/_acl/update endpoint
        GET /environments/<name>/_acl/update
          admin user
[32m            returns 405[0m
        PUT /environments/<name>/_acl/update
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /environments/<name>/_acl/update
          admin user
[32m            returns 405[0m
        DELETE /environments/<name>/_acl/update
          admin user
[32m            returns 405[0m
      /environments/<name>/_acl/delete endpoint
        GET /environments/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        PUT /environments/<name>/_acl/delete
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /environments/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        DELETE /environments/<name>/_acl/delete
          admin user
[32m            returns 405[0m
      /environments/<name>/_acl/grant endpoint
        GET /environments/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        PUT /environments/<name>/_acl/grant
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /environments/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        DELETE /environments/<name>/_acl/grant
          admin user
[32m            returns 405[0m
    for cookbooks type
      GET /cookbooks/<name>/_acl
        admin user
[32m          can get object ACL[0m
        default normal user
[32m          returns 403[0m
        default client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
        when normal user granted all permissions except GRANT
[32m          returns 403[0m
        when normal client granted all permissions except GRANT
[32m          returns 403[0m
        when normal user granted GRANT permission
[32m          can get object ACL[0m
        when normal client granted GRANT permission
[32m          can get object ACL[0m
        OC-1702 - when containing a missing group
[32m          should return the acl[0m
      PUT /cookbooks/<name>/_acl
        admin user
[32m          returns 405[0m
      POST /cookbooks/<name>/_acl
        admin user
[32m          returns 405[0m
      DELETE /cookbooks/<name>/_acl
        admin user
[32m          returns 405[0m
      /cookbooks/<name>/_acl/create endpoint
        GET /cookbooks/<name>/_acl/create
          admin user
[32m            returns 405[0m
        PUT /cookbooks/<name>/_acl/create
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /cookbooks/<name>/_acl/create
          admin user
[32m            returns 405[0m
        DELETE /cookbooks/<name>/_acl/create
          admin user
[32m            returns 405[0m
      /cookbooks/<name>/_acl/read endpoint
        GET /cookbooks/<name>/_acl/read
          admin user
[32m            returns 405[0m
        PUT /cookbooks/<name>/_acl/read
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /cookbooks/<name>/_acl/read
          admin user
[32m            returns 405[0m
        DELETE /cookbooks/<name>/_acl/read
          admin user
[32m            returns 405[0m
      /cookbooks/<name>/_acl/update endpoint
        GET /cookbooks/<name>/_acl/update
          admin user
[32m            returns 405[0m
        PUT /cookbooks/<name>/_acl/update
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /cookbooks/<name>/_acl/update
          admin user
[32m            returns 405[0m
        DELETE /cookbooks/<name>/_acl/update
          admin user
[32m            returns 405[0m
      /cookbooks/<name>/_acl/delete endpoint
        GET /cookbooks/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        PUT /cookbooks/<name>/_acl/delete
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /cookbooks/<name>/_acl/delete
          admin user
[32m            returns 405[0m
        DELETE /cookbooks/<name>/_acl/delete
          admin user
[32m            returns 405[0m
      /cookbooks/<name>/_acl/grant endpoint
        GET /cookbooks/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        PUT /cookbooks/<name>/_acl/grant
          admin user
[32m            can update ACL[0m
          default normal user
[32m            returns 403[0m
          default client
[32m            returns 403[0m
          outside user
[32m            returns 403[0m
          invalid user
[32m            returns 401[0m
          malformed requests
            invalid actor
[32m              returns 400[0m
            invalid group
[32m              returns 400[0m
            missing actors
[32m              returns 400[0m
            missing groups
[32m              returns 400[0m
            empty body
[32m              returns 400[0m
          normal user with all permissions except GRANT
[32m            returns 403[0m
          normal user with GRANT permission
[32m            can update ACL[0m
          normal client with all permissions except GRANT
[32m            returns 403[0m
          normal client with GRANT permission
[32m            can update ACL[0m
        POST /cookbooks/<name>/_acl/grant
          admin user
[32m            returns 405[0m
        DELETE /cookbooks/<name>/_acl/grant
          admin user
[32m            returns 405[0m

opscode-account user association
  starting state is sane
[32m    should start with no outstanding requests[0m
    a user not in the org
[32m      has a count of 0 invites[0m
[32m      invite list is empty[0m
  /users/USER/organizations endpoint
    invoking
[32m      post fails appopriately[0m
[32m      put fails appopriately[0m
[32m      delete fails appopriately[0m
      GET
[32m        returns a proper list of orgs for the user[0m
    invoking as
[32m      superuser succeeds[0m
[32m      the user succeeds[0m
[32m      an admin org user succeeds[0m
[32m      another org member fails[0m
[32m      some other user fails[0m
  attempting to get association requests for a user that does not exist
[32m    cannot find association list[0m
[32m    cannot find association count[0m
  when org admin is attempting to view user associations
[32m    does not permit admin to view associations[0m
[32m    does not permit admin to view association count[0m
  user already in an org
[32m    cannot be invited by a non-admin[0m
  when the organization does not exist
[32m    listing association requests replies with org not found[0m
[32m    creating a new association request replies org not found[0m
  listing association requests
[32m    fails with 404 if the organization does not exist[0m
    and association requests exist
[32m      returns list of associations for the organization[0m
[32m      returns list of associations for the user[0m
[32m      returns the correct count of associations for the user[0m
    and no association requests exist
[32m      returns an empty list of association requests for the organization[0m
[32m      returns an empty list of association requests for the user[0m
  user not in org
[32m    cannot invite itself to that org[0m
[32m    cannot be invited by non-admin user in the org[0m
    can be invited to the org by an admin
[32m      unless the user is already in the org[0m
[32m      and the invite can be rescinded[0m
[32m      and a rescinded invite can't be rescinded again[0m
[32m      and once an the invite is rescinded it can't be accepted[0m
[32m      and once an the invite is rescinded it can't be rejected.[0m
[32m      and can't be invited twice[0m
[32m      and can reject an invite[0m
[32m      deleting an invite via the /users path is not accepted[0m
[32m      and can accept an invite[0m
[32m      and can reject an invite, after which they cannot access things in the org[0m
[32m      and can only response with 'accept' or 'reject'[0m
[32m      and get set up properly[0m
      after a user is deleted from an org
[32m        they do not have access to view members of that org[0m
[32m        they do not have access to attempt to view themselves in an org[0m
[32m        an org admin no longer sees them in the org[0m
[32m        admin attempting to delete this user from the org results in a 400(r)/404(e)[0m
      and a valid invite is issued
[32m        an org admin cannot accept that invite on behalf of the user[0m
[32m        the global superuser can accept the invite on behalf of the user[0m
      when the inviting admin
[32m        is removed from admins group, invites issued by that admin cannot be accepted[0m
[33m        is removed from the org, invites issued by that admin cannot be accepted (PENDING: Known failure: passes w/ 200 b/c no USAG cleanup performed for deleted user)[0m
[33m        is removed from the system, invites issued by that admin can't by accepted (PENDING: Known failure: passes w/ 200 b/c no USAG or other group cleanup performed for deleted user)[0m
      OC-11708 - when last updator of users group is dissociated
[32m        can accept the invite[0m
      belonging to another org as well
Creating org pedant-otherorg-723
Deleting organization pedant-otherorg-723 ...
[32m        can accept an invite, even when they belong to another org[0m
  /organizations/<org>/users endpoint
    GET /organizations/<org>/users
      admin user
[32m        can get org users[0m
      default normal user
[32m        can get org users[0m
      default client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
    PUT /organizations/<org>/users
      admin user
[32m        returns  404[ruby]/405[erlang][0m
    DELETE /organizations/<org>/users
      admin user
[32m        returns  404[ruby]/405[erlang][0m
  /organizations/<org>/users/<name>
    GET /organizations/<org>/users/<name>
      superuser
[32m        can get user[0m
      admin user
[32m        can get user[0m
      default normal user
[32m        can get self[0m
      default client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      when requesting user that doesn't exist
[32m        returns 404[0m
    PUT /organizations/<org>/users/<name>
      admin user
[32m        returns  404[ruby]/405[erlang][0m
    POST /organizations/<org>/users/<name>
[32m      as superuser returns  404 in ruby and 405 in erlang[0m
[32m      as org admin user returns 404 in ruby and 405 in erlang[0m
[32m      as non-admin org user returns  404 in ruby and 405 in erlang[0m
    DELETE /organizations/<org>/users/<name>
      admin user
[32m        can delete user[0m
      user acting on self
[32m        when the actor is not an org admin, user can delete own association[0m
        when actor is also an org admin
[32m          cannot delete own org association[0m
[32m          prevents deletion and does not break the admin org association in the process[0m
      non-admin user
[32m        returns 403 (400 ruby - general fail)[0m
      default client
[32m        returns 403 (400 ruby - general fail)[0m
      when user doesn't exist
[32m        returns 404[0m
      OC-11708 - when last updator of users group is dissociated
        as an admin user
[32m          can delete[0m
        as a user acting on self
[32m          can delete[0m

opscode-account containers
  /containers endpoint
    GET /containers
      admin user
[32m        can get containers[0m
      normal user
[32m        can get containers[0m
      client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
    POST /containers
      permissions
        admin user
[32m          can create container[0m
        normal user
[32m          returns 403[0m
        client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
      container creation
        when container already exists
[32m          returns 409[0m
        with no container name
[32m          returns 400[0m
        name instead of container name
[32m          returns 400[0m
        with id instead of container name
[32m          can create container[0m
        with non-matching id and container name
[32m          can create container (id wins)[0m
        with bogus value in request
[32m          can create container (ignores bogus value)[0m
        with empty container name
[32m          returns 400[0m
        with space in container name
[32m          returns 400[0m
        with unicode in container name
[33m          can create container (PENDING: returns 400)[0m
        with users, clients, and containers
[32m          ignores them[0m
    DELETE /containers
      admin user
[32m        returns 404[0m
    PUT /containers
      admin user
[32m        returns 404[0m
  /containers/<name> endpoint
    GET /containers/<name>
      admin user
[32m        can get container[0m
      normal user
[32m        returns 403[0m
      client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
    DELETE /containers/<name>
      admin user
[32m        can delete container[0m
      normal user
[32m        returns 403[0m
      client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
    PUT /containers/<name>
[32m      is not allowed[0m
    POST /containers/<name>
      admin user
[32m        returns 404[0m

opscode-account groups
  /groups endpoint
    GET /groups
      admin user
[32m        can get groups[0m
      normal user
[32m        can get groups[0m
      client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
    POST /groups
      permissions
        admin user
[32m          can create group[0m
        normal user
[32m          returns 403[0m
        client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
      group creation
        when group already exists
[32m          returns 409[0m
        with no group name
[32m          returns 400[0m
        name instead of group name
[32m          returns 400[0m
        with id instead of group name
[32m          can create group[0m
        with non-matching id and group name
[32m          can create group (id wins)[0m
        with bogus value in request
[32m          can create group (ignores bogus value)[0m
        with empty group name
[32m          returns 400[0m
        with space in group name
[32m          returns 400[0m
        with unicode in group name
[33m          can create group (PENDING: returns 400)[0m
        with users, clients, and groups
[32m          ignores them[0m
    DELETE /groups
      admin user
[32m        returns 405[0m
    PUT /groups
      admin user
[32m        returns 405[0m
  /groups/<name> endpoint
    GET /groups/<name>
      admin user
[32m        can get group[0m
      normal user
[32m        can get group[0m
      normal user without read ACE returns 403
[32m        can't read group[0m
      normal user without any ACE returns 403
[32m        can't read group[0m
      client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      OC-11702 - when a containing a missing group
[32m        can get group[0m
    DELETE /groups/<name>
      admin user
[32m        can delete group[0m
      normal user
[32m        returns 403[0m
      client
[32m        returns 403[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
    PUT /groups/<name>
      permissions
        admin user
[32m          can update group[0m
        admin user cannot remove self from group
[33m          can update group (PENDING: pending discussion)[0m
        normal user with update ACE
[32m          can update group[0m
        normal user with update ACE cannot remove self
[33m          can update group (PENDING: pending discussion)[0m
        normal user without update ACE
[32m          returns 403[0m
        client
[32m          returns 403[0m
        outside user
[32m          returns 403[0m
        invalid user
[32m          returns 401[0m
      updating groups
        with different group name
[32m          will rename group[0m
[32m          will not overwrite existing group[0m
        with only user change
[32m          will update group[0m
        with only client change
[32m          will update group[0m
        with only group change
[32m          will update group[0m
        without groupname
[32m          will update group[0m
        with bogus id instead of groupname
[32m          will update group[0m
        with random bogus value
[32m          will update group[0m
        with empty groupname
[32m          returns 400[0m
        with bogus client
[33m          returns 400 (PENDING: returns 500 instead)[0m
        with bogus user
[33m          returns 400 (PENDING: returns 500 instead)[0m
        with bogus group
[33m          returns 400 (PENDING: returns 500 instead)[0m
        with empty actors
[32m          will not update group (nothing changed)[0m
        with no actors
[32m          will not update group (nothing changed)[0m
        with bogus actors
[33m          returns 400 (PENDING: returns 200(!) instead (but it doesn't actually change anything))[0m
    POST /groups/<name>
      admin user
[32m        returns 405[0m

chef server authorization checks
  for roles
    without starting resource
      POST /roles
        with an admin user
          behaves like successful POST auth for roles
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
        with a normal user
          behaves like successful POST auth for roles
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
        with a user with minimal permissions to create resource
          behaves like successful POST auth for roles
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
[32m            creates a child with restricted permissions[0m
        with a user with all permissions EXCEPT create
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
    with starting resource
      PUT /roles/<name>
        with an admin user
[32m          updates resource[0m
        with a normal user
[32m          updates resource[0m
        with a user with minimal permissions to update a resource
[32m          updates resource[0m
        with a user with all permissions EXCEPT update
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      DELETE /roles/<name>
        with an admin user
[32m          DELETE /roles/<name> succeeds[0m
        with a normal user
[32m          DELETE /roles/<name> succeeds[0m
        with a user with minimal permissions to delete a resource
[32m          DELETE /roles/<name> succeeds[0m
        with a user with all permissions EXCEPT delete
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      GET /roles
        with an admin user
[32m          GET /roles succeeds[0m
        with a normal user
[32m          GET /roles succeeds[0m
        with a user with minimal permissions to read resource
[32m          GET /roles succeeds[0m
        with a user with all permissions EXCEPT read
[32m          returns 403[0m
        with a client
[33m          GET /roles succeeds (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      GET /roles/<name>
        with an admin user
[32m          GET /roles/<name> succeeds[0m
        with a normal user
[32m          GET /roles/<name> succeeds[0m
        with a user with minimal permissions to read resource
[32m          GET /roles/<name> succeeds[0m
        with a user with all permissions EXCEPT read
[32m          returns 403[0m
        with a client
[33m          GET /roles/<name> succeeds (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
  for environments
    without starting resource
      POST /environments
        with an admin user
          behaves like successful POST auth for environments
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
        with a normal user
          behaves like successful POST auth for environments
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
        with a user with minimal permissions to create resource
          behaves like successful POST auth for environments
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
[32m            creates a child with restricted permissions[0m
        with a user with all permissions EXCEPT create
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
    with starting resource
      PUT /environments/<name>
        with an admin user
[32m          updates resource[0m
        with a normal user
[32m          updates resource[0m
        with a user with minimal permissions to update a resource
[32m          updates resource[0m
        with a user with all permissions EXCEPT update
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      DELETE /environments/<name>
        with an admin user
[32m          DELETE /environments/<name> succeeds[0m
        with a normal user
[32m          DELETE /environments/<name> succeeds[0m
        with a user with minimal permissions to delete a resource
[32m          DELETE /environments/<name> succeeds[0m
        with a user with all permissions EXCEPT delete
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      GET /environments
        with an admin user
[32m          GET /environments succeeds[0m
        with a normal user
[32m          GET /environments succeeds[0m
        with a user with minimal permissions to read resource
[32m          GET /environments succeeds[0m
        with a user with all permissions EXCEPT read
[32m          returns 403[0m
        with a client
[33m          GET /environments succeeds (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      GET /environments/<name>
        with an admin user
[32m          GET /environments/<name> succeeds[0m
        with a normal user
[32m          GET /environments/<name> succeeds[0m
        with a user with minimal permissions to read resource
[32m          GET /environments/<name> succeeds[0m
        with a user with all permissions EXCEPT read
[32m          returns 403[0m
        with a client
[33m          GET /environments/<name> succeeds (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
  for nodes
    without starting resource
      POST /nodes
        with an admin user
          behaves like successful POST auth for nodes
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
        with a normal user
          behaves like successful POST auth for nodes
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
        with a user with minimal permissions to create resource
          behaves like successful POST auth for nodes
[32m            returns 201 and a correct path[0m
[32m            creates the resource[0m
[32m            creates a child with restricted permissions[0m
        with a user with all permissions EXCEPT create
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
    with starting resource
      PUT /nodes/<name>
        with an admin user
[32m          updates resource[0m
        with a normal user
[32m          updates resource[0m
        with a user with minimal permissions to update a resource
[32m          updates resource[0m
        with a user with all permissions EXCEPT update
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      DELETE /nodes/<name>
        with an admin user
[32m          DELETE /nodes/<name> succeeds[0m
        with a normal user
[32m          DELETE /nodes/<name> succeeds[0m
        with a user with minimal permissions to delete a resource
[32m          DELETE /nodes/<name> succeeds[0m
        with a user with all permissions EXCEPT delete
[32m          returns 403[0m
        with a client
[33m          returns 403 (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      GET /nodes
        with an admin user
[32m          GET /nodes succeeds[0m
        with a normal user
[32m          GET /nodes succeeds[0m
        with a user with minimal permissions to read resource
[32m          GET /nodes succeeds[0m
        with a user with all permissions EXCEPT read
[32m          returns 403[0m
        with a client
[33m          GET /nodes succeeds (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m
      GET /nodes/<name>
        with an admin user
[32m          GET /nodes/<name> succeeds[0m
        with a normal user
[32m          GET /nodes/<name> succeeds[0m
        with a user with minimal permissions to read resource
[32m          GET /nodes/<name> succeeds[0m
        with a user with all permissions EXCEPT read
[32m          returns 403[0m
        with a client
[33m          GET /nodes/<name> succeeds (PENDING: No reason given)[0m
        with an outside user (admin of another org)
[32m          returns 403[0m

authenticate_user
  GET /authenticate_user
[32m    returns 404 ("Not Found") for superuser[0m
[32m    returns 404 ("Not Found") for admin/different user[0m
[32m    returns 404 ("Not Found") for non-admin/same user[0m
[32m    returns 404 ("Not Found") for invalid user[0m
  PUT /authenticate_user
[32m    returns 404 ("Not Found") for superuser[0m
[32m    returns 404 ("Not Found") for admin/different user[0m
[32m    returns 404 ("Not Found") for non-admin/same user[0m
[32m    returns 404 ("Not Found") for invalid user[0m
  POST /authenticate_user
    with correct credentials
[32m      superuser user returns 200 ("OK")[0m
[32m      admin/different user returns 403 ("Forbidden")[0m
[32m      non-admin/same user returns 403 ("Forbidden")[0m
[32m      invalid user returns 401 ("Unauthorized")[0m
    and user has external authentication enabled
      but local bypass parameter is used
[32m        allows authentication with correct password and no ldap[0m
    with invalid username
[32m      superuser returns 401 ("Unauthorized")[0m
[32m      admin/different user returns 403 ("Forbidden")[0m
[32m      non-admin/same user returns 403 ("Forbidden")[0m
    with incorrect password
[32m      superuser returns 401 ("Unauthorized")[0m
[32m      admin/different user returns 403 ("Forbidden")[0m
[32m      non-admin/same user returns 403 ("Forbidden")[0m
    with missing username
[32m      superuser returns 400 ("Bad Request")[0m
[32m      admin/different user returns 400 ("Bad Request")[0m
[32m      non-admin/same user returns 400 ("Bad Request")[0m
    with missing password
[32m      superuser returns 400 ("Bad Request")[0m
[32m      admin/different user returns 400 ("Bad Request")[0m
[32m      non-admin/same user returns 400 ("Bad Request")[0m
    with empty username
[32m      superuser returns 400 ("Bad Request")[0m
[32m      admin/different user returns 400 ("Bad Request")[0m
[32m      non-admin/same user returns 400 ("Bad Request")[0m
    with empty password
[32m      superuser returns 400 ("Bad Request")[0m
[32m      admin/different user returns 400 ("Bad Request")[0m
[32m      non-admin/same user returns 400 ("Bad Request")[0m
    with username = user
[32m      superuser returns 400 ("Bad Request")[0m
[32m      admin/different user returns 400 ("Bad Request")[0m
[32m      non-admin/same user returns 400 ("Bad Request")[0m
    with password = pass
[32m      superuser returns 400 ("Bad Request")[0m
[32m      admin/different user returns 400 ("Bad Request")[0m
[32m      non-admin/same user returns 400 ("Bad Request")[0m
    with empty body
[32m      superuser returns 400 ("Bad Request")[0m
[32m      admin/different user returns 400 ("Bad Request")[0m
[32m      non-admin/same user returns 400 ("Bad Request")[0m
    with no body
[32m      superuser returns 400 ("Bad Request")[0m
[32m      admin/different user returns 400 ("Bad Request")[0m
[32m      non-admin/same user returns 400 ("Bad Request")[0m
[32m      invalid user returns 401 ("Unauthorized") (ruby) or 400 ("Bad Request") (erlang)[0m
    with extra junk in body
[32m      superuser returns 200 ("Ok")[0m
[32m      admin/different user returns 403 ("Forbidden")[0m
[32m      non-admin/same user returns 403 ("Forbidden")[0m
[32m      invalid user returns 401 ("Unauthorized")[0m
    when the webui superuser is specified as the target user
[32m      should return Forbidden[0m
  DELETE /authenticate_user
[32m    returns 404 ("Not Found") for superuser[0m
[32m    returns 404 ("Not Found") for admin/different user[0m
[32m    returns 404 ("Not Found") for non-admin/same user[0m
[32m    returns 404 ("Not Found") for invalid user[0m

opscode-account endpoint
  Client ACLs
    the initial validator client
[32m      has the appropriate ACLs[0m
    a new validator client
[32m      has the appropriate ACLs[0m
  Admin User Group
[32m    has the appropriate members[0m
  Client Group
    group retrieval
[32m      retrieves the group[0m
    group ACL retrieval
[32m      retrieves the ACL[0m
  Client Container
[32m    retrieves the Clients container[0m
[32m    retrieves the Clients container's ACL[0m
  Client Creation
    by a non-validator client
[32m      cannot create a client[0m
    by a validator
[32m      creates a new non-validator client[0m
[32m      cannot create a new validator client[0m
[32m      has the validator removed from the new client's ACL[0m
[32m      puts the new client into the 'clients' group[0m
[33m      a new validator should have read / create permissions on clients container (PENDING: No reason given)[0m

Client API endpoint
  GET /clients
    as an admin user
      with an operational server
[32m        should respond with 200 OK[0m
      with only Pedant-created clients
[32m        should respond with 200 OK and the Pedant-created clients[0m
  POST /clients
    when validating
      when setting public_key
[32m        should respond with 201 Created and create the client[0m
        without a public key
[32m          should respond with 200 OK and generates a new keypair[0m
        with nil for a public key
[32m          should respond with 200 OK and generates a new keypair[0m
        with a bad public_key [v1+]
          with a well-formed, bogus (private key) public key
[32m            should respond with 400 Bad Request and does not create the client[0m
          with a mal-formed public key
[32m            should respond with 400 Bad Request and does not create the client[0m
          with a mal-formed RSA public key
[32m            should respond with 400 Bad Request and does not create the client[0m
          with a mal-formed cert public key
[32m            should respond with 400 Bad Request and does not create the client[0m
          with a blank public key
[32m            should respond with 400 Bad Request and does not create the client[0m
          with a 1 for the public key
[32m            should respond with 400 Bad Request and does not create the client[0m
          with a [] for the public key
[32m            should respond with 400 Bad Request and does not create the client[0m
          with a {} for the public key
[32m            should respond with 400 Bad Request and does not create the client[0m
    valid requests of various types to create a client
      with a valid name
        like 'pedanttestingclient'
[32m          should respond with 201 Created[0m
        like 'pedanttestingclient123'
[32m          should respond with 201 Created[0m
        like 'pedant_testing_client'
[32m          should respond with 201 Created[0m
        like 'pedant.testing.client'
[32m          should respond with 201 Created[0m
    invalid requests of various types to create a client
      with an invalid name
        like 'pedant$testing$client'
[32m          fails[0m
        like 'pedant testing client'
[32m          fails[0m
        like 'pedant{testing}client'
[32m          fails[0m
      with an empty payload
[32m        fails[0m
    creation of an existing client
[32m      should respond with 409 Conflict[0m
    as different kinds of clients
      as an org admin
        when creating a normal client
[32m          should respond with 201 Created[0m
        when creating a validator client
[32m          should respond with 201 Created[0m
      as client
        when creating a normal client
[32m          should respond with 403 Forbidden[0m
        when creating a validator client
[32m          should respond with 403 Forbidden[0m
      as a validator client
        when creating a normal client
[32m          should respond with 201 Created[0m
        when creating a validator client
[32m          should respond with 403 Forbidden[0m
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m
  GET /clients/<name>
    without an existing client
[32m      should respond with 404 Not Found[0m
    with an existing client
      as an org admin
        with another validator client
[32m          should respond with 200 OK[0m
        with another normal client
[32m          should respond with 200 OK[0m
      as client
        with another validator client
[32m          forbids fetching[0m
        with another normal client
[32m          forbids fetching[0m
      as a validator client
        with another validator client
[32m          forbids fetching[0m
        with another normal client
[32m          forbids fetching[0m
        with self
[32m          forbids fetching[0m
      as a normal client
        with another validator client
[32m          forbids fetching[0m
        with another normal client
[32m          forbids fetching[0m
        with self
[32m          should respond with 200 OK[0m
      as a user
        with another validator client
[32m          should respond with 200 OK[0m
        with another normal client
[32m          should respond with 200 OK[0m
  PUT /clients/<name>
    modifying a non-existent client
[32m      should respond with 404 Not Found[0m
    as an admin requestor
[33m      RSpec::ExampleGroups::ClientAPIEndpoint::PUTClientsName::AsAnAdminRequestor::AdminUpdatesToValidatorClientAppearToBeMisbehavingOrMisconfigured (PENDING: No reason given)[0m
      with another normal client
        when updating to a normal client
[32m          should respond with 200 OK[0m
        when updating to a validator client
[32m          should respond with 200 OK[0m
        when renaming client
          to an unclaimed name
[32m            should respond with 201 Created and rename the client[0m
          to an existing name
[32m            should respond with 409 Conflict and does not rename the client[0m
        when generating key pairs
          with private_key set to true
[32m            should respond with 200 OK and generate a new key pair[0m
          with private_key set to false
[32m            should respond with 200 OK and does not generate a new key pair[0m
          without a private_key
[32m            should respond with 200 OK and does not generate a new key pair[0m
          with private_key set to nil
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
          with private_key set to 1
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
          with private_key set to ""
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
          with private_key set to []
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
          with private_key set to {}
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
        when updating public_key
[32m          should respond with 200 OK and update the public key[0m
          without a public key
[32m            should respond with 200 OK and does not update the public key[0m
          with nil for the public key
[32m            should respond with 200 OK and does not update the public key[0m
          with a bad public_key [v1+]
            with a mal-formed public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a mal-formed RSA public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a mal-formed cert public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a blank public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a 1 for the public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a [] for the public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a {} for the public key
[32m              should respond with 400 Bad Request and does not update the key[0m
    as a validator client
      with another validator client
        when updating to a normal client
[32m          should respond with 403 Forbidden[0m
        when renaming client
          to an unclaimed name
[32m            should respond with 403 Forbidden and does not rename the client[0m
          to an existing name
[32m            should respond with 403 Forbidden and does not rename the client[0m
      with another normal client
        when updating to a normal client
[32m          should respond with 403 Forbidden[0m
        when updating to a validator client
[32m          should respond with 403 Forbidden[0m
        when renaming client
          to an unclaimed name
[32m            should respond with 403 Forbidden and does not rename the client[0m
          to an existing name
[32m            should respond with 403 Forbidden and does not rename the client[0m
      with self
        when updating to a validator client
[32m          should respond with 403 Forbidden[0m
        when updating to a normal client
[32m          should respond with 403 Forbidden[0m
        when renaming client
          to an unclaimed name
[32m            should respond with 403 Forbidden and does not rename the client[0m
          to an existing name
[32m            should respond with 403 Forbidden and does not rename the client[0m
    as a normal client
      with another validator client
        when updating to a normal client
[32m          should respond with 403 Forbidden[0m
        when renaming client
          to an unclaimed name
[32m            should respond with 403 Forbidden and does not rename the client[0m
          to an existing name
[32m            should respond with 403 Forbidden and does not rename the client[0m
      with another normal client
        when updating to a normal client
[32m          should respond with 403 Forbidden[0m
        when updating to a validator client
[32m          should respond with 403 Forbidden[0m
        when renaming client
          to an unclaimed name
[32m            should respond with 403 Forbidden and does not rename the client[0m
          to an existing name
[32m            should respond with 403 Forbidden and does not rename the client[0m
      with self
[33m        normal clients should not be able to upgrade themselves to validator - are we testing what we think we are? (PENDING: No reason given)[0m
        when updating to a normal client
[32m          should respond with 200 OK[0m
        when renaming client
          to an unclaimed name
[32m            should respond with 201 Created and rename the client[0m
          to an existing name
[32m            should respond with 409 Conflict and does not rename the client[0m
        when generating key pairs
          with private_key set to true
[32m            should respond with 200 OK and generate a new key pair[0m
          with private_key set to false
[32m            should respond with 200 OK and does not generate a new key pair[0m
          without a private_key
[32m            should respond with 200 OK and does not generate a new key pair[0m
          with private_key set to nil
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
          with private_key set to 1
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
          with private_key set to ""
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
          with private_key set to []
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
          with private_key set to {}
[32m            should respond with 400 Bad Request and does not generate a new key pair[0m
        when updating public_key
[32m          should respond with 200 OK and update the public key[0m
          without a public key
[32m            should respond with 200 OK and does not update the public key[0m
          with nil for the public key
[32m            should respond with 200 OK and does not update the public key[0m
          with a bad public_key [v1+]
            with a mal-formed public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a mal-formed RSA public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a mal-formed cert public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a blank public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a 1 for the public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a [] for the public key
[32m              should respond with 400 Bad Request and does not update the key[0m
            with a {} for the public key
[32m              should respond with 400 Bad Request and does not update the key[0m
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m
  DELETE /clients/<name>
    without an existing client
[32m      should respond with 404 Not Found[0m
    as an org admin
      with another validator client
[32m        should respond with 200 OK[0m
      with another normal client
[32m        should respond with 200 OK[0m
    as a validator client
      with another validator client
[32m        forbids deletion[0m
      with another normal client
[32m        forbids deletion[0m
      with self
[32m        forbids deletion[0m
    as a normal client
      with another validator client
[32m        forbids deletion[0m
      with another normal client
[32m        forbids deletion[0m
      with self
[32m        should respond with 200 OK[0m

Controls API Endpoint
  v0.1.0
    POST /controls
[32m      returns a 201 ("Created") for client[0m
[32m      returns a 403 ("Forbidden") for normal_user[0m
[32m      returns a 403 ("Forbidden") for admin_user[0m
    GET /controls
[32m      returns a 405 ("Forbidden") for client[0m
[32m      returns a 405 ("Method Not Allowed") for normal_user[0m
[32m      returns a 405 ("Method Not Allowed") for admin_user[0m
    node does not exist
[32m      returns a 403 ("Forbidden") for client[0m
    invalid input
      missing run_id
[32m        returns a 400 ("Bad Request") for client missing run_id[0m
      missing node_name
[32m        returns a 400 ("Bad Request") for client missing node_name[0m
      missing control_groups
[32m        returns a 400 ("Bad Request") for client missing control_groups[0m
  v0.1.1
    POST /controls
[32m      returns a 201 ("Created") for client[0m
[32m      returns a 403 ("Forbidden") for normal_user[0m
[32m      returns a 403 ("Forbidden") for admin_user[0m
    GET /controls
[32m      returns a 405 ("Forbidden") for client[0m
[32m      returns a 405 ("Method Not Allowed") for normal_user[0m
[32m      returns a 405 ("Method Not Allowed") for admin_user[0m
    node does not exist
[32m      returns a 403 ("Forbidden") for client[0m
    invalid input
      missing run_id
[32m        returns a 400 ("Bad Request") for client missing run_id[0m
      missing node_name
[32m        returns a 400 ("Bad Request") for client missing node_name[0m
      missing control_groups
[32m        returns a 400 ("Bad Request") for client missing control_groups[0m

Cookbook Artifacts API endpoint
  PUT /cookbook_artifacts/<name>/<version> [create]
    with a basic cookbook
[32m      creates a basic cookbook_artifact[0m
    when validating
      the cookbook version
        with versions at exactly 4 bytes
[32m          should respond with 201 Created[0m
        with versions larger than 4 bytes
[32m          should respond with 201 Created[0m
        with versions with 'prerelease' fields
[32m          should respond with 201 Created[0m
    creating broken cookbook_artifacts to test validation and defaults
      basic tests
        with empty metadata
[33m          create returns 400 (PENDING: FIXME - server needs to add validation)[0m
      with segment 'resources' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'resources' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'providers' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'providers' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'recipes' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'recipes' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'definitions' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'definitions' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'libraries' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'libraries' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'attributes' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'attributes' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'files' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'files' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'templates' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'templates' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'root_files' set to a String
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      with segment 'root_files' set to an Array with one empty JSON object
[33m        create returns 400 (PENDING: FIXME - server returns 500)[0m
      checking metadata sections
        with metadata section 'platforms' set to a string
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with a malformed constraint for metadata section platforms
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with metadata section 'dependencies' set to a string
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with a malformed constraint for metadata section dependencies
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with metadata section 'recommendations' set to a string
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with a malformed constraint for metadata section recommendations
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with metadata section 'suggestions' set to a string
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with a malformed constraint for metadata section suggestions
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with metadata section 'conflicting' set to a string
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with a malformed constraint for metadata section conflicting
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with metadata section 'replacing' set to a string
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with a malformed constraint for metadata section replacing
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with valid metadata dependency '> 1.0'
[32m          create returns 200[0m
        with valid metadata dependency '< 2.1.2'
[32m          create returns 200[0m
        with valid metadata dependency '3.3'
[32m          create returns 200[0m
        with valid metadata dependency '<= 4.6'
[32m          create returns 200[0m
        with valid metadata dependency '~> 5.6.2'
[32m          create returns 200[0m
        with valid metadata dependency '>= 6.0'
[32m          create returns 200[0m
        with invalid metadata dependency '> 1'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with invalid metadata dependency '< 2'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with invalid metadata dependency '3'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with invalid metadata dependency '<= 4'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with invalid metadata dependency '~> 5'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with invalid metadata dependency '>= 6'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with invalid metadata dependency '= 7'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with invalid metadata dependency '>= 1.2.3.4'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with invalid metadata dependency '<= 5.6.7.8.9.0'
[33m          create returns 400 (PENDING: FIXME - missing server validation)[0m
        with metadata.providing set to valid value cats::sleep
[32m          create returns 200[0m
        with metadata.providing set to valid value here(:kitty, :time_to_eat)
[32m          create returns 200[0m
        with metadata.providing set to valid value service[snuggle]
[32m          create returns 200[0m
        with metadata.providing set to valid value
[32m          create returns 200[0m
        with metadata.providing set to valid value 1
[32m          create returns 200[0m
        with metadata.providing set to valid value true
[32m          create returns 200[0m
        with metadata.providing set to valid value ["cats", "sleep", "here"]
[32m          create returns 200[0m
        with metadata.providing set to valid value {"cats::sleep"=>"0.0.1", "here(:kitty, :time_to_eat)"=>"0.0.1", "service[snuggle]"=>"0.0.1"}
[32m          create returns 200[0m
      with invalid cookbook artifact identifier in url
[32m        should respond with an error[0m
      when the cookbook name is invalid
[32m        responds with a 400[0m
      when the identifier in the URL doesn't match the payload
[32m        responds with a 400[0m
      when the cookbook name in the URL doesn't match the payload
[32m        mismatched cookbook_name is a 400[0m
      when uploading a cookbook artifact with a missing checksum
[32m        specifying file not in sandbox is a 400[0m
    creating good cookbook_artifacts to test defaults
[32m      allows override of defaults[0m
      with a payload size
        exactly equal to the maximum allowable size
[32m          should not respond with 413 Request Entity Too Large[0m
        exceeding the maximum allowable size
[32m          should respond with 413 Request Entity Too Large[0m
  PUT multiple cookbook_artifacts
[32m    allows us to create 2 revisions of the same cookbook[0m

Cookbook Artifacts API endpoint
  DELETE /cookbooks/<name>/<version>
    for non-existent cookbooks
[32m      returns 404[0m
      with bad identifier
[32m        returns 404[0m
    for existing cookbooks
      when deleting non-existent version of an existing cookbook
[32m        should respond with 404 ("Not Found") and not delete existing versions[0m
      when deleting existent version of an existing cookbook
[32m        should cleanup unused checksum data in s3/bookshelf[0m
    with permissions for
      as admin user
[32m        should respond with 200 ("OK") and be deleted[0m
      as normal user
[32m        should respond with 200 ("OK") and be deleted[0m
      as a user outside of the organization
[32m        should respond with 403 ("Forbidden") and does not delete cookbook[0m
      with invalid user
[32m        should respond with 401 ("Unauthorized") and does not delete cookbook[0m

Cookbook Artifacts API endpoint
  GET /cookbook_artifacts
    with no cookbook artifacts on the server
[32m      responds with 200[0m
    with existing cookbook_artifacts and multiple versions
[32m      should respond with a cookbook collection containing all versions of each cookbook[0m
  GET /cookbook_artifacts/<name>/<version>
    as a normal user
[32m      returns a 200 response[0m
[32m      returns valid file URLs[0m
    as an admin user
[32m      returns a 200 response[0m
[32m      returns valid file URLs[0m
    as an user outside of the organization
[32m      should respond with 403 Forbidden[0m
    with invalid user
[32m      should respond with 401 Unauthorized[0m

Cookbook Artifacts API endpoint
  PUT /cookbooks/<name>/<version> [update]
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m
    as admin user
[32m      should respond with 409 Conflict[0m
      as a user outside of the organization
[32m        should respond with 403 ("Forbidden") and does not update cookbook[0m
      with invalid user
[32m        returns 401 and does not update cookbook[0m

Cookbooks API endpoint
  PUT /cookbooks/<name>/<version> [create]
    with a basic cookbook
[32m      creates a basic cookbook[0m
    when validating
      the 'json_class' field
        when passing valid value "Chef::CookbookVersion"
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "Chef::Node"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      the cookbook version
        with negative versions
[32m          should respond with 400 Bad Request[0m
        with versions at exactly 4 bytes
[32m          should respond with 201 Created[0m
        with versions larger than 4 bytes
[32m          should respond with 201 Created[0m
        with versions larger than 8 bytes
[32m          should respond with 400 Bad Request[0m
      with invalid top-level keys
        when passing invalid value of "something random" to "something_random" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "漢字ひらがな한문" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "846ca29159a6a78dc767638d54a69bd7" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "fa5416e880fc173484219e3331f8dc45" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "36bec68871df2e66cb1c815ebf3f1cd9" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
    creating broken cookbooks to test validation and defaults
[32m      invalid cookbook name in URL is a 400[0m
[32m      mismatched metadata.cookbook_version is a 400[0m
[32m      mismatched cookbook_name is a 400[0m
      basic tests
[32m        json_class = delete returns 200[0m
[32m        json_class = Chef::Role returns 400[0m
[32m        metadata = {} returns 400[0m
      checking segments
[32m        resources = foo returns 400[0m
[32m        resources = [{}] returns 400[0m
[32m        providers = foo returns 400[0m
[32m        providers = [{}] returns 400[0m
[32m        recipes = foo returns 400[0m
[32m        recipes = [{}] returns 400[0m
[32m        definitions = foo returns 400[0m
[32m        definitions = [{}] returns 400[0m
[32m        libraries = foo returns 400[0m
[32m        libraries = [{}] returns 400[0m
[32m        attributes = foo returns 400[0m
[32m        attributes = [{}] returns 400[0m
[32m        files = foo returns 400[0m
[32m        files = [{}] returns 400[0m
[32m        templates = foo returns 400[0m
[32m        templates = [{}] returns 400[0m
[32m        root_files = foo returns 400[0m
[32m        root_files = [{}] returns 400[0m
      checking metadata sections
[32m        platforms = foo returns 400[0m
[32m        platforms = {"foo"=>"s395dss@#"} returns 400[0m
[32m        dependencies = foo returns 400[0m
[32m        dependencies = {"foo"=>"s395dss@#"} returns 400[0m
[32m        recommendations = foo returns 400[0m
[32m        recommendations = {"foo"=>"s395dss@#"} returns 400[0m
[32m        suggestions = foo returns 400[0m
[32m        suggestions = {"foo"=>"s395dss@#"} returns 400[0m
[32m        conflicting = foo returns 400[0m
[32m        conflicting = {"foo"=>"s395dss@#"} returns 400[0m
[32m        replacing = foo returns 400[0m
[32m        replacing = {"foo"=>"s395dss@#"} returns 400[0m
        with metadata.dependencies
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"> 1"} returns 400[0m
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"< 2"} returns 400[0m
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"3"} returns 400[0m
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"<= 4"} returns 400[0m
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"~> 5"} returns 400[0m
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>">= 6"} returns 400[0m
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"= 7"} returns 400[0m
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>">= 1.2.3.4"} returns 400[0m
[32m          dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"<= 5.6.7.8.9.0"} returns 400[0m
          when dependencies is set to {"chef-client"=>"> 2.0.0", "apt"=>"> 1.0"}
[32m            dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"> 1.0"} returns 201[0m
          when dependencies is set to {"chef-client"=>"> 2.0.0", "apt"=>"< 2.1.2"}
[32m            dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"< 2.1.2"} returns 201[0m
          when dependencies is set to {"chef-client"=>"> 2.0.0", "apt"=>"3.3"}
[32m            dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"3.3"} returns 201[0m
          when dependencies is set to {"chef-client"=>"> 2.0.0", "apt"=>"<= 4.6"}
[32m            dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"<= 4.6"} returns 201[0m
          when dependencies is set to {"chef-client"=>"> 2.0.0", "apt"=>"~> 5.6.2"}
[32m            dependencies = {"chef-client"=>"> 2.0.0", "apt"=>"~> 5.6.2"} returns 201[0m
          when dependencies is set to {"chef-client"=>"> 2.0.0", "apt"=>">= 6.0"}
[32m            dependencies = {"chef-client"=>"> 2.0.0", "apt"=>">= 6.0"} returns 201[0m
        with metadata.providing
          when providing is set to cats::sleep
[32m            providing = cats::sleep returns 201[0m
          when providing is set to here(:kitty, :time_to_eat)
[32m            providing = here(:kitty, :time_to_eat) returns 201[0m
          when providing is set to service[snuggle]
[32m            providing = service[snuggle] returns 201[0m
          when providing is set to
[32m            providing =  returns 201[0m
          when providing is set to 1
[32m            providing = 1 returns 201[0m
          when providing is set to true
[32m            providing = true returns 201[0m
          when providing is set to ["cats", "sleep", "here"]
[32m            providing = ["cats", "sleep", "here"] returns 201[0m
          when providing is set to {"cats::sleep"=>"0.0.1", "here(:kitty, :time_to_eat)"=>"0.0.1", "service[snuggle]"=>"0.0.1"}
[32m            providing = {"cats::sleep"=>"0.0.1", "here(:kitty, :time_to_eat)"=>"0.0.1", "service[snuggle]"=>"0.0.1"} returns 201[0m
      with invalid version in url
[32m        should respond with an error[0m
      sandbox checks
[32m        specifying file not in sandbox is a 400[0m
    creating good cookbooks to test defaults
[32m      allows creation of a minimal cookbook with no data[0m
[32m      allows override of defaults[0m
      with a payload size
        exactly equal to the maximum allowable size
[32m          should not respond with 413 Request Entity Too Large[0m
        exceeding the maximum allowable size
[32m          should respond with 413 Request Entity Too Large[0m
  PUT multiple cookbooks
[32m    allows us to create 2 versions of the same cookbook[0m

Cookbooks API endpoint
  DELETE /cookbooks/<name>/<version>
    for non-existent cookbooks
[32m      should respond with 404 Not Found[0m
      with bad version
[32m        should respond with 400 Bad Request[0m
    for existing cookbooks
      when deleting non-existent version of an existing cookbook
[32m        should respond with 404 ("Not Found") and not delete existing versions[0m
      when deleting existent version of an existing cookbook
[32m        should cleanup unused checksum data in s3/bookshelf[0m
    with permissions for
      as admin user
[32m        should respond with 200 ("OK") and be deleted[0m
      as normal user
[32m        should respond with 200 ("OK") and be deleted[0m
      as a user outside of the organization
[32m        should respond with 403 ("Forbidden") and does not delete cookbook[0m
      with invalid user
[32m        should respond with 401 ("Unauthorized") and does not delete cookbook[0m

Cookbooks API endpoint, named filters
  with no cookbooks
    when requesting /cookbooks/_latest
[32m      should respond with the 'latest' cookbooks[0m
    when requesting /cookbooks/_recipes
[32m      shows the recipes from the latest cookbooks[0m
    when requesting /cookbooks/my_cookbook
[32m      should respond with 404[0m
  with one cookbook, one version
    when requesting /cookbooks/_latest
[32m      should respond with the 'latest' cookbooks[0m
    when requesting /cookbooks/_recipes
[32m      shows the recipes from the latest cookbooks[0m
    when requesting /cookbooks/my_cookbook
[32m      should respond with the 'named' cookbook[0m
  with different cookbook, one version
    when requesting /cookbooks/_latest
[32m      should respond with the 'latest' cookbooks[0m
    when requesting /cookbooks/_recipes
[32m      shows the recipes from the latest cookbooks[0m
    when requesting /cookbooks/my_cookbook
[32m      should respond with 404[0m
  with multiple cookbooks, one version each
    when requesting /cookbooks/_latest
[32m      should respond with the 'latest' cookbooks[0m
    when requesting /cookbooks/_recipes
[32m      shows the recipes from the latest cookbooks[0m
    when requesting /cookbooks/my_cookbook
[32m      should respond with the 'named' cookbook[0m
  with multiple cookbooks, multiple versions each
    when requesting /cookbooks/_latest
[32m      should respond with the 'latest' cookbooks[0m
    when requesting /cookbooks/_recipes
[32m      shows the recipes from the latest cookbooks[0m
    when requesting /cookbooks/my_cookbook
[32m      should respond with the 'named' cookbook[0m

Cookbooks API endpoint
  GET /cookbooks
    with an operational server
[32m      should respond with 200 OK[0m
    without existing cookbooks
[32m      should respond with 200 OK and an empty collection[0m
      with a num_versions
        with a negative num_versions
[32m          should respond with 400 Bad Request[0m
        with a missing num_versions
[32m          should respond with 400 Bad Request[0m
        with an invalid num_versions
[32m          should respond with 400 Bad Request[0m
    with existing cookbooks and multiple versions
      with num_versions set to 0
[32m        should respond with cookbook collection with no version[0m
      when num_versions is not set
[32m        should return cookbook collection with one version per cookbook[0m
      when num_versions is set to 1
[32m        should return cookbook collection with one version per cookbook[0m
      when num_versions is set to "all"
[32m        should respond with a cookbook collection containing all versions of each cookbook[0m
    with varying numbers of existing cookbooks
      with a single, existing cookbook
[32m        should respond with a single cookbook in the collection[0m
      with multiple, existing cookbooks
[32m        multiple cookbooks can be listed[0m
  GET /cookbooks/<name>/<version>
    as a normal user
[32m      should respond with 200 OK[0m
      allows access to cookbook recipe files via
[32m        net/http[0m
    as an admin user
[32m      should respond with 200 OK[0m
    as an user outside of the organization
[32m      should respond with 403 Forbidden[0m
    with invalid user
[32m      should respond with 401 Unauthorized[0m

Cookbooks API endpoint
  PUT /cookbooks/<name>/<version> [update]
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m
    as admin user
[32m      should respond with 200 Ok[0m
      as a user outside of the organization
[32m        should respond with 403 ("Forbidden") and does not update cookbook[0m
      with invalid user
[32m        returns 401 and does not update cookbook[0m
    for checksums
[32m      adding all new checksums should succeed[0m
[32m      should return url when adding checksums (if ruby endpoint)[0m
[32m      adding invalid checksum should fail[0m
[32m      deleting all checksums should succeed[0m
[32m      deleting some checksums should succeed[0m
[32m      changing all different checksums should succeed[0m
[32m      changing some different checksums should succeed[0m
[32m      changing to invalid checksums should fail[0m
      CHEF-3716 coverage
[32m        it does not delete checksums in use by another version[0m
    for frozen?
[32m      can set frozen? to true[0m
[32m      can not edit cookbook when frozen? is set to true[0m
[32m      can override frozen? with force set to true[0m
[32m      can not override frozen? with force set to false[0m
    when modifying data
      for cookbook_name
[32m        cookbook_name = 1 returns 400[0m
[32m        cookbook_name = true returns 400[0m
[32m        cookbook_name = [] returns 400[0m
[32m        cookbook_name = {} returns 400[0m
[32m        cookbook_name = new_cookbook_name returns 400[0m
[32m        cookbook_name = with a space returns 400[0m
[32m        cookbook_name = 外国語 returns 400[0m
[32m        cookbook_name = delete returns 400[0m
      for json_class
[32m        json_class = delete returns 200[0m
[32m        json_class = 1 returns 400[0m
[32m        json_class = Chef::NonCookbook returns 400[0m
[32m        json_class = all wrong returns 400[0m
      for chef_type
[32m        chef_type = delete returns 200[0m
[32m        chef_type = not_cookbook returns 400[0m
[32m        chef_type = false returns 400[0m
[32m        chef_type = ["just any", "old junk"] returns 400[0m
      for version
[32m        version = delete returns 200[0m
[32m        version = 1 returns 400[0m
[32m        version = ["all", "ignored"] returns 400[0m
[32m        version = {} returns 400[0m
[32m        version = 0.0 returns 400[0m
[32m        version = something invalid returns 400[0m
      for collections
        for attributes
[32m          attributes = foo returns 400[0m
[32m          attributes = ["foo"] returns 400[0m
[32m          attributes = [] returns 200[0m
[32m          attributes = [{}, {}] returns 400[0m
[32m          attributes = [{"foo"=>"bar"}] returns 400[0m
        for definitions
[32m          definitions = foo returns 400[0m
[32m          definitions = ["foo"] returns 400[0m
[32m          definitions = [] returns 200[0m
[32m          definitions = [{}, {}] returns 400[0m
[32m          definitions = [{"foo"=>"bar"}] returns 400[0m
        for files
[32m          files = foo returns 400[0m
[32m          files = ["foo"] returns 400[0m
[32m          files = [] returns 200[0m
[32m          files = [{}, {}] returns 400[0m
[32m          files = [{"foo"=>"bar"}] returns 400[0m
        for libraries
[32m          libraries = foo returns 400[0m
[32m          libraries = ["foo"] returns 400[0m
[32m          libraries = [] returns 200[0m
[32m          libraries = [{}, {}] returns 400[0m
[32m          libraries = [{"foo"=>"bar"}] returns 400[0m
        for providers
[32m          providers = foo returns 400[0m
[32m          providers = ["foo"] returns 400[0m
[32m          providers = [] returns 200[0m
[32m          providers = [{}, {}] returns 400[0m
[32m          providers = [{"foo"=>"bar"}] returns 400[0m
        for recipes
[32m          recipes = foo returns 400[0m
[32m          recipes = ["foo"] returns 400[0m
[32m          recipes = [] returns 200[0m
[32m          recipes = [{}, {}] returns 400[0m
[32m          recipes = [{"foo"=>"bar"}] returns 400[0m
        for resources
[32m          resources = foo returns 400[0m
[32m          resources = ["foo"] returns 400[0m
[32m          resources = [] returns 200[0m
[32m          resources = [{}, {}] returns 400[0m
[32m          resources = [{"foo"=>"bar"}] returns 400[0m
        for root_files
[32m          root_files = foo returns 400[0m
[32m          root_files = ["foo"] returns 400[0m
[32m          root_files = [] returns 200[0m
[32m          root_files = [{}, {}] returns 400[0m
[32m          root_files = [{"foo"=>"bar"}] returns 400[0m
        for templates
[32m          templates = foo returns 400[0m
[32m          templates = ["foo"] returns 400[0m
[32m          templates = [] returns 200[0m
[32m          templates = [{}, {}] returns 400[0m
[32m          templates = [{"foo"=>"bar"}] returns 400[0m
      for other stuff
[32m        frozen? = true returns 200[0m
    when modifying metadata
[32m      metadata = {"new_name"=>"foo"} returns 400[0m
      for name
[32m        name = new_name returns 200[0m
[32m        name = delete returns 200[0m
[32m        name = 1 returns 400[0m
[32m        name = true returns 400[0m
[32m        name = {} returns 400[0m
[32m        name = [] returns 400[0m
[32m        name = invalid name returns 400[0m
[32m        name = ダメよ returns 400[0m
      for description
[32m        description = new description returns 200[0m
[32m        description = delete returns 200[0m
[32m        description = 1 returns 400[0m
      for long description
[32m        long_description = longer description returns 200[0m
[32m        long_description = delete returns 200[0m
[32m        long_description = false returns 400[0m
      for version
[32m        version = 0.0 returns 400[0m
[32m        version = not a version returns 400[0m
[32m        version = delete returns 400[0m
[32m        version = 1 returns 400[0m
      for maintainer
[32m        maintainer = Captain Stupendous returns 200[0m
[32m        maintainer = delete returns 200[0m
[32m        maintainer = true returns 400[0m
[32m        maintainer_email = cap@awesome.com returns 200[0m
[32m        maintainer_email = not really an email returns 200[0m
[32m        maintainer_email = delete returns 200[0m
[32m        maintainer_email = false returns 400[0m
      for license
[32m        license = to_kill returns 200[0m
[32m        license = delete returns 200[0m
[32m        license = 1 returns 400[0m
      for collections
        for platforms
[32m          platforms = [] returns 400[0m
[32m          platforms = {} returns 200[0m
[32m          platforms = delete returns 200[0m
[32m          platforms = foo returns 400[0m
[32m          platforms = ["foo"] returns 400[0m
[32m          platforms = {"foo"=>{}} returns 400[0m
        with metadata.providing
          when providing is set to cats::sleep
[32m            providing = cats::sleep returns 200[0m
          when providing is set to here(:kitty, :time_to_eat)
[32m            providing = here(:kitty, :time_to_eat) returns 200[0m
          when providing is set to service[snuggle]
[32m            providing = service[snuggle] returns 200[0m
          when providing is set to
[32m            providing =  returns 200[0m
          when providing is set to 1
[32m            providing = 1 returns 200[0m
          when providing is set to true
[32m            providing = true returns 200[0m
          when providing is set to ["cats", "sleep", "here"]
[32m            providing = ["cats", "sleep", "here"] returns 200[0m
          when providing is set to {"cats::sleep"=>"0.0.1", "here(:kitty, :time_to_eat)"=>"0.0.1", "service[snuggle]"=>"0.0.1"}
[32m            providing = {"cats::sleep"=>"0.0.1", "here(:kitty, :time_to_eat)"=>"0.0.1", "service[snuggle]"=>"0.0.1"} returns 200[0m
        for groupings
[32m          groupings = [] returns 400[0m
[32m          groupings = {} returns 200[0m
[32m          groupings = delete returns 200[0m
[32m          groupings = foo returns 400[0m
[32m          groupings = ["foo"] returns 400[0m
[32m          groupings = {"foo"=>{}} returns 200[0m
        for dependencies
[32m          dependencies = [] returns 400[0m
[32m          dependencies = {} returns 200[0m
[32m          dependencies = delete returns 200[0m
[32m          dependencies = foo returns 400[0m
[32m          dependencies = ["foo"] returns 400[0m
[32m          dependencies = {"foo"=>{}} returns 400[0m
        for recommendations
[32m          recommendations = [] returns 400[0m
[32m          recommendations = {} returns 200[0m
[32m          recommendations = delete returns 200[0m
[32m          recommendations = foo returns 400[0m
[32m          recommendations = ["foo"] returns 400[0m
[32m          recommendations = {"foo"=>{}} returns 400[0m
        for suggestions
[32m          suggestions = [] returns 400[0m
[32m          suggestions = {} returns 200[0m
[32m          suggestions = delete returns 200[0m
[32m          suggestions = foo returns 400[0m
[32m          suggestions = ["foo"] returns 400[0m
[32m          suggestions = {"foo"=>{}} returns 400[0m
        for conflicting
[32m          conflicting = [] returns 400[0m
[32m          conflicting = {} returns 200[0m
[32m          conflicting = delete returns 200[0m
[32m          conflicting = foo returns 400[0m
[32m          conflicting = ["foo"] returns 400[0m
[32m          conflicting = {"foo"=>{}} returns 400[0m
        for replacing
[32m          replacing = [] returns 400[0m
[32m          replacing = {} returns 200[0m
[32m          replacing = delete returns 200[0m
[32m          replacing = foo returns 400[0m
[32m          replacing = ["foo"] returns 400[0m
[32m          replacing = {"foo"=>{}} returns 400[0m

Cookbook Versions API endpoint, GET
  with no cookbooks on the server
[32m    should respond with 404 Not Found[0m
  with cookbooks on the server
    when fetching existing version of cookbook
[32m      should respond with 200 OK and the cookbook version[0m
    when fetching non-existant version of cookbook
[32m      should respond with 404 Not Found[0m
    as a non-admin user
[32m      should respond with 200 OK and the cookbook version[0m
    as a user outside the organization
[32m      should respond with 403 Forbidden[0m
    when requesting the 'latest' Cookbook version
[32m      should respond with 200 OK and the latest cookbook version[0m
    when requesting the 'latest' version of a non-existent cookbook
[32m      should respond with 404 Not Found[0m

Cookbooks API endpoint
  DELETE /cookbooks/<name>/<version>
    with delete cookbook authorization
      as an authorized, normal user
[32m        should respond with 200 ("OK")[0m
      as an unauthorized, normal user
[32m        should respond with 403 ("Forbidden")[0m

Data Bag API endpoint
  with no data bags
    a request to /data
      GET
[32m        returns an empty list of data bags[0m
      POST
        with a canonical payload
          behaves like a successful data bag POST
[32m            returns success[0m
[32m            creates the data bag[0m
        valid requests of various types to create a data bag
          with a valid name
            like 'pedant'
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
            like 'pedant-bag'
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
            like 'pedant_bag'
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
            like 'pedant_bag-foo'
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
            like '1234567890'
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
            like 'pedant99'
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
            like 'pedant:with:colons'
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
            like 'pedant.with.dots'
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
          missing certain keys
            without a 'json_class' key
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
            without a 'chef_type' key
              behaves like a successful data bag POST
[32m                returns success[0m
[32m                creates the data bag[0m
          with just a name
            behaves like a successful data bag POST
[32m              returns success[0m
[32m              creates the data bag[0m
          with an incorrect 'chef_type' key
[32m            does not have the correct chef_type key[0m
            behaves like a successful data bag POST
[32m              returns success[0m
[32m              creates the data bag[0m
          with an incorrect 'json_class' key
[32m            does not have the correct json_class key[0m
            behaves like a successful data bag POST
[32m              returns success[0m
[32m              creates the data bag[0m
        invalid requests of various types to create a data bag
          with an invalid name
            like 'pedant_badName!!$$$$_oh_very+bad'
              behaves like an unsuccessful data bag POST
[32m                returns failure[0m
[32m                does not create a data bag[0m
            like 'pedant-does-not-like-punctuation!!!!'
              behaves like an unsuccessful data bag POST
[32m                returns failure[0m
[32m                does not create a data bag[0m
          without a name
            behaves like an unsuccessful data bag POST
[32m              returns failure[0m
[32m              does not create a data bag[0m
        with a payload size
          exactly equal to the maximum allowable size
[32m            should not respond with 413 Request Entity Too Large[0m
          exceeding the maximum allowable size
[32m            should respond with 413 Request Entity Too Large[0m
      PUT
[32m        is not allowed[0m
      DELETE
[32m        is not allowed[0m
    a request to /data/<bag>
      GET
[32m        fails because there is no bag[0m
      POST
[32m        fails because there is no bag[0m
      PUT
[32m        is not allowed[0m
      DELETE
[32m        fails because there is no bag[0m
    a request to /data/<bag>/<item>
      GET
[32m        fails because there is no bag[0m
      POST
[32m        is not allowed[0m
      PUT
[32m        fails because there is no bag[0m
      DELETE
[32m        fails because there is no bag[0m
  with data bags
    that have no items
      a request to /data
        GET
[32m          returns a non-empty list of data bags[0m
        POST
[32m          raises a conflict when creating an existing data bag[0m
      a request to /data/<bag>
        GET
[32m          returns an empty bag[0m
        POST
          various good inputs to create a data bag item
            with JUST an ID
              behaves like a successful data bag item POST
[32m                returns success[0m
[32m                creates the resource[0m
            with a good ID
              like 'pedantitem'
                behaves like a successful data bag item POST
[32m                  returns success[0m
[32m                  creates the resource[0m
              like 'pedant_item'
                behaves like a successful data bag item POST
[32m                  returns success[0m
[32m                  creates the resource[0m
              like 'pedant-item'
                behaves like a successful data bag item POST
[32m                  returns success[0m
[32m                  creates the resource[0m
              like 'pedant-123-item'
                behaves like a successful data bag item POST
[32m                  returns success[0m
[32m                  creates the resource[0m
              like 'pedant:item'
                behaves like a successful data bag item POST
[32m                  returns success[0m
[32m                  creates the resource[0m
              like 'pedant.item'
                behaves like a successful data bag item POST
[32m                  returns success[0m
[32m                  creates the resource[0m
          various bad inputs to create a data bag item
            without an ID
[32m              really does not have an id[0m
              behaves like an unsuccessful data bag item POST
[32m                returns failure[0m
            with a malformed ID
              like 'pedant_badId!!'
                behaves like an unsuccessful data bag item POST
[32m                  returns failure[0m
              like '^$@^*  pedant'
                behaves like an unsuccessful data bag item POST
[32m                  returns failure[0m
          with a payload size
            exactly equal to the maximum allowable size
[32m              should not respond with 413 Request Entity Too Large[0m
            exceeding the maximum allowable size
[32m              should respond with 413 Request Entity Too Large[0m
        DELETE
[32m          deletes the data bag[0m
      a request to /data/<bag>/<item>
        GET
[32m          fails because there is no item[0m
        PUT
[32m          fails because there is no item[0m
        DELETE
[32m          fails because there is no item[0m
    that have items
      a request to /data
        GET
[32m          returns the same non-empty list of data bags[0m
      a request to /data/<bag>
        GET
[32m          shows a full data bag[0m
        POST
[32m          raises a conflict when creating an existing data bag item[0m
        DELETE
[32m          deletes a bag AND ALL THE ITEMS[0m
      a request to /data/<bag>/<item>
        GET
[32m          shows the complete item[0m
        PUT
          with various correct inputs to update a data bag item
            with normal input
              behaves like a successful data bag item PUT
[32m                returns success[0m
[32m                updates the data bag item[0m
            with no ID in the update body
[32m              successfully updates (using ID from the URL)[0m
          with various incorrect inputs to update a data bag item
            to an item with a different id
[32m              should have a different id[0m
              behaves like an unsuccessful data bag item PUT
[32m                should return failure[0m
          with a payload size
            exactly equal to the maximum allowable size
[32m              should not respond with 413 Request Entity Too Large[0m
            exceeding the maximum allowable size
[32m              should respond with 413 Request Entity Too Large[0m
        DELETE
[32m          deletes the item[0m

Depsolver API endpoint
  POST /environments/:env/cookbook_versions
    empty and error cases
[32m      returns 400 with an empty payload[0m
[32m      returns 400 with an non-json payload[0m
[32m      returns 404 with an invalid environment[0m
[32m      returns 400 with non-Array as run_list value[0m
[32m      returns 400 with malformed JSON[0m
[32m      returns Error with an malformed item in run_list (int)[0m
[32m      returns 200 with an empty run_list[0m
[32m      returns 412 with a non-existent cookbook in _default environment[0m
[32m      returns 412 with a non-existent cookbook[0m
[32m      returns 412 with an existing cookbook filtered out by environment[0m
[32m      returns 412 and both cookbooks with more than one non-existent cookbook[0m
[32m      returns 412 when there is a runlist entry specifying version that doesn't exist[0m
[32m      returns 412 and both errors non-existent and no versions cookbooks[0m
    dependency error cases (one cookbook)
[32m      returns 412 when there is a dep that doesn't exist[0m
    dependency error cases (two cookbooks)
[32m      returns 412 and both entries when there are runlist entries specifying versions that don't exist[0m
[32m      returns 412 when there is a dep that doesn't have new enough version[0m
[32m      returns 412 when there is an impossible dependency[0m
    success cases
[32m      returns 200 with a minimal good cookbook[0m
      CHEF-3813: Return cookbook dependency metadata when a cookbook has dependencies
[32m        returns dependencies[0m
      with datestamps in cookbooks and environments
[32m        returns the correct solution[0m

/environments/ENVIRONMENT/cookbooks API endpoint
  with no cookbooks
    when fetching cookbooks from "_default" environment
[32m      should respond with 200 OK and no cookbooks[0m
    when environment does not exist
[32m      should respond with 404 Not Found[0m
    when fetching cookbooks
[32m      should respond with 200 OK and no cookbooks[0m
    when fetching cookbooks with num_version=all
[32m      should respond with 200 OK and no cookbooks[0m
    when fetching cookbooks with num_version=0
[32m      should respond with 200 OK and no cookbooks[0m
    when fetching cookbooks with num_version=1
[32m      should respond with 200 OK and no cookbooks[0m
    when fetching cookbooks with num_version=2
[32m      should respond with 200 OK and no cookbooks[0m
    when fetching cookbooks with num_version=30
[32m      should respond with 200 OK and no cookbooks[0m
    when num_versions is not "all" or a number
[32m      should respond with 400 Bad Request[0m
  with multiple versions of multiple cookbooks
    with no environment constraints
      from a non-default environment
        when fetching cookbooks
[32m          should respond with 200 OK and latest versions of ALL cookbooks[0m
        when fetching cookbooks with num_version=all
[32m          should respond with 200 OK and all latest versions of cookbooks[0m
        when fetching cookbooks with num_version=1
[32m          should respond with 200 OK and 1 latest versions of cookbooks[0m
        when fetching cookbooks with num_version=2
[32m          should respond with 200 OK and 2 latest versions of cookbooks[0m
        when fetching cookbooks with num_version=3
[32m          should respond with 200 OK and 3 latest versions of cookbooks[0m
        when fetching cookbooks with num_version=30
[32m          should respond with 200 OK and 30 latest versions of cookbooks[0m
      from the _default environment
        when fetching cookbooks in the _default environment
[32m          should respond with 200 OK and latest versions of ALL cookbooks[0m
        when fetching cookbooks with num_version=all
[32m          should respond with 200 OK and all latest versions of cookbooks[0m
        when fetching cookbooks with num_version=1
[32m          should respond with 200 OK and 1 latest versions of cookbooks[0m
        when fetching cookbooks with num_version=2
[32m          should respond with 200 OK and 2 latest versions of cookbooks[0m
        when fetching cookbooks with num_version=3
[32m          should respond with 200 OK and 3 latest versions of cookbooks[0m
        when fetching cookbooks with num_version=30
[32m          should respond with 200 OK and 30 latest versions of cookbooks[0m
    with environment constraints
      with constraints {"pedant_cb_one"=>"= 1.0.0"}
[32m        retrieves appropriate cookbooks[0m
      with constraints {"pedant_cb_one"=>"> 1.0.0"}
[32m        retrieves appropriate cookbooks[0m
      with constraints {"pedant_cb_one"=>"> 1.0.0"}
[32m        retrieves appropriate cookbooks with num_versions=2[0m
      with constraints {"pedant_cb_one"=>"> 1.0.0"}
[32m        retrieves appropriate cookbooks with num_versions=0[0m
      with constraints {"pedant_cb_one"=>"> 1.0.0", "pedant_cb_two"=>"< 1.2.3"}
[32m        retrieves appropriate cookbooks with num_versions=2[0m
      with constraints {"pedant_cb_one"=>"> 1.0.0", "pedant_cb_two"=>"< 1.2.3"}
[32m        retrieves appropriate cookbooks with num_versions=all[0m

Environments API Endpoint
  POST /environments
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m
    with no additional environments
      when creating a valid environment
[32m        should respond with 201 Created and a correct path[0m
[32m        should persist the environment[0m
      when handling the payload
        with authentication headers
          with successful user
            with everything correct
[32m              is successful[0m
            missing X-Ops-Sign
[32m              returns 400[0m
            unsupported X-Ops-Sign version
[32m              returns 400[0m
            empty X-Ops-Sign
[32m              returns 400[0m
            missing X-Ops-Userid
[33m              returns 400 (PENDING: No reason given)[0m
            empty X-Ops-Userid
[33m              returns 400 (PENDING: No reason given)[0m
            nonexistent username in X-Ops-Userid
[32m              returns 401[0m
            when X-Ops-Userid does not match signature
[32m              returns 401[0m
            absolutely immense X-Ops-Userid
[33m              returns 401 (PENDING: No reason given)[0m
            missing X-Ops-Timestamp
[32m              returns 400[0m
            empty X-Ops-Timestamp
[32m              returns 400[0m
            malformed X-Ops-Timestamp
[32m              returns 401[0m
            old X-Ops-Timestamp
[32m              returns 401[0m
            recent X-Ops-Timestamp
[32m              succeeds[0m
            when X-Ops-Timestamp does not match signature
[32m              returns 401[0m
            missing X-Ops-Content-Hash
[32m              returns 400[0m
            empty X-Ops-Content-Hash
[32m              returns 400[0m
            malformed X-Ops-Content-Hash
[32m              returns 401[0m
            when body does not match X-Ops-Content-Hash and signature
[32m              returns 401[0m
            when X-Ops-Content-Hash does not match body and signature
[32m              returns 401[0m
            missing signature in X-Ops-Authorization-
[32m              returns 401[0m
            malformed signature in X-Ops-Authorization-
[32m              returns 401[0m
            empty signature in X-Ops-Authorization-
[32m              returns 401[0m
            missing line 1 in signature in X-Ops-Authorization-
[32m              returns 401[0m
            missing a middle line in signature in X-Ops-Authorization-
[32m              returns 401[0m
            missing the last line in signature in X-Ops-Authorization-
[32m              returns 401[0m
            with a different method in the signature
[32m              returns 401[0m
            with a different path in the signature
[32m              returns 401[0m
            with an empty decoded signature
[32m              returns 401[0m
            with a malformed decoded signature
[32m              returns 401[0m
            when signature does not match body and X-Ops-Content-Hash
[32m              returns 401[0m
          when X-Ops-Request-Source is web
            impersonating successful user
[32m              succeeds[0m
            impersonating failed user
[32m              fails[0m
          with other successful user
[32m            succeeds[0m
        when unable to accept application/json
[32m          should respond with 406 Not Acceptable[0m
        when sending something other than application/json
[33m          webmachine not sucking (PENDING: No reason given)[0m
        with unparsable JSON payload
[32m          should respond with 400 Bad Request[0m
        with empty request payload
[32m          should respond with 400 Bad Request[0m
      when creating another "_default" environment
[32m        should respond with 409 Conflict[0m
      when validating
        with invalid body
[32m          with blah = anyoldvalue it reports 400[0m
          with an array
[32m            should respond with 400 Bad Request[0m
          with a string
[32m            should respond with 400 Bad Request[0m
          with a number
[32m            should respond with 400 Bad Request[0m
          with a floating number
[32m            should respond with 400 Bad Request[0m
          with a boolean
[32m            should respond with 400 Bad Request[0m
          with a null
[32m            should respond with 400 Bad Request[0m
        for name
[32m          with name = delete it reports 400[0m
[32m          with name =  it reports 400[0m
[32m          with name = abc!123 it reports 400[0m
[32m          with name = abc 123 it reports 400[0m
[32m          with name = 大爆発 it reports 400[0m
[32m          with name = 1999 it reports 400[0m
[32m          with name =  it reports 400[0m
[32m          with name = true it reports 400[0m
[32m          with name = [] it reports 400[0m
[32m          with name = {} it reports 400[0m
          ejson:decode eats nulls
[33m            with name = abc 123 it reports 400 (PENDING: No reason given)[0m
        with weird environment name
[32m          should respond with 201 Created and the environment url[0m
        for description
[32m          with description = delete it succeeds[0m
[32m          with description =  it succeeds[0m
[32m          with description = normal text it succeeds[0m
[32m          with description = これは日本語だ it succeeds[0m
[32m          with description = Hello 日本! it succeeds[0m
[32m          with description = 1999 it reports 400[0m
        for json_class
[32m          with json_class = Chef::Environment it succeeds[0m
[32m          with json_class = delete it succeeds[0m
[32m          with json_class =  it reports 400[0m
[32m          with json_class = 1999 it reports 400[0m
[32m          with json_class = notaclass it reports 400[0m
        for chef_type
[32m          with chef_type = environment it succeeds[0m
[32m          with chef_type = delete it succeeds[0m
[32m          with chef_type =  it reports 400[0m
[32m          with chef_type = 1999 it reports 400[0m
[32m          with chef_type = notaclass it reports 400[0m
        for default_attributes
[32m          with default_attributes = delete it succeeds[0m
[32m          with default_attributes = {} it succeeds[0m
[32m          with default_attributes = {"key1"=>"value1", "key2"=>"value2"} it succeeds[0m
[32m          with default_attributes = 1999 it reports 400[0m
[32m          with default_attributes = hello it reports 400[0m
          for keys
[32m            with default_attributes = {"key"=>"value"} it succeeds[0m
[32m            with default_attributes = {"鍵"=>"value"} it succeeds[0m
[32m            with default_attributes = {""=>"value"} it succeeds[0m
[32m            with default_attributes = {null:"value"} it reports 400[0m
[32m            with default_attributes = {99:"value"} it reports 400[0m
[32m            with default_attributes = {"key":"value","key":"value"} it reports 400[0m
          for values
[32m            with default_attributes = {"key"=>""} it succeeds[0m
[32m            with default_attributes = {"key"=>nil} it succeeds[0m
[32m            with default_attributes = {"key"=>99} it succeeds[0m
[32m            with default_attributes = {"key"=>"値"} it succeeds[0m
        for override_attributes
[32m          with override_attributes = delete it succeeds[0m
[32m          with override_attributes = {} it succeeds[0m
[32m          with override_attributes = {"key1"=>"value1", "key2"=>"value2"} it succeeds[0m
[32m          with override_attributes = 1999 it reports 400[0m
[32m          with override_attributes = hello it reports 400[0m
          for keys
[32m            with override_attributes = {"key"=>"value"} it succeeds[0m
[32m            with override_attributes = {"鍵"=>"value"} it succeeds[0m
[32m            with override_attributes = {""=>"value"} it succeeds[0m
[32m            with override_attributes = {null:"value"} it reports 400[0m
[32m            with override_attributes = {99:"value"} it reports 400[0m
[32m            with override_attributes = {"key":"value","key":"value"} it reports 400[0m
          for values
[32m            with override_attributes = {"key"=>""} it succeeds[0m
[32m            with override_attributes = {"key"=>nil} it succeeds[0m
[32m            with override_attributes = {"key"=>99} it succeeds[0m
[32m            with override_attributes = {"key"=>"値"} it succeeds[0m
        for cookbooks
[32m          with cookbook_versions = delete it succeeds[0m
[32m          with cookbook_versions = {} it succeeds[0m
[32m          with cookbook_versions = 1999 it reports 400[0m
[32m          with cookbook_versions = hello it reports 400[0m
          for cookbook names
[32m            with cookbook_versions = {"cookbook"=>">= 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"the cookbook"=>">= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"料理書"=>">= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {""=>">= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {null:">= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {1999:">= 1.0.0"} it reports 400[0m
          for versions
[32m            with cookbook_versions = {"cookbook"=>">= 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"<= 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"> 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"< 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"= 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"~> 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>nil} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>[">= 1.0.0"]} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>[]} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.0.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1,0,0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.a.b"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.0rc1"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">=1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>" >= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">=  1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>[">= 1.0", ">= 2.0"]} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>1} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>1.1} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>""} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.2.20130730201745"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.-2.3"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.2.2147483647"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.2.2147483669"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.2.9223372036854775849"} it reports 400[0m
      when creating an environment without json_class
[32m        should respond with 201 Created and a correct path[0m
[32m        should persist the environment[0m
    with non-default environments
      with the same name as another non-default environment
[32m        should respond with 409 Conflict[0m

Environments API Endpoint
  POST /environments
    with no additional environments
[33m      when handling the payload (PENDING: No reason given)[0m
      permissions
        with an admin user
[32m          should respond with 201 Created and a correct path[0m
[32m          should persist the environment[0m
        with a normal user
[32m          should respond with 201 Created and a correct path[0m
[32m          should persist the environment[0m
        with a user with minimal permissions to create /environments
[32m          should respond with 201 Created and a correct path[0m
[32m          should persist the environment[0m
[32m          should create a child with restricted permissions[0m
        with a user with all permissions EXCEPT create
[32m          returns 403[0m
        with a client
[32m          should respond with 403 Forbidden[0m
        with an outside user (admin of another org)
[32m          should respond with 403 Forbidden[0m

Environments API Endpoint
  with no additional environments
    DELETE /environments
[32m      should respond with 405 Method Not Allowed[0m
    DELETE /environments/<name>
      with "_default" environment
[32m        should respond with 405 Method Not Allowed[0m
      with non-existent environment
[32m        should respond with 404 Not Found[0m
  with non-default environments in the organization
    DELETE /environments/<name>
      when authenticating
        with successful user
          with everything correct
[32m            is successful[0m
          missing X-Ops-Sign
[32m            returns 400[0m
          unsupported X-Ops-Sign version
[32m            returns 400[0m
          empty X-Ops-Sign
[32m            returns 400[0m
          missing X-Ops-Userid
[33m            returns 400 (PENDING: No reason given)[0m
          empty X-Ops-Userid
[33m            returns 400 (PENDING: No reason given)[0m
          nonexistent username in X-Ops-Userid
[32m            returns 401[0m
          when X-Ops-Userid does not match signature
[32m            returns 401[0m
          absolutely immense X-Ops-Userid
[33m            returns 401 (PENDING: No reason given)[0m
          missing X-Ops-Timestamp
[32m            returns 400[0m
          empty X-Ops-Timestamp
[32m            returns 400[0m
          malformed X-Ops-Timestamp
[32m            returns 401[0m
          old X-Ops-Timestamp
[32m            returns 401[0m
          recent X-Ops-Timestamp
[32m            succeeds[0m
          when X-Ops-Timestamp does not match signature
[32m            returns 401[0m
          missing X-Ops-Content-Hash
[32m            returns 400[0m
          empty X-Ops-Content-Hash
[32m            returns 400[0m
          malformed X-Ops-Content-Hash
[32m            returns 401[0m
          when body does not match X-Ops-Content-Hash and signature
[32m            returns 401[0m
          when X-Ops-Content-Hash does not match body and signature
[32m            returns 401[0m
          missing signature in X-Ops-Authorization-
[32m            returns 401[0m
          malformed signature in X-Ops-Authorization-
[32m            returns 401[0m
          empty signature in X-Ops-Authorization-
[32m            returns 401[0m
          missing line 1 in signature in X-Ops-Authorization-
[32m            returns 401[0m
          missing a middle line in signature in X-Ops-Authorization-
[32m            returns 401[0m
          missing the last line in signature in X-Ops-Authorization-
[32m            returns 401[0m
          with a different method in the signature
[32m            returns 401[0m
          with a different path in the signature
[32m            returns 401[0m
          with an empty decoded signature
[32m            returns 401[0m
          with a malformed decoded signature
[32m            returns 401[0m
          when signature does not match body and X-Ops-Content-Hash
[32m            returns 401[0m
        when X-Ops-Request-Source is web
          impersonating successful user
[32m            succeeds[0m
          impersonating failed user
[32m            fails[0m
        with other successful user
[32m          succeeds[0m
      with an existing environment
[32m        should respond with 200 OK[0m
      without an existing environment
[32m        should respond with 404 Not Found[0m
      when attempting to delete "_default" environment
[32m        should respond with 405 Method Not Allowed[0m

Environments API Endpoint
  with non-default environments in the organization
    DELETE /environments/<name>
      permissions
        as an admin user
[32m          should respond with 200 OK and the deleted environment[0m
[32m          should delete the environment[0m
        as a normal user
[32m          should respond with 200 OK and the deleted environment[0m
[32m          should delete the environment[0m
        with a user with minimal permissions to delete /environments/<name>
[32m          should respond with 200 OK and the deleted environment[0m
[32m          should delete the environment[0m
        with a user with all permissions EXCEPT delete
[32m          should respond with 403 Forbidden[0m
        with a client
[32m          should respond with 403 Forbidden[0m
        with an outside user (admin of another org)
[32m          should respond with 403 Forbidden[0m
      when the organization does not exist
[32m        should respond with 404 Not Found[0m

Environments API Endpoint
  GET /environments
    with an operational server
[32m      should respond with 200 OK[0m
    with no additional environments
[32m      should respond with 200 OK[0m
[33m      should respond to cookbook versions (PENDING: Not yet implemented)[0m
      with a non-existant environment
[32m        should respond with 404 Not Found[0m
    with non-default environments
[32m      should respond with 200 OK and an index of all the available environments[0m
  GET /environments/_default
    with an operational server
[32m      should respond with 200 OK[0m
    with a newly installed server
[32m      should respond with 200 OK and the default environment[0m
  GET /environments/<name>
    with an existing environment
[32m      should respond with 200 OK and the environment[0m
    when handling authentication headers
      with successful user
        with everything correct
[32m          is successful[0m
        missing X-Ops-Sign
[32m          returns 400[0m
        unsupported X-Ops-Sign version
[32m          returns 400[0m
        empty X-Ops-Sign
[32m          returns 400[0m
        missing X-Ops-Userid
[33m          returns 400 (PENDING: No reason given)[0m
        empty X-Ops-Userid
[33m          returns 400 (PENDING: No reason given)[0m
        nonexistent username in X-Ops-Userid
[32m          returns 401[0m
        when X-Ops-Userid does not match signature
[32m          returns 401[0m
        absolutely immense X-Ops-Userid
[33m          returns 401 (PENDING: No reason given)[0m
        missing X-Ops-Timestamp
[32m          returns 400[0m
        empty X-Ops-Timestamp
[32m          returns 400[0m
        malformed X-Ops-Timestamp
[32m          returns 401[0m
        old X-Ops-Timestamp
[32m          returns 401[0m
        recent X-Ops-Timestamp
[32m          succeeds[0m
        when X-Ops-Timestamp does not match signature
[32m          returns 401[0m
        missing X-Ops-Content-Hash
[32m          returns 400[0m
        empty X-Ops-Content-Hash
[32m          returns 400[0m
        malformed X-Ops-Content-Hash
[32m          returns 401[0m
        when body does not match X-Ops-Content-Hash and signature
[32m          returns 401[0m
        when X-Ops-Content-Hash does not match body and signature
[32m          returns 401[0m
        missing signature in X-Ops-Authorization-
[32m          returns 401[0m
        malformed signature in X-Ops-Authorization-
[32m          returns 401[0m
        empty signature in X-Ops-Authorization-
[32m          returns 401[0m
        missing line 1 in signature in X-Ops-Authorization-
[32m          returns 401[0m
        missing a middle line in signature in X-Ops-Authorization-
[32m          returns 401[0m
        missing the last line in signature in X-Ops-Authorization-
[32m          returns 401[0m
        with a different method in the signature
[32m          returns 401[0m
        with a different path in the signature
[32m          returns 401[0m
        with an empty decoded signature
[32m          returns 401[0m
        with a malformed decoded signature
[32m          returns 401[0m
        when signature does not match body and X-Ops-Content-Hash
[32m          returns 401[0m
      when X-Ops-Request-Source is web
        impersonating successful user
[32m          succeeds[0m
        impersonating failed user
[32m          fails[0m
      with other successful user
[32m        succeeds[0m
    when the environment does not exist
[32m      should respond with 404 Not Found[0m
  search
[32m    can be searched for by name[0m
[32m    can be searched for by description[0m
[32m    can be searched for by JSON class[0m
[32m    can be searched for by cookbook versions[0m
[32m    can be searched for by chef type[0m
[32m    can be searched for by default attribute[0m
[32m    can be searched for by override attribute[0m

Environments API Endpoint
  GET
    with no additional environments
[33m      should respond to cookbook versions (PENDING: Not yet implemented)[0m
      GET /environments
[32m        should respond with 200 OK[0m
      GET /environments/_default
[32m        should respond with 200 OK and the default environment[0m
      with a non-existant environment
[32m        should respond with 404 Not Found[0m
    with non-default environments
      GET /environments
        permissions
          with an admin user
[32m            GET /environments succeeds[0m
          with a normal user
[32m            GET /environments succeeds[0m
          with a user with minimal permissions to read /environments
[32m            GET /environments succeeds[0m
          with a user with all permissions EXCEPT read
[32m            returns 403[0m
          with a client
[32m            GET /environments succeeds[0m
          with an outside user (admin of another org)
[32m            returns 403[0m
      GET /environments/<name>
        permissions
          with an admin user
[32m            should respond with 200 OK[0m
          with a normal user
[32m            should respond with 200 OK[0m
          with a user with minimal permissions to read /environments
[32m            should respond with 200 OK[0m
          with a user with all permissions EXCEPT read
[32m            returns 403[0m
          with a client
[32m            should respond with 200 OK[0m
          with an outside user (admin of another org)
[32m            should respond with 403 Forbidden[0m
        when the organization does not exist
[32m          should respond with 404 Not Found[0m
        when the environment does not exist
[32m          should respond with 404 Not Found[0m

/environments/ENVIRONMENT/recipes API endpoint
  with no cookbooks
    when environment does not exist
[32m      should respond with 404 Not Found[0m
    when fetching recipes
[32m      should respond with 200 OK and no recipes[0m
    when fetching recipes from _default environment
[32m      should respond with 200 OK and no recipes[0m
  with multiple versions of multiple cookbooks
    with no environment constraints
      when fetching recipes from a non-default environment
[32m        should respond with 200 OK and recipes from the latest version of all cookbooks within the environment[0m
      when fetching recipes from _default environment
[32m        should respond with 200 OK and recipes from the latest version of all cookbooks within the environment[0m
    with environment constraints
      with constraints {"pedant_cb_one"=>"= 1.0.0"}
[32m        retrieves appropriate recipes[0m
      with constraints {"pedant_cb_one"=>"< 2.5.0"}
[32m        retrieves appropriate recipes[0m
      with constraints {"pedant_cb_one"=>"< 2.5.0", "pedant_cb_two"=>"= 1.0.0"}
[32m        retrieves appropriate recipes[0m
      with constraints {"pedant_cb_one"=>"= 6.6.6", "pedant_cb_two"=>"= 6.6.6", "pedant_cb_three"=>"= 6.6.6"}
[32m        retrieves appropriate recipes[0m

Environments API Endpoint
  GET /environments/<name>/roles
    within the default environment
      with an existing role
[32m        should respond with 200 OK[0m
      without an existing role
[32m        should respond with 404 Not Found[0m
    within a non-default environment
      with an existing role
[32m        should respond with 200 OK and the role[0m
      with non-existent environment
[32m        should respond with 404 Not Found[0m
      without authorization
[32m        should respond with 401 Unauthorized[0m
      with existing role in different existing environment
[32m        should respond with 404 Not Found[0m

/environments/ENVIRONMENT/cookbooks/COOKBOOK API endpoint
  with no cookbooks
[32m    fails if the environment does not exist[0m
[32m    does not find a non-existent cookbook in the 'test_env' cookbook[0m
[32m    does not find a non-existent cookbook in the '_default' cookbook[0m
  with multiple versions of multiple cookbooks
    with no environment constraints
[32m      returns all acceptable cookbook version(s) of cb_one from the 'test_env' environment when num_versions is not specified[0m
[32m      returns 1 acceptable cookbook version(s) of cb_one from the 'test_env' environment[0m
[32m      returns 2 acceptable cookbook version(s) of cb_one from the 'test_env' environment[0m
[32m      returns 3 acceptable cookbook version(s) of cb_one from the 'test_env' environment[0m
[32m      returns 30 acceptable cookbook version(s) of cb_one from the 'test_env' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_one from the 'test_env' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_two from the 'test_env' environment when num_versions is not specified[0m
[32m      returns 1 acceptable cookbook version(s) of cb_two from the 'test_env' environment[0m
[32m      returns 2 acceptable cookbook version(s) of cb_two from the 'test_env' environment[0m
[32m      returns 3 acceptable cookbook version(s) of cb_two from the 'test_env' environment[0m
[32m      returns 30 acceptable cookbook version(s) of cb_two from the 'test_env' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_two from the 'test_env' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_three from the 'test_env' environment when num_versions is not specified[0m
[32m      returns 1 acceptable cookbook version(s) of cb_three from the 'test_env' environment[0m
[32m      returns 2 acceptable cookbook version(s) of cb_three from the 'test_env' environment[0m
[32m      returns 3 acceptable cookbook version(s) of cb_three from the 'test_env' environment[0m
[32m      returns 30 acceptable cookbook version(s) of cb_three from the 'test_env' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_three from the 'test_env' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_one from the '_default' environment when num_versions is not specified[0m
[32m      returns 1 acceptable cookbook version(s) of cb_one from the '_default' environment[0m
[32m      returns 2 acceptable cookbook version(s) of cb_one from the '_default' environment[0m
[32m      returns 3 acceptable cookbook version(s) of cb_one from the '_default' environment[0m
[32m      returns 30 acceptable cookbook version(s) of cb_one from the '_default' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_one from the '_default' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_two from the '_default' environment when num_versions is not specified[0m
[32m      returns 1 acceptable cookbook version(s) of cb_two from the '_default' environment[0m
[32m      returns 2 acceptable cookbook version(s) of cb_two from the '_default' environment[0m
[32m      returns 3 acceptable cookbook version(s) of cb_two from the '_default' environment[0m
[32m      returns 30 acceptable cookbook version(s) of cb_two from the '_default' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_two from the '_default' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_three from the '_default' environment when num_versions is not specified[0m
[32m      returns 1 acceptable cookbook version(s) of cb_three from the '_default' environment[0m
[32m      returns 2 acceptable cookbook version(s) of cb_three from the '_default' environment[0m
[32m      returns 3 acceptable cookbook version(s) of cb_three from the '_default' environment[0m
[32m      returns 30 acceptable cookbook version(s) of cb_three from the '_default' environment[0m
[32m      returns all acceptable cookbook version(s) of cb_three from the '_default' environment[0m
    with environment constraints
      with constraints {"cb_one"=>"= 1.0.0"}
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=1[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=2[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=3[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=all[0m
[32m        retrieves all appropriate cookbook versions of 'cb_one' without 'num_versions'[0m
      with constraints {"cb_one"=>"> 1.0.0"}
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=1[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=2[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=3[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=all[0m
[32m        retrieves all appropriate cookbook versions of 'cb_one' without 'num_versions'[0m
      with constraints {"cb_one"=>"= 6.6.6"}
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=1[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=2[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=3[0m
[32m        retrieves appropriate cookbook versions of 'cb_one' with num_versions=all[0m
[32m        retrieves all appropriate cookbook versions of 'cb_one' without 'num_versions'[0m
      with constraints {"cb_three"=>"~> 0.5"}
[32m        retrieves appropriate cookbook versions of 'cb_three' with num_versions=1[0m
[32m        retrieves appropriate cookbook versions of 'cb_three' with num_versions=2[0m
[32m        retrieves appropriate cookbook versions of 'cb_three' with num_versions=3[0m
[32m        retrieves appropriate cookbook versions of 'cb_three' with num_versions=all[0m
[32m        retrieves all appropriate cookbook versions of 'cb_three' without 'num_versions'[0m

Environments API Endpoint
  with no additional environments
    PUT /environments
[32m      should respond with 405 Method Not Allowed[0m
    PUT /environments/<name>
      with a non-existent environment
[32m        should respond with 404 Not Found[0m
      when updating the "_default" environment
[32m        should respond with 404 Not Found[0m
  with non-default environments in the organization
    PUT /environments/<name>
      with a payload size
        exactly equal to the maximum allowable size
[32m          should not respond with 413 Request Entity Too Large[0m
        exceeding the maximum allowable size
[32m          should respond with 413 Request Entity Too Large[0m
      with a valid update
[32m        should respond with 200 OK[0m
      when handling request headers and payload
        with authentication headers
          with successful user
            with everything correct
[32m              is successful[0m
            missing X-Ops-Sign
[32m              returns 400[0m
            unsupported X-Ops-Sign version
[32m              returns 400[0m
            empty X-Ops-Sign
[32m              returns 400[0m
            missing X-Ops-Userid
[33m              returns 400 (PENDING: No reason given)[0m
            empty X-Ops-Userid
[33m              returns 400 (PENDING: No reason given)[0m
            nonexistent username in X-Ops-Userid
[32m              returns 401[0m
            when X-Ops-Userid does not match signature
[32m              returns 401[0m
            absolutely immense X-Ops-Userid
[33m              returns 401 (PENDING: No reason given)[0m
            missing X-Ops-Timestamp
[32m              returns 400[0m
            empty X-Ops-Timestamp
[32m              returns 400[0m
            malformed X-Ops-Timestamp
[32m              returns 401[0m
            old X-Ops-Timestamp
[32m              returns 401[0m
            recent X-Ops-Timestamp
[32m              succeeds[0m
            when X-Ops-Timestamp does not match signature
[32m              returns 401[0m
            missing X-Ops-Content-Hash
[32m              returns 400[0m
            empty X-Ops-Content-Hash
[32m              returns 400[0m
            malformed X-Ops-Content-Hash
[32m              returns 401[0m
            when body does not match X-Ops-Content-Hash and signature
[32m              returns 401[0m
            when X-Ops-Content-Hash does not match body and signature
[32m              returns 401[0m
            missing signature in X-Ops-Authorization-
[32m              returns 401[0m
            malformed signature in X-Ops-Authorization-
[32m              returns 401[0m
            empty signature in X-Ops-Authorization-
[32m              returns 401[0m
            missing line 1 in signature in X-Ops-Authorization-
[32m              returns 401[0m
            missing a middle line in signature in X-Ops-Authorization-
[32m              returns 401[0m
            missing the last line in signature in X-Ops-Authorization-
[32m              returns 401[0m
            with a different method in the signature
[32m              returns 401[0m
            with a different path in the signature
[32m              returns 401[0m
            with an empty decoded signature
[32m              returns 401[0m
            with a malformed decoded signature
[32m              returns 401[0m
            when signature does not match body and X-Ops-Content-Hash
[32m              returns 401[0m
          when X-Ops-Request-Source is web
            impersonating successful user
[32m              succeeds[0m
            impersonating failed user
[32m              fails[0m
          with other successful user
[32m            succeeds[0m
        when unable to accept application/json
[32m          should respond with 406 Not Acceptable[0m
        when sending something other than application/json
[33m          webmachine not sucking (PENDING: No reason given)[0m
        with unparsable JSON payload
[32m          should respond with 400 Bad Request[0m
        with empty request payload
[32m          should respond with 400 Bad Request[0m
      when validating
        with invalid body
[32m          with blah = anyoldvalue it reports 400[0m
          with an array
[32m            should respond with 400 Bad Request[0m
          with a string
[32m            should respond with 400 Bad Request[0m
          with a number
[32m            should respond with 400 Bad Request[0m
          with a floating number
[32m            should respond with 400 Bad Request[0m
          with a boolean
[32m            should respond with 400 Bad Request[0m
          with a null
[32m            should respond with 400 Bad Request[0m
        for name
[32m          with name = delete it reports 400[0m
[32m          with name =  it reports 400[0m
[32m          with name = abc!123 it reports 400[0m
[32m          with name = abc 123 it reports 400[0m
[32m          with name = 大爆発 it reports 400[0m
[32m          with name =  it reports 400[0m
[32m          with name = 1999 it reports 400[0m
[32m          with name = true it reports 400[0m
[32m          with name = [] it reports 400[0m
[32m          with name = {} it reports 400[0m
          ejson:decode eats nulls
[32m            with name = abc 123 it reports 400[0m
        for description
[32m          with description = delete it succeeds[0m
[32m          with description =  it succeeds[0m
[32m          with description = normal text it succeeds[0m
[32m          with description = これは日本語だ it succeeds[0m
[32m          with description = Hello 日本! it succeeds[0m
[32m          with description = 1999 it reports 400[0m
        for json_class
[32m          with json_class = Chef::Environment it succeeds[0m
[32m          with json_class = delete it succeeds[0m
[32m          with json_class =  it reports 400[0m
[32m          with json_class = 1999 it reports 400[0m
[32m          with json_class = notaclass it reports 400[0m
        for chef_type
[32m          with chef_type = environment it succeeds[0m
[32m          with chef_type = delete it succeeds[0m
[32m          with chef_type =  it reports 400[0m
[32m          with chef_type = 1999 it reports 400[0m
[32m          with chef_type = notaclass it reports 400[0m
        for default_attributes
[32m          with default_attributes = delete it succeeds[0m
[32m          with default_attributes = {} it succeeds[0m
[32m          with default_attributes = {"key1"=>"value1", "key2"=>"value2"} it succeeds[0m
[32m          with default_attributes = 1999 it reports 400[0m
[32m          with default_attributes = hello it reports 400[0m
          for keys
[32m            with default_attributes = {"key"=>"value"} it succeeds[0m
[32m            with default_attributes = {"鍵"=>"value"} it succeeds[0m
[32m            with default_attributes = {""=>"value"} it succeeds[0m
[32m            with default_attributes = {null:"value"} it reports 400[0m
[32m            with default_attributes = {99:"value"} it reports 400[0m
[32m            with default_attributes = {"key":"value","key":"value"} it reports 400[0m
          for values
[32m            with default_attributes = {"key"=>""} it succeeds[0m
[32m            with default_attributes = {"key"=>nil} it succeeds[0m
[32m            with default_attributes = {"key"=>99} it succeeds[0m
[32m            with default_attributes = {"key"=>"値"} it succeeds[0m
        for override_attributes
[32m          with override_attributes = delete it succeeds[0m
[32m          with override_attributes = {} it succeeds[0m
[32m          with override_attributes = {"key1"=>"value1", "key2"=>"value2"} it succeeds[0m
[32m          with override_attributes = 1999 it reports 400[0m
[32m          with override_attributes = hello it reports 400[0m
          for keys
[32m            with override_attributes = {"key"=>"value"} it succeeds[0m
[32m            with override_attributes = {"鍵"=>"value"} it succeeds[0m
[32m            with override_attributes = {""=>"value"} it succeeds[0m
[32m            with override_attributes = {null:"value"} it reports 400[0m
[32m            with override_attributes = {99:"value"} it reports 400[0m
[32m            with override_attributes = {"key":"value","key":"value"} it reports 400[0m
          for values
[32m            with override_attributes = {"key"=>""} it succeeds[0m
[32m            with override_attributes = {"key"=>nil} it succeeds[0m
[32m            with override_attributes = {"key"=>99} it succeeds[0m
[32m            with override_attributes = {"key"=>"値"} it succeeds[0m
        for cookbooks
[32m          with cookbook_versions = delete it succeeds[0m
[32m          with cookbook_versions = {} it succeeds[0m
[32m          with cookbook_versions = 1999 it reports 400[0m
[32m          with cookbook_versions = hello it reports 400[0m
          for cookbook names
[32m            with cookbook_versions = {"cookbook"=>">= 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"the cookbook"=>">= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"料理書"=>">= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {""=>">= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {null:">= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {1999:">= 1.0.0"} it reports 400[0m
          for versions
[32m            with cookbook_versions = {"cookbook"=>">= 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"<= 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"> 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"< 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"= 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"~> 1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>"1.0.0"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>nil} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>[">= 1.0.0"]} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>[]} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.0.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1,0,0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.a.b"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.0rc1"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">=1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>" >= 1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">=  1.0.0"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>[">= 1.0", ">= 2.0"]} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>1} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>1.1} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>""} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.2.20130730201745"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.-2.3"} it reports 400[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.2.2147483647"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.2.2147483669"} it succeeds[0m
[32m            with cookbook_versions = {"cookbook"=>">= 1.2.9223372036854775849"} it reports 400[0m
      when updating a single value
        when updating description = "whooooah"
[32m          should respond with 200 OK and update the environment[0m
        when updating cookbook_versions = {"fork"=>"= 2.2"}
[32m          should respond with 200 OK and update the environment[0m
        when updating json_class = "Chef::Environment"
[32m          should respond with 200 OK and update the environment[0m
        when updating chef_type = "environment"
[32m          should respond with 200 OK and update the environment[0m
        when updating default_attributes = {"arr"=>"yarr"}
[32m          should respond with 200 OK and update the environment[0m
        when updating override_attributes = {"frick"=>"frack"}
[32m          should respond with 200 OK and update the environment[0m
      when updating name
[32m        should respond with 201 Created and the updated environment[0m
[32m        should respond with 201 Created and renames the environment[0m
      when environment already exists
[32m        should respond with 409 Conflict and does not rename environment[0m
      when renaming environment to "_default"
[32m        should respond with 409 Conflict[0m

Environments API Endpoint
  with no additional environments
    PUT /environments/<name>
      with a non-existent organization
[32m        should respond with 404 Not Found[0m
  with non-default environments in the organization
    PUT /environments/<name>
      permissions
        with an admin user
[32m          updates description = blah[0m
        with a normal user
[32m          updates description = blah[0m
        with a user with minimal permissions to update an environment
[32m          updates description = blah[0m
        with a user with all permissions EXCEPT update
[32m          returns 403[0m
        with a client
[32m          returns 403[0m
        with an outside user (admin of another org)
[32m          returns 403[0m

Environments API Endpoint
  access control
    GET /environments
[32m      returns a 401 ("Unauthorized") for invalid user[0m
[32m      returns a 403 ("Forbidden") for outside user[0m
    GET /environments/<name>
[32m      returns a 200 ("OK") for admin[0m
[32m      returns a 200 ("OK") for normal user[0m
[32m      returns a 401 ("Unauthorized") for invalid user[0m
[32m      returns a 403 ("Forbidden") for outside user[0m
[32m      returns a 404 ("Not Found") for missing environment for admin[0m
[32m      returns a 404 ("Not Found") for missing environment for normal user[0m
    POST /environments
[32m      returns a 401 ("Unauthorized") for invalid user[0m
[32m      returns a 201 ("Created") for normal user[0m
[32m      returns a 403 ("Forbidden") for outside user[0m
[32m      returns a 201 ("Created") for admin user[0m
[32m      returns a 409 ("Conflict") when trying to recreate existing environment[0m
    PUT /environments/<name>
[32m      returns a 200 ("OK") for admin[0m
[32m      returns a 401 ("Unauthorized") for invalid user[0m
[32m      returns a 200 ("OK") for normal user[0m
[32m      returns a 403 ("Forbidden") for outside user[0m
[32m      returns a 404 ("Not Found") when PUTting missing environment[0m
    DELETE /environments/<name>
[32m      returns a 200 ("OK") as admin[0m
[32m      returns a 200 ("OK") as user[0m
[32m      returns a 401 ("Unauthorized") for invalid user[0m
[32m      returns a 403 ("Forbidden") for outside user[0m
[32m      returns a 404 ("Not Found") when DELETEing missing environment[0m

Headers
  Request Headers
[32m    Accepts High Version[0m
[32m    Rejects Low Version[0m

/keys endpoint
  when a new user is created via POST /users
[32m    should insert a new default keys entry that is retrievable via the keys API[0m
  when a new client is created via POST /organizations/:org/clients
[32m    should insert a new default keys entry that is retrievable via the keys API[0m
  when a single key exists for a user
    when the key is uploaded via POST /users
[32m      should authenticate against the single key[0m
    when the default key has been changed via the keys API
[32m      should authenticate against the updated key[0m
[32m      should break for original default key[0m
  when a key has been generated for a user
[32m    should be able to authenticate with the generated key[0m
  when a single key exists for a client
    when the key is uploaded via POST /clients
[32m      should authenticate against the single key[0m
    when the default key has been changed via the keys API
[32m      should authenticate against the updated key[0m
[32m      should break for original default key[0m
  when a key has been generated for a client
[32m    should be able to authenticate with the generated key[0m
  when a key is deleted for a user
[32m    should not longer be returned by the keys API[0m
[32m    should still contain other keys not yet deleted[0m
  when a key is deleted for a client
[32m    should no longer be returned by the keys API[0m
[32m    should still contain other keys not yet deleted[0m
  when multiple keys exist for a user
    should properly authenticate against either keys
[32m      should properly authenticate against the second key[0m
[32m      should properly authenticate against the first key[0m
  when multiple keys exist for a client
    should properly authenticate against either keys
[32m      should properly authenticate against the first key[0m
[32m      should properly authenticate against the second key[0m
  when a user key has an expiration date and isn't expired
[32m    should authenticate against the key[0m
  when a user's default key has an expiration date
    and is updated via a PUT to /users/:user
[32m      will no longer have an expiration date when queried via the keys API[0m
  when a client's default key has an expiration date
    and is updated via a PUT to /organizations/:org/clients/:client
[32m      should no longer have an expiration date when queried via the keys API[0m
  when a client key has an expiration date and isn't expired
[32m    should authenticate against the key[0m
  when a key is expired for a user
[32m    should fail against the expired key[0m
[32m    should succeed against other keys[0m
  when a key is expired for a client
[32m    should fail against the expired key[0m
[32m    should succeed against other keys[0m
  when the default key for a user exists
[32m    the public_key field returned by GET /users/:user and from the keys table should be the same[0m
  when the default key for a client exists
[32m    should return public_key field returned by GET /organization/:org/clients/:client and from the keys table should be the same[0m
  when a user's default key is updated via the keys API
[32m    should return the proper, updated key via /users/:user[0m
  when a user's default key is deleted via the keys API
[32m    public field returned by /users/:user should be null[0m
[32m    the keys API should not return a key named default[0m
  when a clients's default key is deleted via the keys API
[32m    public field returned by /organizations/:org/clients/:client should be null[0m
[32m    the keys API should not return a key named default[0m
  when a user is updated via PUT but the public_key is omitted
[32m    should not modify the public key returned via GET /users/:user[0m
[32m    should not clear the default key returned via the keys API[0m
  when a client is updated via PUT but the public_key is omitted
[32m    not modify the public key returned via GET /organizations/:org/clients/:client[0m
[32m    should not clear the default key returned via the keys API[0m
  when a user's default key has already been deleted via the keys API and then re-added via PUT to /users/:user
[32m    the correct key should be shown in the user's record via GET /users/:user[0m
[32m    should be present in the keys list[0m
[32m    should be able to authenticate with the updated default key[0m
  when a client's default key has already been deleted via the keys API and then re-added via PUT to /organizations/:org/clients/:client
[32m    should be shown in the clients's record via GET of the named client[0m
[32m    should be present in the keys list[0m
[32m    should be able to authenticate with the updated default key[0m
  when the default key is updated for a user via a PUT to /users/:user
    when the default key exists
[32m      should update the default key in the keys table[0m
[32m      should no longer contain the old default key[0m
[32m      should return the new key from the /users endpoint[0m
  when the default key is updated for a client via a PUT to /organizations/:org/clients/:client
    when the default key exists
[32m      should update the default key in the keys table[0m
[32m      should no longer contain the old default key[0m
[32m      should return the new key from the /users endpoint[0m
  when a user is PUT with public_key:null via /users/:user
[32m    the key should remain unchanged via GET /users/:user[0m
[32m    should leave the default key from the keys API list present for that user[0m
  when a client is PUT with public_key:null to /organizations/:org/clients/:client
[32m    the key should remain unchanged via GET /organizations/:org/clients/:client[0m
[32m    should leave the default key from the keys API list unmodified for that client[0m
  when a user and client with the same name exist
[32m    should not allow client to query /users/:user/keys[0m
[32m    should allow user to query /users/:user/keys[0m
  managing keys
Creating org pedant-keys-org-2-1431720902
    posting keys
      for a client
[32m        that doesn't exist it should reply with 404[0m
        behaves like basic keys POST validation
[32m          when name is empty it responds with 400[0m
[32m          when name is invalid it responds with 400[0m
[32m          when name is missing it responds with 400[0m
[32m          when date is invalid it responds with 400[0m
[32m          when date is empty it responds with 400[0m
[32m          when date is missing it responds with 400[0m
[32m          when public key is not a valid key it responds with 400[0m
[32m          when public key is missing it responds with 400[0m
[32m          when a key of the same name already exists it responds with 409[0m
[32m          when both a public_key and create_key are present it responds with 400[0m
          when all fields are present and valid
[32m            should create a key with proper response and Location header[0m
[32m            and infinity date is specfied it should still create a key with proper response and Location header[0m
[32m            when 'create_key' is false alongside a public key it should not generate a private key[0m
[32m            when 'create_key' : true is specified in lieu of public key it should generate a new private key and reply with it in the body[0m
        POST /organizations/:org/clients/:client/keys as...
[32m          an invalid user fails with 401[0m
[32m          the org client itself succeeds[0m
[32m          the superuser succeeds[0m
          another user in the org
[32m            fails with 403[0m
          as an org admin of a member org
[32m            succeeds[0m
      for a user
[32m        that doesn't exist it should reply with 404[0m
        behaves like basic keys POST validation
[32m          when name is empty it responds with 400[0m
[32m          when name is invalid it responds with 400[0m
[32m          when name is missing it responds with 400[0m
[32m          when date is invalid it responds with 400[0m
[32m          when date is empty it responds with 400[0m
[32m          when date is missing it responds with 400[0m
[32m          when public key is not a valid key it responds with 400[0m
[32m          when public key is missing it responds with 400[0m
[32m          when a key of the same name already exists it responds with 409[0m
[32m          when both a public_key and create_key are present it responds with 400[0m
          when all fields are present and valid
[32m            should create a key with proper response and Location header[0m
[32m            and infinity date is specfied it should still create a key with proper response and Location header[0m
[32m            when 'create_key' is false alongside a public key it should not generate a private key[0m
[32m            when 'create_key' : true is specified in lieu of public key it should generate a new private key and reply with it in the body[0m
        POST /users/:user/keys as...
[32m          an invalid user fails with 401[0m
[32m          an org client of a member org fails with 401[0m
[32m          the user itself succeeds[0m
[32m          the superuser succeeds[0m
          an org admin of a member org
[32m            fails with 403[0m
    PUT
      for a client
        behaves like PUT like a PATCH
[32m          when only name is present and is changed, responds with 201 and a Location header[0m
[32m          when only name is present and has not been changed[0m
[32m          should only update  public_key when that is the only provided field[0m
[32m          should only update expiration date when that is the only provided field[0m
        behaves like basic keys PUT validation
[32m          when all fields are modified it should update the key and send us back the updated body and header[0m
[32m          when 'create_key' is false alongside a public key it should not generate a private key[0m
[32m          when 'create_key' : true is specified in lieu of public key it should generate a new private key and reply with it and the public_key in the body[0m
[32m          when PUT body is empty it should fail with a 400[0m
[32m          when name is empty it responds with 400[0m
[32m          when name is invalid it responds with 400[0m
[32m          when date is empty it responds with 400[0m
[32m          when date is invalid it responds with 400[0m
[32m          when public key is empty it responds with 400[0m
[32m          when public key is invalid it responds with 400[0m
[32m          when a key of the same name already exists it responds with 409[0m
[32m          when both a public_key and create_key are present it responds with 400[0m
[32m          when both a public_key and create_key are present but create_key is false it responds with 200[0m
      for a user
        behaves like PUT like a PATCH
[32m          when only name is present and is changed, responds with 201 and a Location header[0m
[32m          when only name is present and has not been changed[0m
[32m          should only update  public_key when that is the only provided field[0m
[32m          should only update expiration date when that is the only provided field[0m
        behaves like basic keys PUT validation
[32m          when all fields are modified it should update the key and send us back the updated body and header[0m
[32m          when 'create_key' is false alongside a public key it should not generate a private key[0m
[32m          when 'create_key' : true is specified in lieu of public key it should generate a new private key and reply with it and the public_key in the body[0m
[32m          when PUT body is empty it should fail with a 400[0m
[32m          when name is empty it responds with 400[0m
[32m          when name is invalid it responds with 400[0m
[32m          when date is empty it responds with 400[0m
[32m          when date is invalid it responds with 400[0m
[32m          when public key is empty it responds with 400[0m
[32m          when public key is invalid it responds with 400[0m
[32m          when a key of the same name already exists it responds with 409[0m
[32m          when both a public_key and create_key are present it responds with 400[0m
[32m          when both a public_key and create_key are present but create_key is false it responds with 200[0m
    DELETE
      /organizations/:org/clients/:client/keys/:key
[32m        fails with 404[0m
[32m        and the key does not exist it fails with 404[0m
        as...
[32m          the client itself, authenticating with a different key should succeed[0m
[32m          the client itself, authenticating with the key it is trying to delete should fail with 403[0m
[32m          a user not affiliated with the org should fail with a 403[0m
[32m          the org admin should succeed[0m
          a client in the same org
[32m            should fail with a 403[0m
          a client in a different org
[32m            should fail with a 401[0m
          a user in the same org
[32m            should fail with a 403[0m
      user keys
        and the user does not exist
[32m          DELETE /users/bob/keys/default[0m
        and the key does not exist
[32m          DELETE /users/:user/keys/badkey fails with 404[0m
        DELETE /users/:user/keys/:name as...
[32m          the user itself, authenticating with a different key should succeed[0m
[32m          the user itself, authenticating with the key it is trying to delete should fail with 403[0m
[32m          a user not affiliated with the org should fail with a 403[0m
[32m          the org admin should fail with a 403[0m
          a client in the same org
[32m            should fail with a 401[0m
          a client in a different org
[32m            should fail with a 401[0m
          a user in the same org
[32m            should fail with a 403[0m
    PUT
      /organizations/:org/clients/:client/keys/:key
[32m        to a key for an invalid actor fails with 404[0m
[32m        to a key for a valid actor, but the key does not exist[0m
        as...
[32m          the client itself, authenticating with a different key should succeed[0m
[32m          the client itself, authenticating with the key it is trying update should fail with 403[0m
[32m          a user not affiliated with the org should fail with a 403[0m
[32m          the org admin should succeed[0m
          a client in the same org
[32m            should fail with a 403[0m
          a client in a different org
[32m            should fail with a 401[0m
          a user in the same org
[32m            should fail with a 403[0m
      /users/:user/keys/:key
[32m        and the user does not exist it fails with a 404[0m
[32m        and the key does not exist it fails with a 404[0m
        as...
[32m          the user itself, authenticating with a different key should succeed[0m
[32m          the user itself, authenticating with the key it is trying to delete should fail with 403[0m
[32m          a user not affiliated with the org should fail with a 403[0m
[32m          the org admin should fail with a 403[0m
          a client in the same org
[32m            should fail with a 401[0m
          a client in a different org
[32m            should fail with a 401[0m
          a user in the same org
[32m            should fail with a 403[0m
    listing key(s)
      when multiple keys are present
        for a client
          when GET /organizations/org/clients/client/keys is called (list keys)
[32m            all keys should be listed with correct expiry indicators[0m
            when GET is called on the URIs that are returned
[32m              should return status 200[0m
          when GET /organizations/org/clients/client/keys/key is called (get single key)
            when it is called for each valid key
[32m              should properly return the default key with valid expiration[0m
[32m              should properly return the first custom key with valid expiration[0m
[32m              should properly return the second custom key with valid expiration[0m
        for a user
          when GET /users/user/keys is called (list keys)
[32m            all keys should be listed with correct expiry indicators[0m
            when GET is called on the URIs that are returned
[32m              should return status 200[0m
          when GET /users/user/keys/key is called (get single key)
            when it is called for each valid key
[32m              should properly return the default key with valid expiration[0m
[32m              should properly return the first custom key with valid expiration[0m
[32m              should properly return the second custom key with valid expiration[0m
      of a user
        when GET /users/user/keys is called (list keys)
[32m          by an invalid user fails with a 401[0m
[32m          by a client in the same org fails with a 401[0m
[32m          who isn't valid by a user who is valid fails with a 404[0m
        when GET /users/user/keys/default is called
[32m          by an invalid user fails with a 401[0m
[32m          by a client in the same org fails with a 401[0m
[32m          who isn't valid by a user who is valid fails with a 404[0m
      by an org admin
        when GET /organizations/org/clients/client/keys is called
[32m          for a client that is a member of the same org succeeds with a 200[0m
[32m          for a client that is a member of a different org fails with a 403[0m
        when GET /users/user/keys is called
[32m          for a user that is a member of the same org succeeds with a 200[0m
[32m          for a user that is not a member of the same org fails with a 403[0m
        when GET /organizations/org/clients/client/keys/key is called
[32m          for a client that is a member of the same org succeeds with a 200[0m
[32m          for a client that is a member of a different org fails with a 403[0m
        when GET /users/user/keys/key is called
[32m          for a user that is a member of the same org succeeds with a 200[0m
[32m          for a user that is not a member of the same org fails with a 403[0m
      by an org client
        when GET /organizations/org/clients/client/keys is called
[32m          for a client that is a member of the same org fails with a 403[0m
[32m          for a itself succeeds with a 200[0m
[32m          for a client that is a member of a different org fails with a 401[0m
        when GET /users/user/keys is called
[32m          for a user that is a member of the same org fails with a 401[0m
[32m          for a user that is not a member of the same org fails with a 401[0m
        when GET /organizations/org/clients/client/keys/key is called
[32m          for a client that is a member of the same org fails with a 403[0m
[32m          for a itself succeeds with a 200[0m
[32m          for a client that is a member of a different org fails with a 401[0m
        when GET /users/user/keys/key is called
[32m          for a user that is a member of the same org fails with a 401[0m
[32m          for a user that is not a member of the same org fails with a 401[0m
      by an org member who is not an admin
        when GET /organizations/org/clients/client/keys is called
[32m          for a client that is a member of the same org succeeds with a 200[0m
[32m          for a client that is a member of a different org fails with a 403[0m
        when GET /users/user/keys is called
[32m          for a user that is a member of the same org fails with a 403[0m
[32m          for a user that is not a member of the same org fails with a 403[0m
        when GET /organizations/org/clients/client/key is called
[32m          for a client that is a member of the same org succeeds with a 200[0m
[32m          for a client that is a member of a different org fails with a 403[0m
        when GET /users/user/keys/key is called
[32m          for a user that is a member of the same org fails with a 403[0m
[32m          for a user that is not a member of the same org fails with a 403[0m
      by an unaffiliated user
        when GET /organizations/org/clients/client/keys is called
[32m          attempting to see an org client's keys fails with a 403[0m
        when GET /users/user/keys is called
[32m          attempting to see their own keys succeeds with a 200[0m
[32m          attempting to see someone else's keys fails with a 403[0m
        when GET /organizations/org/clients/client/keys/key is called
[32m          attempting to see an org client's key fails with a 403[0m
        when GET /users/user/keys/key is called
[32m          attempting to see their own keys succeeds with a 200[0m
[32m          attempting to see someone else's key fails with a 403[0m
Deleting organization pedant-keys-org-2-1431720902 ...
Deleting organization pedant-keys-org-1431719909 ...

knife
  cookbook
    download
      as an admin
[32m        should succeed[0m
      as a normal user
[32m        should succeed[0m

knife
  cookbook
    upload
      as an admin
[32m        should succeed[0m
      as a normal user
[32m        should succeed[0m
      as a normal client
[32m        should fail[0m

knife
  data bag
    create
      without existing data bag of the same name
        as an admin
[32m          should succeed[0m
      with an existing data bag of the same name
        as an admin
[32m          should fail[0m

knife
  data bag
    delete
      without existing data bag
        as an admin
[32m          should fail[0m
      with existing data bag
        as an admin
[32m          should succeed[0m

knife
  data bag
    from file
      as an admin
[32m        should succeed[0m

knife
  data bag
    show [ITEM]
      as an admin
[32m        should succeed[0m

knife
  data bag
    show [ITEM]
      with existing data bag
        as an admin
[32m          should succeed[0m
          without existing item name
[32m            should fail[0m
      without existing data bag
        as an admin
[32m          should fail[0m

knife
  node
    bulk delete REGEX
      as an admin
[32m        should succeed[0m

knife
  node
    create
      without existing node of the same name
        as an admin
[32m          should succeed[0m
      with an existing node of the same name
        as an admin
[33m          should fail (PENDING: CHEF-982: `knife node create` does not report name conflicts)[0m

knife
  node
    delete
      without existing node
        as an admin
[32m          should fail[0m
      with existing node
        as an admin
[32m          should succeed[0m

knife
  node
    from file NODE
      with existing node
        as an admin
[32m          should succeed[0m

knife
  node
    list
      as an admin
[32m        should succeed[0m

knife
  node
    run_list
      add NODE [ENTRIES,ENTRIES...]
        with existing node
          as an admin
[32m            should succeed[0m
        without existing node
          as an admin
[32m            should fail[0m
      remove NODE [ENTRIES,ENTRIES...]
        with existing node
          as an admin
[32m            should succeed[0m
        without existing node
          as an admin
[32m            should fail[0m

knife
  node
    show [NODE]
      with existing node
        as an admin
[32m          should succeed[0m
      without existing node
        as an admin
[32m          should fail[0m

knife
  role
    bulk delete REGEX
      as an admin
[32m        should succeed[0m

knife
  role
    create [ROLE]
      without existing role of the same name
        as an admin
[32m          should succeed[0m
      with an existing role of the same name
        as an admin
[33m          should fail (PENDING: CHEF-982: `knife role create` does not report name conflicts)[0m

knife
  role
    delete [ROLE]
      without existing role
        as an admin
[32m          should fail[0m
      with existing role
        as an admin
[32m          should succeed[0m

knife
  role
    from file ROLE
      with existing role
        as an admin
[32m          should succeed[0m

knife
  role
    list
      as an admin
[32m        should succeed[0m

knife
  role
    show [ROLE]
      with existing role
        as an admin
[32m          should succeed[0m
      without existing role
        as an admin
[32m          should fail[0m

license
  GET /license
    with no nodes
[31m      returns 200 and correct body for superuser (FAILED - 1)[0m
[31m      returns 200 and correct body for admin user (FAILED - 2)[0m
[31m      returns 200 and correct body for normal user (FAILED - 3)[0m
[32m      returns 401 for invalid user[0m
[32m      returns 401 for client[0m
    with nodes
      with one node
[31m        should return correct body for license status (FAILED - 4)[0m
      with 25 nodes (license not exceeded)
[31m        should return correct body for license status (FAILED - 5)[0m
      with  26 (license exceeded)
[31m        should return correct body for license status (FAILED - 6)[0m

Testing the Nodes API endpoint
  GET /nodes
    with no nodes on the server
[32m      returns a 200 with an empty hash[0m
    with 1 nodes on the server
[32m      should return a hash with 1 nodes[0m
    with 2 nodes on the server
[32m      should return a hash with 2 nodes[0m
    with 3 nodes on the server
[32m      should return a hash with 3 nodes[0m
    with 4 nodes on the server
[32m      should return a hash with 4 nodes[0m
    with 5 nodes on the server
[32m      should return a hash with 5 nodes[0m
    with 6 nodes on the server
[32m      should return a hash with 6 nodes[0m
    with 7 nodes on the server
[32m      should return a hash with 7 nodes[0m
  GET /nodes/<name>
    for a nonexistent node
[32m      returns a 404[0m
    for an existing node
[32m      returns a 200 and the node[0m
  GET /environments/<environment_name>/nodes
    with no nodes on the server
[32m      returns a 200 with an empty hash[0m
  POST /nodes
    when validating
      when validating 'name' field
        without the "name" attribute
[32m          should respond with 400 Bad Request[0m
        when passing valid value "pedant_node"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "PEDANT_NODE"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqurstuvwxyz0123456789-_:"
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "node@127.0.0.1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating 'chef_environment' field
        with the "chef_environment" attribute
[32m          should respond with 201 Created and persist the resource[0m
        without the "chef_environment" attribute
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "PEDANT"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqurstuvwxyz0123456789-_"
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "pedant:no_colon_in_environment_name"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "pedant@127.0.0.1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating 'json_class' field
        with the "json_class" attribute
[32m          should respond with 201 Created and persist the resource[0m
        without the "json_class" attribute
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "anything_else"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating 'chef_type' field
        with the "chef_type" attribute
[32m          should respond with 201 Created and persist the resource[0m
        without the "chef_type" attribute
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "anything_else"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating node attribute 'normal'
        with a value of {:with=>{"valid_key"=>"valid value"}, :default=>{}}
[32m          should respond with 201 Created and persist the resource[0m
        without the attribute
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"valid value"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>""}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>nil}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"これは日本語だ"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"Hello 日本!"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>1}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>[1, 2, 3]}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>["a", "b", "c"]}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{"a"=>1, "b"=>2}}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{1=>1, 2=>2}}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"正標"=>"valid value"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{""=>1}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "[]"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value ""
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating node attribute 'default'
        with a value of {:with=>{"valid_key"=>"valid value"}, :default=>{}}
[32m          should respond with 201 Created and persist the resource[0m
        without the attribute
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"valid value"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>""}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>nil}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"これは日本語だ"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"Hello 日本!"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>1}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>[1, 2, 3]}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>["a", "b", "c"]}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{"a"=>1, "b"=>2}}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{1=>1, 2=>2}}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"正標"=>"valid value"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{""=>1}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "[]"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value ""
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating node attribute 'override'
        with a value of {:with=>{"valid_key"=>"valid value"}, :default=>{}}
[32m          should respond with 201 Created and persist the resource[0m
        without the attribute
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"valid value"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>""}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>nil}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"これは日本語だ"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"Hello 日本!"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>1}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>[1, 2, 3]}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>["a", "b", "c"]}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{"a"=>1, "b"=>2}}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{1=>1, 2=>2}}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"正標"=>"valid value"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{""=>1}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "[]"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value ""
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating node attribute 'automatic'
        with a value of {:with=>{"valid_key"=>"valid value"}, :default=>{}}
[32m          should respond with 201 Created and persist the resource[0m
        without the attribute
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"valid value"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>""}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>nil}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"これは日本語だ"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"Hello 日本!"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>1}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>[1, 2, 3]}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>["a", "b", "c"]}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{"a"=>1, "b"=>2}}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{1=>1, 2=>2}}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{"正標"=>"valid value"}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "{:with=>{""=>1}}"
[32m          should respond with 201 Created and persist the resource[0m
        when passing invalid value "1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "[]"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value ""
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating 'run_list'
        with a value of ["chef"]
[32m          should respond with 201 Created and persist the resource[0m
        without the attribute
[32m          should respond with 201 Created and persist the resource[0m
        when passing valid value "["base", "recipe[base]", "role[base]"]"
[32m          should respond with 201 Created and persist the resource[0m
        with unqualified recipe names
          when passing valid value "["base", "nginx", "app"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["1", "2", "3"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["base@1.0"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["base@1.0.1"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["base@1.0.1", "nginx"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing invalid value "["gibberish@1"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["漢字", "ひらがな", "한문", "संस्कृतम्"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        with qualified recipe names
          when passing valid value "["recipe[base]"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["recipe[1]"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["recipe[base@1.0]"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["recipe[base@1.0.1]"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["recipe[base]", "recipe[base@1.0.1]"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing invalid value "["recipe[gibberish@1]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["recipe[漢字]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        with qualified role names
          when passing valid value "["role[base]"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "["role[1]"]"
[32m            should respond with 201 Created and persist the resource[0m
          when passing invalid value "["role[gibberish@1.0]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["role[漢字]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        with invalid run_list items
          when passing invalid value "[""]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["node[gibberish]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["[gibberish]\#@$%"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        when not an array of strings
          when passing invalid value "[1, 2, 3]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "[[]]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["string", []]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "{}"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "string"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "1"
[32m            should respond with 400 Bad Request and not persist the resource[0m
      with invalid top-level keys
        when passing invalid value of "something random" to "something_random" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "漢字ひらがな한문" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "4f76c56f6036300c1fd0dbdddea6fab3" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "9ef346137aa441f1436e94f48682e81c" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "413c44744d72a5901b5f3c765cf70e78" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
    without existing node name
[32m      should respond with 201 Created[0m
    with existing node name
[32m      should respond with 409 Conflict[0m
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m
  PUT /nodes/<name>
    without an existing node
[32m      should respond with 404 Not Found[0m
    with existing node
      when updating 'name' field
        with a value of pedant_node_test
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing invalid value "pedant_node"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "PEDANT_NODE"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqurstuvwxyz0123456789-_:"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "node@127.0.0.1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating 'chef_environment' field
        with a value of pedant
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "PEDANT"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqurstuvwxyz0123456789-_"
[32m          should respond with 200 OK and persist the resource[0m
        when passing invalid value "pedant:no_colon_in_environment_name"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "pedant@127.0.0.1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating 'json_class' field
        with a value of Chef::Node
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing invalid value "anything_else"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating 'chef_type' field
        with a value of node
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing invalid value "anything_else"
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating node attribute 'normal'
        with a value of {:with=>{"valid_key"=>"valid value"}, :default=>{}}
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"valid value"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>""}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>nil}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"これは日本語だ"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"Hello 日本!"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>1}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>[1, 2, 3]}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>["a", "b", "c"]}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{"a"=>1, "b"=>2}}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{1=>1, 2=>2}}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"正標"=>"valid value"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{""=>1}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing invalid value "1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "[]"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value ""
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating node attribute 'default'
        with a value of {:with=>{"valid_key"=>"valid value"}, :default=>{}}
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"valid value"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>""}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>nil}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"これは日本語だ"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"Hello 日本!"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>1}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>[1, 2, 3]}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>["a", "b", "c"]}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{"a"=>1, "b"=>2}}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{1=>1, 2=>2}}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"正標"=>"valid value"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{""=>1}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing invalid value "1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "[]"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value ""
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating node attribute 'override'
        with a value of {:with=>{"valid_key"=>"valid value"}, :default=>{}}
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"valid value"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>""}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>nil}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"これは日本語だ"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"Hello 日本!"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>1}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>[1, 2, 3]}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>["a", "b", "c"]}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{"a"=>1, "b"=>2}}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{1=>1, 2=>2}}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"正標"=>"valid value"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{""=>1}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing invalid value "1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "[]"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value ""
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating node attribute 'automatic'
        with a value of {:with=>{"valid_key"=>"valid value"}, :default=>{}}
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"valid value"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>""}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>nil}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"これは日本語だ"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>"Hello 日本!"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>1}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>[1, 2, 3]}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>["a", "b", "c"]}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{"a"=>1, "b"=>2}}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"valid_key"=>{1=>1, 2=>2}}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{"正標"=>"valid value"}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "{:with=>{""=>1}}"
[32m          should respond with 200 OK and persist the resource[0m
        when passing invalid value "1"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value "[]"
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value ""
[32m          should respond with 400 Bad Request and not persist the resource[0m
      when validating 'run_list'
        with a value of ["chef"]
[32m          should respond with 200 OK and persist the resource[0m
        without the attribute
[32m          should respond with 200 OK and persist the resource[0m
        when passing valid value "["base", "recipe[base]", "role[base]"]"
[32m          should respond with 200 OK and persist the resource[0m
        with unqualified recipe names
          when passing valid value "["base", "nginx", "app"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["1", "2", "3"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["base@1.0"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["base@1.0.1"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["base@1.0.1", "nginx"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing invalid value "["gibberish@1"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["漢字", "ひらがな", "한문", "संस्कृतम्"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        with qualified recipe names
          when passing valid value "["recipe[base]"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["recipe[1]"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["recipe[base@1.0]"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["recipe[base@1.0.1]"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["recipe[base]", "recipe[base@1.0.1]"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing invalid value "["recipe[gibberish@1]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["recipe[漢字]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        with qualified role names
          when passing valid value "["role[base]"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing valid value "["role[1]"]"
[32m            should respond with 200 OK and persist the resource[0m
          when passing invalid value "["role[gibberish@1.0]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["role[漢字]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        with invalid run_list items
          when passing invalid value "[""]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["node[gibberish]"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["[gibberish]\#@$%"]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        when not an array of strings
          when passing invalid value "[1, 2, 3]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "[[]]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "["string", []]"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "{}"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "string"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "1"
[32m            should respond with 400 Bad Request and not persist the resource[0m
      with invalid top-level keys
        when passing invalid value of "something random" to "something_random" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "漢字ひらがな한문" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "89abe88e48094a2db6a1580600d13ee3" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "9b27960d2c3789eda525f7486d6bbf85" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
        when passing invalid value of "something random" to "ebee9f3a4ef7e468dfd345489ba24a87" attribute
[32m          should respond with 400 Bad Request and not persist the resource[0m
      with a canonical payload
[32m        updates the node[0m
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m
  using DELETE
    to a node that already exists
[32m      succeeds[0m
    to a node that does not exist
[32m      fails[0m

Private Chef Nodes API endpoint
  updating a node
    attempting to change node name on update
[32m      returns a 400 ("Bad Request")[0m

/organizations
  GET /organizations
    when the user requests a list of organizations
[32m      should return a valid list of organizations[0m
  GET /organizations/:id
    when the user requests a valid organization
[32m      should return a valid organization object[0m
[32m      should return a organization object that contains a valid guid[0m
[33m      erlang will not return the assigned_at field (PENDING: No reason given)[0m
  POST /organizations
    when the user posts a new organization with a valid body and name
Deleting organization test-1431721262-723 ...
[32m      should respond with a valid newly created organization[0m
      but an organization of the same name already exists
Deleting organization test-1431721263-723 ...
[32m        it rejects the new org as conflicting[0m
    when the user attempts to create a new org with invalid data
Deleting organization test-1431721264-723 ...
Unexpected response when deleting org: 404: {"error":["organization 'test-1431721264-723' does not exist."]}
[32m      it should fail when 'name' is missing[0m
Deleting organization test-1431721264-723 ...
Unexpected response when deleting org: 404: {"error":["organization 'test-1431721264-723' does not exist."]}
[32m      it should fail when 'full_name' is missing[0m
Deleting organization test-1431721265-723 ...
Unexpected response when deleting org: 404: {"error":["organization 'test-1431721265-723' does not exist."]}
[32m      it should fail when 'name' is invalid[0m
  PUT /organizations/:id
    when the user updates the organization object
Deleting organization test-1431721265-723 ...
[32m      should fail to update the organization object if the name is changed[0m
    when the user updates the organization object update should fail when
Deleting organization test-1431721266-723 ...
Deleting organization test-1431721266-723 ...
Unexpected response when deleting org: 404: {"error":["organization 'test-1431721266-723' does not exist."]}
[32m      'name' is missing[0m
Deleting organization test-1431721267-723 ...
Deleting organization test-1431721267-723 ...
Unexpected response when deleting org: 404: {"error":["organization 'test-1431721267-723' does not exist."]}
[32m      'full_name' is missing[0m
Deleting organization test-1431721269-723 ...
Deleting organization test-1431721269-723 ...
Unexpected response when deleting org: 404: {"error":["organization 'test-1431721269-723' does not exist."]}
[32m      'name' is invalid[0m
    when the user updates fields in the organization with valid data
Deleting organization test-1431721270-723 ...
[32m      should update the organization object[0m
    when the user tries to PUT to the organization with a private_key
Deleting organization test-1431721271-723 ...
[32m      throws an error related to no longer supporting PUT for key updating[0m

Pedant Self-Diagnostic
  with shared() and let()
    before(:all)
[32m      should use parent shared_var[0m
[32m      should use parent let_var[0m
      within a child context
[32m        should use the child shared_var[0m
[32m        should use the child let_var[0m
  Integration Users
    with admin_user
[32m      should use parent let_var[0m
      within a child context
[32m        should use the child let_var[0m
    with normal_user
[32m      should use parent let_var[0m
      within a child context
[32m        should use the child let_var[0m
    with outside_user
[32m      should use parent let_var[0m
      within a child context
[32m        should use the child let_var[0m
    with superuser
[32m      should use parent let_var[0m
      within a child context
[32m        should use the child let_var[0m
  Matchers
    strictly_match
[32m      works with plain hashes[0m
[32m      works with regex keys[0m
[32m      works with arrays of scalars, treating them as sets[0m
[32m      works with regexp specs in array elements[0m
[32m      works with hash values[0m
[32m      should work with nested hashes of specs[0m
      works with hash values contained within an array
[32m        whether or not order matches[0m
[32m        should not match if a key within the nested hash is missing from the target[0m
[32m        should not match if the target contains more values then expected[0m
[32m        should match if the spec contains a value that matches on regex and it is present in the target[0m
[32m        should not match if the spec contains a value that matches on regex and it is not present in the target[0m
[32m        should match a nested array that matches[0m
[32m        should not match a nested array with too many values that otherwise matches[0m
[32m        should not match a nested array with too few values[0m
[32m        should not match a nested array that doesn't match[0m
    loosely_match
[32m      works with plain hashes[0m
[32m      works with regex keys[0m
[32m      works with arrays of scalars, treating them as sets[0m
[32m      works with hash values[0m
[32m      should work with nested hashes of specs[0m
      works with hashes nested within an array
[32m        whether or not order matches[0m
[32m        should not match if a key within the nested hash is missing from the target[0m
[32m        should match if the target contains more values then expected[0m
[32m        should match if the spec contains a value that matches on regex and it is present in the target[0m
[32m        should not match if the spec contains a value that matches on regex and it is not present in the target[0m
[32m        should match a nested array that matches[0m
[32m        should match a nested array with too many values that otherwise matches because arrays are still exact matches[0m
[32m        should not match a nested array with too few values[0m
[32m        should not match a nested array that doesn't match[0m

Policies API endpoint
  when no policies exist on the server
    GET
[32m      GET /policies/:group/:name returns 404[0m
    DELETE
[32m      DELETE /policies/:group/:name returns 404[0m
    PUT
      with a canonical payload
[32m        PUT /policies/:group/:name returns 201[0m
      with a minimal payload
[32m        PUT /policies/:group/:name returns 201[0m
      with a payload demonstrating validation edge conditions for 'name'
        when the name contains every valid character
[32m          PUT /policies/:group/:name returns 201[0m
        when the name is close to the maximum size
[32m          PUT /policies/:group/:name returns 201[0m
        when a revision_id is the maximum size
[32m          PUT /policies/:group/:name returns 201[0m
        when a revision_id contains every valid character
[32m          PUT /policies/:group/:name returns 201[0m
        when a cookbook identifier is the maximum size
[32m          PUT /policies/:group/:name returns 201[0m
        when a cookbook identifier contains every valid character
[32m          PUT /policies/:group/:name returns 201[0m
      when the request body is invalid
        because of missing revision id field
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because revision id field is an empty string
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because revision id field is larger than 255 characters
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the revision_id contains invalid character
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the revision_id contains invalid character +
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the revision_id contains invalid character !
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because of missing name field
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because of an mismatched name field
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the name is larger than 255 characters
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the name contains invalid character ' '
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the name contains invalid character '+'
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the name contains invalid character '!'
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because of missing run_list field
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because run_list field is the wrong type
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the run_list has invalid item '123'
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the run_list has invalid item 'recipe['
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the run_list has invalid item 'role[foo]'
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because the run_list has invalid item 'recipe[foo]'
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because cookbook_locks field is missing
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because cookbook_locks field is the wrong type
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because cookbook_locks contains an entry of the wrong type
[32m          PUT /policies/:group/:name returns 400[0m
        because cookbook_locks contains an entry that is missing the identifier field
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because cookbook_locks contains an entry with an identifier larger than 255 characters
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
        because cookbook_locks contains an entry with an invalid dotted_decimal_identifier field
[32m          PUT /policies/:group/:name returns 400[0m
[32m          PUT /policies/:group/:name body contains a well-formed error message[0m
  when a policy exists on the server
    GET
[32m      retrieves the policy document[0m
    PUT (update policy document)
[32m      PUT /policies/:group/:name returns 200[0m
[32m      GET /policies/:group/:name subsequently returns the updated document[0m
    DELETE
[32m      DELETE /policies/:group/:name returns the deleted document[0m
[32m      DELETE /policies/:group/:name removes the policy from the data store[0m

Principals API Endpoint
  access control
    with bogus org
[32m      returns a 404 ("Not Found") for admin[0m
[32m      returns a 404 ("Not Found") for normal user[0m
    GET /principals
[32m      returns a 404 ("Not Found") for admin[0m
[32m      returns a 404 ("Not Found") for normal user[0m
[32m      returns a 404 ("Not Found") for invalid user[0m
[32m      returns a 404 ("Not Found") for outside user[0m
    [deprecated] v0
[32m      returns a 404 ("Not Found") for missing principal for admin[0m
[32m      returns a 404 ("Not Found") for missing principal for normal user[0m
      when requesting a client
[32m        returns a 200 ("OK") for admin[0m
[32m        returns a 200 ("OK") for normal user[0m
[32m        returns a 200 ("OK") for invalid user[0m
[32m        returns a 200 ("OK") for outside user[0m
      when requesting a user
[32m        returns a 200 ("OK") for admin[0m
[32m        returns a 200 ("OK") for normal user[0m
[32m        returns a 200 ("OK") for invalid user[0m
[32m        returns a 200 ("OK") for outside user[0m
      when requesting an outside user
[32m        returns a 200 ("OK") for admin[0m
[32m        returns a 200 ("OK") for normal user[0m
[32m        returns a 200 ("OK") for invalid user[0m
[32m        returns a 200 ("OK") for outside user[0m
      when requesting a bad client
[32m        returns a 404 ("Not Found") for admin[0m
[32m        returns a 404 ("Not Found") for normal user[0m
[32m        returns a 404 ("Not Found") for invalid user[0m
[32m        returns a 404 ("Not Found") for outside user[0m
    [current] v > 0
[32m      returns a 404 ("Not Found") for missing principal for admin[0m
[32m      returns a 404 ("Not Found") for missing principal for normal user[0m
      when requesting a client
[32m        returns a 200 ("OK") for admin[0m
[32m        returns a 200 ("OK") for normal user[0m
[32m        returns a 200 ("OK") for invalid user[0m
[32m        returns a 200 ("OK") for outside user[0m
      when requesting a user
[32m        returns a 200 ("OK") for admin[0m
[32m        returns a 200 ("OK") for normal user[0m
[32m        returns a 200 ("OK") for invalid user[0m
[32m        returns a 200 ("OK") for outside user[0m
      when requesting an outside user
[32m        returns a 200 ("OK") for admin[0m
[32m        returns a 200 ("OK") for normal user[0m
[32m        returns a 200 ("OK") for invalid user[0m
[32m        returns a 200 ("OK") for outside user[0m
      when requesting a bad client
[32m        returns a 404 ("Not Found") for admin[0m
[32m        returns a 404 ("Not Found") for normal user[0m
[32m        returns a 404 ("Not Found") for invalid user[0m
[32m        returns a 404 ("Not Found") for outside user[0m

Server-side reindexing
  reindexing OPC
    it should behave like Reindexing
[31m      works for all object types (FAILED - 7)[0m

Testing the Roles API endpoint
  making a request to /roles
    using GET
      with no roles
[32m        returns a 200 and an empty hash[0m
      with roles
[32m        returns a 200 and a hash of name -> url[0m
    using POST
      for a role that does not exist
[32m        should respond with 201 and the correct path[0m
[32m        should persist the role[0m
      when validating
        the 'name' field
          when passing valid value "pedant_role"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "PEDANT_ROLE"
[32m            should respond with 201 Created and persist the resource[0m
          when passing valid value "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqurstuvwxyz0123456789-_:"
[32m            should respond with 201 Created and persist the resource[0m
          when passing invalid value "this+ is bad!!!"
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value "I-do-not-like!!!"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        the 'json_class' field
          when passing valid value "Chef::Role"
[32m            should respond with 201 Created and persist the resource[0m
          when passing invalid value "Chef::NotReallyAClass"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        the 'chef_type' field
          when passing valid value "role"
[32m            should respond with 201 Created and persist the resource[0m
          when passing invalid value "node"
[32m            should respond with 400 Bad Request and not persist the resource[0m
        with invalid top-level keys
          when passing invalid value of "something random" to "something_random" attribute
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value of "something random" to "漢字ひらがな한문" attribute
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value of "something random" to "b00d0876f3500adb36b9a91678beaf78" attribute
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value of "something random" to "5db2afa7b40cccc18abba1239ea06a17" attribute
[32m            should respond with 400 Bad Request and not persist the resource[0m
          when passing invalid value of "something random" to "4b4d54b20d8b737b2aa40b9dd16d9fd9" attribute
[32m            should respond with 400 Bad Request and not persist the resource[0m
      with various valid inputs
        when missing 'default_attributes' value
[32m          should create role and set '{}' as 'default_attributes' value[0m
        when missing 'override_attributes' value
[32m          should create role and set '{}' as 'override_attributes' value[0m
        when missing 'run_list' value
[32m          should create role and set '[]' as 'run_list' value[0m
        when missing 'env_run_lists' value
[32m          should create role and set '{}' as 'env_run_lists' value[0m
        with a non-normalized run list
[32m          should respond with 201 and the correct path[0m
[32m          should persist the role with a normalized run list[0m
        with a runlist that has recipes named 'recipe' and 'role'
[32m          should respond with 201 and the correct path[0m
[32m          should persist the role with all oddly-named recipes intact in the run list[0m
        with a runlist that has duplicate recipes and roles
[32m          should respond with 201 and the correct path[0m
[32m          should persist the role with all run list duplicates removed[0m
        with a runlist that has implicit and explict 'default' recipes
[32m          should respond with 201 and the correct path[0m
[32m          should persist the role with both versions remaining in the run list[0m
        with non-normalized environment run lists
[32m          should respond with 201 and the correct path[0m
[32m          should persist the role with normalized environment run lists[0m
        with environment run lists that have duplicates
[32m          should respond with 201 and the correct path[0m
[32m          should persist the role with duplicates removed[0m
        with environment run lists that have implicit and explicit 'default' recipes
[32m          should respond with 201 and the correct path[0m
[32m          should persist the role with both versions remaining in the lists[0m
        with environment run lists that have recipes named 'recipe' and 'role'
[32m          should respond with 201 and the correct path[0m
[32m          should persist the role with all oddly-named recipes intact in the run lists[0m
      with various invalid inputs
        with a non-hash value for 'default_attributes'
[32m          fails to create the role[0m
        with a non-hash value for 'override_attributes'
[32m          fails to create the role[0m
        with a non-valid run list value for 'run_list'
[32m          fails to create the role[0m
        with a non-valid run list value for 'run_list'
[32m          fails to create the role[0m
        with invalid env_run_lists hashes
          with a non-hash value for 'env_run_lists'
[32m            should respnd with an error[0m
          without proper run lists in the 'env_run_lists hash'
[32m            should respond with an error[0m
        with a payload size
          exactly equal to the maximum allowable size
[32m            should not respond with 413 Request Entity Too Large[0m
          exceeding the maximum allowable size
[32m            should respond with 413 Request Entity Too Large[0m
      for a role that already exists
[32m        fails[0m
  making a request to /roles/<role>
    using GET
      to a nonexistent role
[32m        fails with a 404[0m
      to a role that exists
[32m        succeeds[0m
    using PUT
      to a nonexistent role
[32m        should respond with a 404[0m
      to a role that exists
        with canonical payload
[32m          should respond with 200 and the updated role body[0m
[32m          should actually update the role[0m
        with role name changed in the payload
[32m          should respond with 400 Bad Request and an error message of 'Role name mismatch.'[0m
[32m          does not change the role in any way[0m
        without role name in payload
[32m          should respond with 200 and the updated role body[0m
[32m          should actually update the role[0m
        with no name, but other invalid information in payload
[32m          should respond with 400 Bad Request and an error message of 'Field 'json_class' invalid'[0m
[32m          does not change the role in any way[0m
        with a payload size
          exactly equal to the maximum allowable size
[32m            should not respond with 413 Request Entity Too Large[0m
          exceeding the maximum allowable size
[32m            should respond with 413 Request Entity Too Large[0m
    using DELETE
      to a nonexistent role
[32m        fails with a 404[0m
      to an existing role
[32m        should respond with 201 and the deleted role body[0m
[32m        should actually delete the role[0m
  making a request to /roles/<role>/environments
    GET
      for a nonexistent role
[32m        fails[0m
      for a role with no environment run lists
[32m        should return just the default environment[0m
      for a role with one additional environment run list
[32m        should return the default environment and the additional environment[0m
      for a role with multiple additional environment run lists
[32m        returns multiple environments, even if some do not exist[0m
  making a request to /roles/<role>/environments/<environment>
    using GET
      with the default environment
        to a nonexistent role
[32m          responds with a 404 for the role[0m
        with an already existing role
[32m          responds with 200 and the role's run list[0m
      with a non-default environment
        for a role with a run list in that environment
[32m          responds with 200 and the role's run list[0m
        for a role with no run list in that environment
[32m          responds with 200 and a null run list[0m
      with a non-existent environment
[32m        responds with a 404 for the environment[0m

Sandboxes API Endpoint
  Sandboxes Endpoint, POST
    when creating a new sandbox
[32m      should respond with 201 Created[0m
    when creating an invalid sandbox
      with an empty request hash
[32m        should fail[0m
      with an empty checksums hash
[32m        should fail[0m
      with non-null hash values
[32m        should fail[0m
    with existing file
[Sleeping to allow S3 to work ... ]
[32m      should recognize files that are already on the server[0m
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m
  Sandboxes Endpoint, PUT
[32m    'is_committed' should be true for a committed sandbox[0m
    when committing an incomplete sandbox
[32m      should respond with 503 Service Unavailable[0m
    when uploading expected files to the sandbox
[32m      should respond with 200 OK or 204 No Content[0m
    when committing a sandbox after uploading files
[32m      should respond with 200 OK[0m
    with a payload size
      exactly equal to the maximum allowable size
[32m        should not respond with 413 Request Entity Too Large[0m
      exceeding the maximum allowable size
[32m        should respond with 413 Request Entity Too Large[0m

Search API endpoint
  /search
    GET
      with no data bags
[32m        should return a list of built-in indexes[0m
      with data bags
[32m        should return a list of built-in indexes, as well as indexes for each data bag[0m
  /search/environment
    GET
[33m      should return filtered results when ACL on environments exist (PENDING: No reason given)[0m
      a search that should return no results
[32m        should have multiple environments on the system (for our search to ignore)[0m
[32m        returns 200, with no search results[0m
      when searching for a single environment by name
[32m        should have more than just the target of our environment search on the system[0m
[32m        should return status code 200 and a single environment[0m
      when searching for multiple environments names using a * wildcard
[32m        should have more than just the targets of our environment search on the system[0m
[32m        should return all testing environments[0m
    POST
[33m      should return filtered results when ACLs exist (PENDING: No reason given)[0m
      invalid partial search requests
        with a request body of 'z[$blah'
[32m          fails[0m
        with a request body of '{"a_string"=>"blah"}'
[32m          fails[0m
        with a request body of '{"a_number"=>1}'
[32m          fails[0m
        with a request body of '{"a_true"=>true}'
[32m          fails[0m
        with a request body of '{"an_object"=>{"oop"=>true}}'
[32m          fails[0m
        with a request body of '{"an_array"=>[1, 2]}'
[32m          fails[0m
        with a request body of '{"an_array"=>["a", 2]}'
[32m          fails[0m
      targeted toward no environments with body of {"possibly_nested"=>["default_attributes", "top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, but return nothing[0m
      targeted toward one environment with body of {"possibly_nested"=>["default_attributes", "top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return the single environment[0m
      targeted toward many environments with body of {"possibly_nested"=>["default_attributes", "top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return multiple environments[0m
      targeted toward no environments with body of {"possibly_nested"=>["description"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, but return nothing[0m
      targeted toward one environment with body of {"possibly_nested"=>["description"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return the single environment[0m
      targeted toward many environments with body of {"possibly_nested"=>["description"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return multiple environments[0m
  /search/node
    GET
[33m      should return filtered results when ACL on nodes exist (PENDING: No reason given)[0m
      a search that should return no results
[32m        should have multiple nodes on the system (for our search to ignore)[0m
[32m        returns 200, with no search results[0m
      when searching for a single node by name
[32m        should have more than just the target of our node search on the system[0m
[32m        should return status code 200 and a single node[0m
      when searching for multiple nodes names using a * wildcard
[32m        should have more than just the targets of our node search on the system[0m
[32m        should return all testing nodes[0m
    POST
[33m      should return filtered results when ACLs exist (PENDING: No reason given)[0m
      invalid partial search requests
        with a request body of 'z[$blah'
[32m          fails[0m
        with a request body of '{"a_string"=>"blah"}'
[32m          fails[0m
        with a request body of '{"a_number"=>1}'
[32m          fails[0m
        with a request body of '{"a_true"=>true}'
[32m          fails[0m
        with a request body of '{"an_object"=>{"oop"=>true}}'
[32m          fails[0m
        with a request body of '{"an_array"=>[1, 2]}'
[32m          fails[0m
        with a request body of '{"an_array"=>["a", 2]}'
[32m          fails[0m
      targeted toward no nodes with body of {"possibly_nested"=>["top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, but return nothing[0m
      targeted toward one node with body of {"possibly_nested"=>["top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return the single node[0m
      targeted toward many nodes with body of {"possibly_nested"=>["top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return multiple nodes[0m
      searching a node with [:default] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"default"}, showing default attributes are merged directly to the node[0m
      searching a node with [:normal] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"normal"}, showing normal attributes are merged directly to the node[0m
      searching a node with [:override] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"override"}, showing override attributes are merged directly to the node[0m
      searching a node with [:automatic] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"automatic"}, showing automatic attributes are merged directly to the node[0m
      searching a node with [:default, :normal] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"default", "two"=>"normal", "three"=>"normal", "four"=>"normal"}, showing 'default' < 'normal' attributes[0m
      searching a node with [:default, :override] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"default", "two"=>"default", "three"=>"override", "four"=>"override"}, showing 'default' < 'override' attributes[0m
      searching a node with [:default, :automatic] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"default", "two"=>"default", "three"=>"default", "four"=>"automatic"}, showing 'default' < 'automatic' attributes[0m
      searching a node with [:normal, :override] attributes, with a partial search path of ["testing"]
[32m        should return {"two"=>"normal", "three"=>"override", "four"=>"override"}, showing 'normal' <  'override' attributes[0m
      searching a node with [:normal, :automatic] attributes, with a partial search path of ["testing"]
[32m        should return {"two"=>"normal", "three"=>"normal", "four"=>"automatic"}, showing 'normal' < 'automatic' attributes[0m
      searching a node with [:override, :automatic] attributes, with a partial search path of ["testing"]
[32m        should return {"three"=>"override", "four"=>"automatic"}, showing 'override' <  'automatic' attributes[0m
      searching a node with [:default, :normal, :override] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"default", "two"=>"normal", "three"=>"override", "four"=>"override"}, showing 'default' < 'normal' < 'override' attributes[0m
      searching a node with [:default, :normal, :automatic] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"default", "two"=>"normal", "three"=>"normal", "four"=>"automatic"}, showing 'default' < 'normal' < 'automatic' attributes[0m
      searching a node with [:default, :override, :automatic] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"default", "two"=>"default", "three"=>"override", "four"=>"automatic"}, showing 'default' < 'override' < 'automatic' attributes[0m
      searching a node with [:normal, :override, :automatic] attributes, with a partial search path of ["testing"]
[32m        should return {"two"=>"normal", "three"=>"override", "four"=>"automatic"}, showing 'normal' < 'override' < 'automatic' attributes[0m
      searching a node with [:default, :normal, :override, :automatic] attributes, with a partial search path of ["testing"]
[32m        should return {"one"=>"default", "two"=>"normal", "three"=>"override", "four"=>"automatic"}, showing 'default' < 'normal' < 'override' < 'automatic' attributes[0m
  /search/role
    GET
[33m      should return filtered results when ACL on roles exist (PENDING: No reason given)[0m
      a search that should return no results
[32m        should have multiple roles on the system (for our search to ignore)[0m
[32m        returns 200, with no search results[0m
      when searching for a single role by name
[32m        should have more than just the target of our role search on the system[0m
[32m        should return status code 200 and a single role[0m
      when searching for multiple roles names using a * wildcard
[32m        should have more than just the targets of our role search on the system[0m
[32m        should return all testing roles[0m
    POST
[33m      should return filtered results when ACLs exist (PENDING: No reason given)[0m
      invalid partial search requests
        with a request body of 'z[$blah'
[32m          fails[0m
        with a request body of '{"a_string"=>"blah"}'
[32m          fails[0m
        with a request body of '{"a_number"=>1}'
[32m          fails[0m
        with a request body of '{"a_true"=>true}'
[32m          fails[0m
        with a request body of '{"an_object"=>{"oop"=>true}}'
[32m          fails[0m
        with a request body of '{"an_array"=>[1, 2]}'
[32m          fails[0m
        with a request body of '{"an_array"=>["a", 2]}'
[32m          fails[0m
      targeted toward no roles with body of {"possibly_nested"=>["override_attributes", "top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, but return nothing[0m
      targeted toward one role with body of {"possibly_nested"=>["override_attributes", "top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return the single role[0m
      targeted toward many roles with body of {"possibly_nested"=>["override_attributes", "top", "middle", "bottom"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return multiple roles[0m
  /search/client
    GET
      with no criteria
[32m        returns all the clients[0m
      searching by name
[32m        returns the correct client[0m
      a search that should return no results
[32m        should have multiple clients on the system (for our search to ignore)[0m
[32m        returns 200, with no search results[0m
    POST
      targeted toward no clients with body of {"possibly_nested"=>["validator"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, but return nothing[0m
      targeted toward one client with body of {"possibly_nested"=>["validator"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return the single client[0m
      targeted toward many clients with body of {"possibly_nested"=>["validator"], "the_name"=>["name"], "not_found"=>["foo", "bar", "baz", "totally_not_a_real_field"], "empty"=>[]}
[32m        should succeed, and return multiple clients[0m
      invalid partial search requests
        with a request body of 'z[$blah'
[32m          fails[0m
        with a request body of '{"a_string"=>"blah"}'
[32m          fails[0m
        with a request body of '{"a_number"=>1}'
[32m          fails[0m
        with a request body of '{"a_true"=>true}'
[32m          fails[0m
        with a request body of '{"an_object"=>{"oop"=>true}}'
[32m          fails[0m
        with a request body of '{"an_array"=>[1, 2]}'
[32m          fails[0m
        with a request body of '{"an_array"=>["a", 2]}'
[32m          fails[0m
  /search/<data_bag>
    using GET
      for a nonexistent data bag
[32m        should fail[0m
      an existing data bag
[33m        should return no results to an unauthorized user (PENDING: No reason given)[0m
        a query that should succeed
[32m          should succeed[0m
        with nested keys (CHEF-3975)
          when searching a nested key
[32m            should succeed[0m
          when searching a nested key prefixed by raw_data_
[32m            should return no results[0m
    using POST
      for a nonexistent data bag
[33m        does something (PENDING: Not yet implemented)[0m
      for an existing data bag
        a partial search
[32m          should succeed[0m
        with nested keys (CHEF-3975)
          when searching a nested key
[32m            should succeed[0m
          when searching a nested key prefixed by raw_data_
[32m            should return no results[0m
        invalid partial search requests
          with a request body of 'z[$blah'
[32m            fails[0m
          with a request body of '{"a_string"=>"blah"}'
[32m            fails[0m
          with a request body of '{"a_number"=>1}'
[32m            fails[0m
          with a request body of '{"a_true"=>true}'
[32m            fails[0m
          with a request body of '{"an_object"=>{"oop"=>true}}'
[32m            fails[0m
          with a request body of '{"an_array"=>[1, 2]}'
[32m            fails[0m
          with a request body of '{"an_array"=>["a", 2]}'
[32m            fails[0m
    Search tokenizer
      When the Chef server has data bag items with "foo" and "foo-bar"
[32m        A search for foo-bar returns foo-bar and nothing else[0m
[32m        A search for foo* AND NOT bar returns foo and foo-bar[0m
  Index Deletion
    Roles
      it should behave like Deletes from Solr Index
[32m        deletes an object from Solr when deleting from the system as a whole[0m
    Nodes
      it should behave like Deletes from Solr Index
[32m        deletes an object from Solr when deleting from the system as a whole[0m
    Data Bag Items
      it should behave like Deletes from Solr Index
[32m        deletes an object from Solr when deleting from the system as a whole[0m
  partial search
    roles
      many results (roles)
[32m        should have 10 results[0m
      nodes
[32m        returns partial results from default attributes of a node[0m
[32m        returns partial results from normal attributes of a node[0m
[32m        returns partial results from deep merged node attributes[0m

Server API Versioning
[32m  GET /server_api_version should respond with valid current server api version data[0m
  version validation should occur before most other validation
[32m    invalid method should fail for version, not method[0m
[32m    invalid content should fail for version, not content[0m
  any request should validate requested server api version
[32m    and it should reply with the error message as specified in the RFC[0m
[32m    and rejects when version is not a number[0m
[32m    and rejects when version is higher than what's supported[0m
[32m    and rejects when version is lower than what's supported[0m
[32m    and accepts when version is exactly the minimum of what's supported[0m
[32m    and accepts when version is exactly the maximum of what's supported[0m
[32m    and accepts when it's in valid range of what's supported[0m
[32m    and accept it when it's not specified[0m

system_recovery
  POST /system_recovery
    when a user has recovery_authentication_enabled == true is requested
      when the superuser is the requestor
[32m        should return the user body[0m
      when the password passed is incorrect
[32m        should return 401 with an error message[0m
      when a non-superuser is the requestor
[32m        should return 403 with an error explaining non-superuser is not authorized[0m
    when a user has recovery_authentication_enabled != true is requested by the superuser
[32m      should return 403 with a relevant error message[0m
    when a user that does not exist is requested by the superuser
[32m      should return 404 with an error message[0m
    when the request is missing the username field
[32m      should return 400 with an error message[0m
    when the request is missing the password field
[32m      should return 400 with an error message[0m

users
  /users endpoint
    GET /users
      superuser
[32m        can get all users[0m
[32m        returns no users when filtering by non-existing email[0m
[32m        returns a single user when filtering by that user's email address[0m
[32m        returns a verbose list of users upon request[0m
      admin user
[32m        returns 403[0m
      default normal user
[32m        returns 403[0m
      default client
[32m        returns 401[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
    PUT /users
      admin user
[32m        returns  404[ruby]/405[erlang][0m
    POST /users
      superuser
[32m        can create new user[0m
      admin user
[32m        returns 403[0m
      creating users
        without password
[32m          returns 400[0m
        with external auth enabled
[32m          returns 201 when password is not provided[0m
[32m          returns 201 when password is provided[0m
        without display_name
[32m          returns 400[0m
        without first and last name
[32m          can create new user[0m
        without email
[32m          returns 400[0m
        without email but with external auth enabled
[32m          returns 201[0m
        without username
[32m          returns 400[0m
        with invalid email
[32m          returns 400[0m
        with spaces in names
[32m          can create new user[0m
        with bogus field
[32m          can create new user[0m
        with space in display_name
[32m          can create new user[0m
        with UTF-8 in display_name
[32m          can create new user[0m
        with UTF-8 in first/last name
[32m          can create new user[0m
        with capitalized username
[32m          returns 400[0m
        with space in username
[32m          returns 400[0m
        when user already exists
[32m          returns 409[0m
    DELETE /users
      admin user
[32m        returns  404[ruby]/405[erlang][0m
  /users/<name> endpoint
    GET /users/<name>
      superuser
[32m        can get user[0m
      admin user
[32m        can get user[0m
      default normal user
[32m        can get self[0m
      default client
[32m        returns 401[0m
      outside user
[32m        returns 403[0m
      invalid user
[32m        returns 401[0m
      when user doesn't exist
[32m        returns 404[0m
    PUT /users/<name>
      superuser
[32m        can modify user[0m
[32m        can enable recovery[0m
[32m        can set external id[0m
        authenticating after updates
          when password is unchanged
[32m            can authenticate as the modified user when password has not been changed.[0m
          when password is updated
[32m            can authenticate as the modified user when password has been changed[0m
[32m            fails to authenticate as the modified user using the old password[0m
      admin user
[32m        returns 403[0m
[32m        cannot enable recovery[0m
[32m        cannot set external id[0m
      owning user
[32m        can modify its own account[0m
[32m        cannot enable recovery[0m
[32m        cannot set external id[0m
      default client
[32m        returns 401[0m
      when modifying non-existent user
[32m        returns 404[0m
      modifying users
        without password
[32m          can modify user[0m
        with bogus field
[32m          can modify user[0m
        without display_name
[32m          returns 400[0m
        without first and last name
[32m          can modify user[0m
        without email
[32m          returns 400[0m
        without email but with external auth enabled
[32m          returns 200[0m
        without username
[32m          returns 400[0m
        with invalid email
[32m          returns 400[0m
        with spaces in names
[32m          can modify user[0m
        with space in display_name
[32m          can modify user[0m
        with UTF-8 in display_name
[32m          can modify user[0m
        with UTF-8 in first/last name
[32m          can modify user[0m
        with new password provided
[32m          changes the password[0m
        with public key provided
[32m          accepts the public key and subsequently responds with it[0m
        when a new private key is requested
[32m          can be used to successfully authenticate request[0m
        with private_key = true
[32m          returns a new private key, changes the public key[0m
        and a public_key is present
[32m          returns a new private key, changes the public key[0m
        and public key is present containing a certificate
[32m          returns a new private key, ignores the certificate[0m
        with a certificate in the public_key field
[32m          returns 400[0m
      renaming users
        changing username
          and the username is valid
[32m            updates the user to the new name and provides a new uri[0m
        changing username with UTF-8
[32m          returns 400[0m
        changing username with spaces
[32m          returns 400[0m
        changing username with capital letters
[32m          returns 400[0m
        new name already exists
[32m          returns 409[0m
    POST /users/<name>
      admin user
[32m        returns  404[ruby]/405[erlang][0m
    DELETE /users/<name>
      superuser
[32m        can delete user[0m
      admin user
[32m        returns 403[0m
      default client
[32m        returns 401[0m
      when deleting a non-existent user
[32m        returns 404[0m

Server API v1 Behaviors
  [v1+]
Creating org pedant_api-v1-org_1431719907-245841636-723
[33m    search results should not include client key data (PENDING: No reason given)[0m
    org creation
Deleting organization pedant_apiv1-org-create-test_1431719907-245841636-723 ...
[32m      should have created a validator client with a default key, and provided the client key back to us[0m
    users
      POST /users
        it should behave like actor creation validation
[32m          should allow create_key: true and give a proper valid key in response[0m
[32m          should allow allow public_key to be provided and respond with its location[0m
[32m          should reply with an error if both create_key:true and public_key are specified[0m
[32m          should accept the public key if both create_key:false and public_key are specified[0m
[32m          should reply with an error if private_key:true is specified for key generation[0m
[32m          when neither create_key nor public_key is specified, the operation should succeed and no default key is created[0m
      PUT /users/:name
        it should behave like actor update validation
[32m          should allow an update that doesn't include public_key or create_key[0m
[32m          should not allow create_key:true[0m
[32m          should not allow public_key to be provided[0m
[32m          should not allow private_key:true to be specified[0m
      GET /users/:name
        behaves like actor read validation
[32m          should not include public_key[0m
      GET /organization/:org/users/:name
        behaves like actor read validation
[32m          should not include public_key[0m
    clients
      POST /organizations/:org/clients
        it should behave like actor creation validation
[32m          should allow create_key: true and give a proper valid key in response[0m
[32m          should allow allow public_key to be provided and respond with its location[0m
[32m          should reply with an error if both create_key:true and public_key are specified[0m
[32m          should accept the public key if both create_key:false and public_key are specified[0m
[32m          should reply with an error if private_key:true is specified for key generation[0m
[32m          when neither create_key nor public_key is specified, the operation should succeed and no default key is created[0m
      PUT /organization/:org/clients/:name
        it should behave like actor update validation
[32m          should allow an update that doesn't include public_key or create_key[0m
[32m          should not allow create_key:true[0m
[32m          should not allow public_key to be provided[0m
[32m          should not allow private_key:true to be specified[0m
      GET /organization/:org/clients/:name
        behaves like actor read validation
[32m          should not include public_key[0m
Deleting organization pedant_api-v1-org_1431719907-245841636-723 ...
Deleting organization pedant_testorg_api_723 ...

Pending:
[33m  ACL API /users/<name>/_acl endpoint[0m
[36m    # No reason given[0m
[36m    # ./spec/api/account/account_acl_spec.rb:29[0m
[33m  opscode-account user association user not in org can be invited to the org by an admin when the inviting admin is removed from the org, invites issued by that admin cannot be accepted[0m
[36m    # Known failure: passes w/ 200 b/c no USAG cleanup performed for deleted user[0m
[36m    # ./spec/api/account/account_association_spec.rb:652[0m
[33m  opscode-account user association user not in org can be invited to the org by an admin when the inviting admin is removed from the system, invites issued by that admin can't by accepted[0m
[36m    # Known failure: passes w/ 200 b/c no USAG or other group cleanup performed for deleted user[0m
[36m    # ./spec/api/account/account_association_spec.rb:661[0m
[33m  opscode-account containers /containers endpoint POST /containers container creation with unicode in container name can create container[0m
[36m    # returns 400[0m
[36m    # ./spec/api/account/account_container_spec.rb:387[0m
[33m  opscode-account groups /groups endpoint POST /groups group creation with unicode in group name can create group[0m
[36m    # returns 400[0m
[36m    # ./spec/api/account/account_group_spec.rb:345[0m
[33m  opscode-account groups /groups/<name> endpoint PUT /groups/<name> permissions admin user cannot remove self from group can update group[0m
[36m    # pending discussion[0m
[36m    # ./spec/api/account/account_group_spec.rb:648[0m
[33m  opscode-account groups /groups/<name> endpoint PUT /groups/<name> permissions normal user with update ACE cannot remove self can update group[0m
[36m    # pending discussion[0m
[36m    # ./spec/api/account/account_group_spec.rb:704[0m
[33m  opscode-account groups /groups/<name> endpoint PUT /groups/<name> updating groups with bogus client returns 400[0m
[36m    # returns 500 instead[0m
[36m    # ./spec/api/account/account_group_spec.rb:1040[0m
[33m  opscode-account groups /groups/<name> endpoint PUT /groups/<name> updating groups with bogus user returns 400[0m
[36m    # returns 500 instead[0m
[36m    # ./spec/api/account/account_group_spec.rb:1062[0m
[33m  opscode-account groups /groups/<name> endpoint PUT /groups/<name> updating groups with bogus group returns 400[0m
[36m    # returns 500 instead[0m
[36m    # ./spec/api/account/account_group_spec.rb:1084[0m
[33m  opscode-account groups /groups/<name> endpoint PUT /groups/<name> updating groups with bogus actors returns 400[0m
[36m    # returns 200(!) instead (but it doesn't actually change anything)[0m
[36m    # ./spec/api/account/account_group_spec.rb:1139[0m
[33m  chef server authorization checks for roles without starting resource POST /roles with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:112[0m
[33m  chef server authorization checks for roles with starting resource PUT /roles/<name> with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:199[0m
[33m  chef server authorization checks for roles with starting resource DELETE /roles/<name> with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:262[0m
[33m  chef server authorization checks for roles with starting resource GET /roles with a client GET /roles succeeds[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:309[0m
[33m  chef server authorization checks for roles with starting resource GET /roles/<name> with a client GET /roles/<name> succeeds[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:364[0m
[33m  chef server authorization checks for environments without starting resource POST /environments with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:112[0m
[33m  chef server authorization checks for environments with starting resource PUT /environments/<name> with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:199[0m
[33m  chef server authorization checks for environments with starting resource DELETE /environments/<name> with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:262[0m
[33m  chef server authorization checks for environments with starting resource GET /environments with a client GET /environments succeeds[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:309[0m
[33m  chef server authorization checks for environments with starting resource GET /environments/<name> with a client GET /environments/<name> succeeds[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:364[0m
[33m  chef server authorization checks for nodes without starting resource POST /nodes with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:112[0m
[33m  chef server authorization checks for nodes with starting resource PUT /nodes/<name> with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:199[0m
[33m  chef server authorization checks for nodes with starting resource DELETE /nodes/<name> with a client returns 403[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:262[0m
[33m  chef server authorization checks for nodes with starting resource GET /nodes with a client GET /nodes succeeds[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:309[0m
[33m  chef server authorization checks for nodes with starting resource GET /nodes/<name> with a client GET /nodes/<name> succeeds[0m
[36m    # No reason given[0m
[36m    # ./spec/api/auth_spec.rb:364[0m
[33m  opscode-account endpoint Client Creation by a validator a new validator should have read / create permissions on clients container[0m
[36m    # No reason given[0m
[36m    # ./spec/api/clients/account_client_spec.rb:264[0m
[33m  Client API endpoint PUT /clients/<name> as an admin requestor RSpec::ExampleGroups::ClientAPIEndpoint::PUTClientsName::AsAnAdminRequestor::AdminUpdatesToValidatorClientAppearToBeMisbehavingOrMisconfigured[0m
[36m    # No reason given[0m
[36m    # ./spec/api/clients/complete_endpoint_spec.rb:379[0m
[33m  Client API endpoint PUT /clients/<name> as a normal client with self normal clients should not be able to upgrade themselves to validator - are we testing what we think we are?[0m
[36m    # No reason given[0m
[36m    # ./spec/api/clients/complete_endpoint_spec.rb:456[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults basic tests with empty metadata create returns 400[0m
[36m    # FIXME - server needs to add validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'resources' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'resources' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'providers' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'providers' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'recipes' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'recipes' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'definitions' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'definitions' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'libraries' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'libraries' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'attributes' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'attributes' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'files' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'files' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'templates' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'templates' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'root_files' set to a String create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults with segment 'root_files' set to an Array with one empty JSON object create returns 400[0m
[36m    # FIXME - server returns 500[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with metadata section 'platforms' set to a string create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with a malformed constraint for metadata section platforms create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with metadata section 'dependencies' set to a string create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with a malformed constraint for metadata section dependencies create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with metadata section 'recommendations' set to a string create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with a malformed constraint for metadata section recommendations create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with metadata section 'suggestions' set to a string create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with a malformed constraint for metadata section suggestions create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with metadata section 'conflicting' set to a string create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with a malformed constraint for metadata section conflicting create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with metadata section 'replacing' set to a string create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with a malformed constraint for metadata section replacing create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '> 1' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '< 2' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '3' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '<= 4' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '~> 5' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '>= 6' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '= 7' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '>= 1.2.3.4' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Cookbook Artifacts API endpoint PUT /cookbook_artifacts/<name>/<version> [create] creating broken cookbook_artifacts to test validation and defaults checking metadata sections with invalid metadata dependency '<= 5.6.7.8.9.0' create returns 400[0m
[36m    # FIXME - missing server validation[0m
[36m    # ./spec/api/cookbook_artifacts/create_spec.rb:177[0m
[33m  Environments API Endpoint POST /environments with no additional environments when handling the payload with authentication headers with successful user missing X-Ops-Userid returns 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint POST /environments with no additional environments when handling the payload with authentication headers with successful user empty X-Ops-Userid returns 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint POST /environments with no additional environments when handling the payload with authentication headers with successful user absolutely immense X-Ops-Userid returns 401[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint POST /environments with no additional environments when handling the payload when sending something other than application/json webmachine not sucking[0m
[36m    # No reason given[0m
[36m    # ./spec/api/environments/create_oss_spec.rb:104[0m
[33m  Environments API Endpoint POST /environments with no additional environments when validating for name ejson:decode eats nulls with name = abc 123 it reports 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/environment_util.rb:214[0m
[33m  Environments API Endpoint POST /environments with no additional environments when handling the payload[0m
[36m    # No reason given[0m
[36m    # ./spec/api/environments/create_spec.rb:133[0m
[33m  Environments API Endpoint with non-default environments in the organization DELETE /environments/<name> when authenticating with successful user missing X-Ops-Userid returns 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint with non-default environments in the organization DELETE /environments/<name> when authenticating with successful user empty X-Ops-Userid returns 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint with non-default environments in the organization DELETE /environments/<name> when authenticating with successful user absolutely immense X-Ops-Userid returns 401[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint GET /environments with no additional environments should respond to cookbook versions[0m
[36m    # Not yet implemented[0m
[36m    # ./spec/api/environments/read_oss_spec.rb:49[0m
[33m  Environments API Endpoint GET /environments/<name> when handling authentication headers with successful user missing X-Ops-Userid returns 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint GET /environments/<name> when handling authentication headers with successful user empty X-Ops-Userid returns 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint GET /environments/<name> when handling authentication headers with successful user absolutely immense X-Ops-Userid returns 401[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint GET with no additional environments should respond to cookbook versions[0m
[36m    # Not yet implemented[0m
[36m    # ./spec/api/environments/read_spec.rb:65[0m
[33m  Environments API Endpoint with non-default environments in the organization PUT /environments/<name> when handling request headers and payload with authentication headers with successful user missing X-Ops-Userid returns 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint with non-default environments in the organization PUT /environments/<name> when handling request headers and payload with authentication headers with successful user empty X-Ops-Userid returns 400[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint with non-default environments in the organization PUT /environments/<name> when handling request headers and payload with authentication headers with successful user absolutely immense X-Ops-Userid returns 401[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/auth_headers_util.rb:135[0m
[33m  Environments API Endpoint with non-default environments in the organization PUT /environments/<name> when handling request headers and payload when sending something other than application/json webmachine not sucking[0m
[36m    # No reason given[0m
[36m    # ./spec/api/environments/update_oss_spec.rb:119[0m
[33m  knife node create with an existing node of the same name as an admin should fail[0m
[36m    # CHEF-982: `knife node create` does not report name conflicts[0m
[36m    # ./spec/api/knife/nodes/create_spec.rb:41[0m
[33m  knife role create [ROLE] with an existing role of the same name as an admin should fail[0m
[36m    # CHEF-982: `knife role create` does not report name conflicts[0m
[36m    # ./spec/api/knife/roles/create_spec.rb:41[0m
[33m  /organizations GET /organizations/:id when the user requests a valid organization erlang will not return the assigned_at field[0m
[36m    # No reason given[0m
[36m    # ./spec/api/organization_spec.rb:71[0m
[33m  Search API endpoint /search/environment GET should return filtered results when ACL on environments exist[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/search_util.rb:108[0m
[33m  Search API endpoint /search/environment POST should return filtered results when ACLs exist[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/search_util.rb:459[0m
[33m  Search API endpoint /search/node GET should return filtered results when ACL on nodes exist[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/search_util.rb:108[0m
[33m  Search API endpoint /search/node POST should return filtered results when ACLs exist[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/search_util.rb:459[0m
[33m  Search API endpoint /search/role GET should return filtered results when ACL on roles exist[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/search_util.rb:108[0m
[33m  Search API endpoint /search/role POST should return filtered results when ACLs exist[0m
[36m    # No reason given[0m
[36m    # ./lib/pedant/rspec/search_util.rb:459[0m
[33m  Search API endpoint /search/<data_bag> using GET an existing data bag should return no results to an unauthorized user[0m
[36m    # No reason given[0m
[36m    # ./spec/api/search/search_spec.rb:415[0m
[33m  Search API endpoint /search/<data_bag> using POST for a nonexistent data bag does something[0m
[36m    # Not yet implemented[0m
[36m    # ./spec/api/search/search_spec.rb:433[0m
[33m  Server API v1 Behaviors [v1+] search results should not include client key data[0m
[36m    # No reason given[0m
[36m    # ./spec/api/versioned_behaviors/server_api_v1_spec.rb:73[0m

Failures:

  1) license GET /license with no nodes returns 200 and correct body for superuser
     [31mFailure/Error:[0m [31mget(request_url, superuser).should look_like([0m
       [31m[0m
       [31mExpected a full match of the result[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>1,[0m
       [31m "upgrade_url"=>"http://www.getchef.com/contact/on-premises-simple"}[0m
       [31m[0m
       [31m[0m
       [31mto the spec[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>0,[0m
       [31m "upgrade_url"=>/^http\:\/\.*/}[0m
       [31m[0m
       [31m[0m
       [31mto succeed, but it didn't![0m
[36m     # ./spec/api/license_spec.rb:30:in `block (4 levels) in <top (required)>'[0m

  2) license GET /license with no nodes returns 200 and correct body for admin user
     [31mFailure/Error:[0m [31mget(request_url, platform.admin_user).should look_like([0m
       [31m[0m
       [31mExpected a full match of the result[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>1,[0m
       [31m "upgrade_url"=>"http://www.getchef.com/contact/on-premises-simple"}[0m
       [31m[0m
       [31m[0m
       [31mto the spec[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>0,[0m
       [31m "upgrade_url"=>/^http\:\/\.*/}[0m
       [31m[0m
       [31m[0m
       [31mto succeed, but it didn't![0m
[36m     # ./spec/api/license_spec.rb:37:in `block (4 levels) in <top (required)>'[0m

  3) license GET /license with no nodes returns 200 and correct body for normal user
     [31mFailure/Error:[0m [31mget(request_url, platform.non_admin_user).should look_like([0m
       [31m[0m
       [31mExpected a full match of the result[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>1,[0m
       [31m "upgrade_url"=>"http://www.getchef.com/contact/on-premises-simple"}[0m
       [31m[0m
       [31m[0m
       [31mto the spec[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>0,[0m
       [31m "upgrade_url"=>/^http\:\/\.*/}[0m
       [31m[0m
       [31m[0m
       [31mto succeed, but it didn't![0m
[36m     # ./spec/api/license_spec.rb:44:in `block (4 levels) in <top (required)>'[0m

  4) license GET /license with nodes with one node should return correct body for license status
     [31mFailure/Error:[0m [31mget(request_url, superuser).should look_like([0m
       [31m[0m
       [31mExpected a full match of the result[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>2,[0m
       [31m "upgrade_url"=>"http://www.getchef.com/contact/on-premises-simple"}[0m
       [31m[0m
       [31m[0m
       [31mto the spec[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>1,[0m
       [31m "upgrade_url"=>/^http\:\/\.*/}[0m
       [31m[0m
       [31m[0m
       [31mto succeed, but it didn't![0m
[36m     # ./spec/api/license_spec.rb:85:in `block (5 levels) in <top (required)>'[0m

  5) license GET /license with nodes with 25 nodes (license not exceeded) should return correct body for license status
     [31mFailure/Error:[0m [31mget(request_url, superuser).should look_like([0m
       [31m[0m
       [31mExpected a full match of the result[0m
       [31m[0m
       [31m  {"limit_exceeded"=>true,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>26,[0m
       [31m "upgrade_url"=>"http://www.getchef.com/contact/on-premises-simple"}[0m
       [31m[0m
       [31m[0m
       [31mto the spec[0m
       [31m[0m
       [31m  {"limit_exceeded"=>false,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>25,[0m
       [31m "upgrade_url"=>/^http\:\/\.*/}[0m
       [31m[0m
       [31m[0m
       [31mto succeed, but it didn't![0m
[36m     # ./spec/api/license_spec.rb:96:in `block (5 levels) in <top (required)>'[0m

  6) license GET /license with nodes with  26 (license exceeded) should return correct body for license status
     [31mFailure/Error:[0m [31mget(request_url, superuser).should look_like([0m
       [31m[0m
       [31mExpected a full match of the result[0m
       [31m[0m
       [31m  {"limit_exceeded"=>true,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>27,[0m
       [31m "upgrade_url"=>"http://www.getchef.com/contact/on-premises-simple"}[0m
       [31m[0m
       [31m[0m
       [31mto the spec[0m
       [31m[0m
       [31m  {"limit_exceeded"=>true,[0m
       [31m "node_license"=>25,[0m
       [31m "node_count"=>26,[0m
       [31m "upgrade_url"=>/^http\:\/\.*/}[0m
       [31m[0m
       [31m[0m
       [31mto succeed, but it didn't![0m
[36m     # ./spec/api/license_spec.rb:106:in `block (5 levels) in <top (required)>'[0m

  7) Server-side reindexing reindexing OPC it should behave like Reindexing works for all object types
     [31mFailure/Error:[0m [31midentifiers.should_not include(name)[0m
       [31mexpected ["pedant_node_test"] not to include "pedant_node_test"[0m
     Shared Example Group: "Reindexing" called from ./spec/api/reindex_spec.rb:19
[36m     # ./lib/pedant/rspec/search_util.rb:844:in `block in do_search'[0m
[36m     # ./lib/pedant/rspec/search_util.rb:715:in `with_search_polling'[0m
[36m     # ./lib/pedant/rspec/search_util.rb:830:in `do_search'[0m
[36m     # ./lib/pedant/rspec/search_util.rb:826:in `should_not_find'[0m
[36m     # ./lib/pedant/rspec/search_util.rb:862:in `block (2 levels) in <module:RSpec>'[0m

Finished in 26 minutes 47 seconds
[31m3414 examples, 7 failures, 99 pending[0m

Failed examples:

[31mrspec ./spec/api/license_spec.rb:29[0m [36m# license GET /license with no nodes returns 200 and correct body for superuser[0m
[31mrspec ./spec/api/license_spec.rb:36[0m [36m# license GET /license with no nodes returns 200 and correct body for admin user[0m
[31mrspec ./spec/api/license_spec.rb:43[0m [36m# license GET /license with no nodes returns 200 and correct body for normal user[0m
[31mrspec ./spec/api/license_spec.rb:84[0m [36m# license GET /license with nodes with one node should return correct body for license status[0m
[31mrspec ./spec/api/license_spec.rb:95[0m [36m# license GET /license with nodes with 25 nodes (license not exceeded) should return correct body for license status[0m
[31mrspec ./spec/api/license_spec.rb:105[0m [36m# license GET /license with nodes with  26 (license exceeded) should return correct body for license status[0m
[31mrspec ./lib/pedant/rspec/search_util.rb:849[0m [36m# Server-side reindexing reindexing OPC it should behave like Reindexing works for all object types[0m

Randomized with seed 24150

