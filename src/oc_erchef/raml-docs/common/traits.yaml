#%RAML 0.8
---
- error_response:
    body:
      schema: ../schemas/definitions.json#Errors

- chef_endpoint:
    headers:
      Accept:
        description: Acceptable response types. Must include application/json.
        type: string
      X-Ops-Server-Api-Version:
        displayName: X-Ops-Server-Api-Version
        description: Integer describing the API version that the client wishes the server to use to process the request.
      X-Ops-Timestamp:
        description: The timestamp of this message in UTC, in format YYYY-MM-DDTH:M:SZ
#        regex: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\dZ
        example: 2015-08-12T13:02:23Z
      X-Ops-Userid:
        description: The name of the user or client
      X-Chef-Version:
        description: Version of the chef client
#        regex: \d+\.\d+\.\d+
      X-Ops-Content-Hash:
        description: A hash of the body of the request, using SHA1, encoded in Base64 with line breaks every 60 characters.
      X-Ops-Sign:
        description: Metadata about the signature (such as version).
        example: version=1.0
      X-Ops-Authorization-N:
        description: |
          A signed copy of the following header data, signed with the client or
          user's private key, and encoded in Base64. Must be broken into a series
          of sequential headers of no more than 60 Base64 characters, e.g.
          `X-Ops-Authorization-1`, `X-Ops-Authorization-2`, etc. which
          concatenated together form the signed data.
          ```
          Method:HTTP_METHOD
          Hashed Path:HASHED_PATH
          X-Ops-Content-Hash:HASHED_BODY
          X-Ops-Timestamp:TIME
          X-Ops-UserId:USERID
          ```
    responses:
      401:
        description: When authentication fails.
        body:
          schema: ../schemas/definitions.xml#Errors
      403:
        description: When the requester does not have permission to perform this action.
        body:
          schema: ../schemas/definitions.xml#Errors
      406:
        description: When the Accept header does not include application/json.
        body:
          schema: ../schemas/definitions.xml#Errors

- validated:
    responses:
      400:
        description: When the request parameters or body have missing or invalid fields
        body:
          schema: ../schemas/definitions.xml#Errors

- not_found:
    responses:
      404:
        description: When the resource (or parent resource) does not exist.
        body:
          schema: ../schemas/definitions.xml#Errors

- parent_not_found:
    responses:
      404:
        description: When the parent resource does not exist.
        body:
          schema: ../schemas/definitions.xml#Errors

- conflict:
    responses:
      409:
        description: Whemn the resource already exists.
        body:
          schema: ../schemas/definitions.xml#Errors

- created:
    responses:
      201:
        headers:
          Location:
            description: Location of newly-created resource (URI).
