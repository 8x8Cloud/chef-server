#%RAML 0.8
---
description: Agents authorized to manage nodes.
type: list_endpoint

get:
  description: List all clients for an organization.
  responses:
    200:
      body:
        schema: Client
        example: |
          {
            "org1-validator" : "https://chef.example/orgaizations/org1/clients/org1-validator",
            "client1" : "https://chef.example/orgaizations/org1/clients/client1"
          }

post:
  body:
    schema: CreateClient
    example: !include examples/clients-post.json
  description: Create a new client in an organization.
  responses:
    201:
      headers: !include common/location-header.yml
      body:
        schema: CreatedClient
        example: |
          {
            "uri"=>"https://chef.example/orgaizations/org1/clients/client1",
            "chef_key" : {
              "name" : "default",
              "public_key" : "-----BEGIN PUBLIC KEY-----",
              "private_key" : "-----BEGIN RSA PRIVATE KEY-----"
          }

/{client}:
  description: Manage individual clients that exist in an organization.
  type: item_endpoint
  uriParameters:
    client:
      description: Name of the client you wish to perform an action on.
      type: string

  get:
    description: |
      Retrieve an individual Chef client that exists in an organization.
      No longer contains public key field. Use the keys API to retrieve a key.
    responses:
      200:
        body:
          schema: Client
          example: |
            {
              "name" : "user1",
              "validator" : "false"
            }

  put:
    description: |
      Update an existing client.
      Unlike the users endpoint, you only need to include the fields you wish update in the body.
      You can no longer update the public key via this method. Use the keys API.
    body:
      schema: CreateClient
      example: !include examples/clients-put.json
    responses:
      200:
        body:
          schema: CreatedClient
          example: |
            {"uri" : "https://chef.example/orgaizations/org1/clients/client1"}

  delete:
    description: Delete an existing client in an organization.
    responses:
      200:
        body:
          schema: Client
          example: |
            {
              "name" : "client1",
              "validator" : "false"
            }

  /keys: !include client-keys.yml

  # /_acl: acl_endpoint
  # /_identifiers: identifiers_endpoint
